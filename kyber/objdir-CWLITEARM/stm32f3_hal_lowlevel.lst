   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3_hal_lowlevel.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 ".././hal//stm32f3/stm32f3_hal_lowlevel.c"
  18              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_NVIC_SetPriority
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_NVIC_SetPriority:
  26              	.LVL0:
  27              	.LFB126:
   1:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /* This file combines several STM32F4 HAL Functions into one file. This was done
   2:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    for space reasons, to avoid having several MB of HAL functions that most people
   3:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    will not use. In addition this HAL is slightly less demanding (no interrupts),
   4:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    but less robust as doesn't implement the timeouts.
   5:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    
   6:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    The original HAL files are COPYRIGHT STMicroelectronics, as shown below:
   7:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** */
   8:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
   9:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /*
  10:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
  11:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
  12:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * Redistribution and use in source and binary forms, with or without modification,
  13:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * are permitted provided that the following conditions are met:
  14:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  15:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer.
  16:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  17:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *      this list of conditions and the following disclaimer in the documentation
  18:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *      and/or other materials provided with the distribution.
  19:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  20:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *      may be used to endorse or promote products derived from this software
  21:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *      without specific prior written permission.
  22:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
  23:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  24:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  25:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  26:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  27:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  28:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  29:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  30:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  31:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  32:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  33:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
  34:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   ******************************************************************************
  35:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** */ 
  36:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  37:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  38:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3_hal.h"
  39:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3_hal_lowlevel.h"
  40:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_rcc.h"
  41:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_gpio.h"
  42:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_dma.h"
  43:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_uart.h"
  44:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_flash.h"
  45:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #include "stm32f3xx_hal_cortex.h"
  46:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  47:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define assert_param(expr) ((void)0U)
  48:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t hal_sys_tick = 0;
  49:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t uwTick = 0;
  50:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t SystemCoreClock = 8000000U;
  51:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  52:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
  53:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
  28              		.loc 1 53 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  54:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t prioritygroup = 0x00U;
  32              		.loc 1 54 3 view .LVU1
  55:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
  56:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
  57:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  33              		.loc 1 57 3 view .LVU2
  58:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  34              		.loc 1 58 3 view .LVU3
  59:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
  60:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   prioritygroup = NVIC_GetPriorityGrouping();
  35              		.loc 1 60 3 view .LVU4
  36              	.LBB168:
  37              	.LBI168:
  38              		.file 2 ".././hal//stm32f3/CMSIS/core/core_cm4.h"
   1:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**************************************************************************//**
   2:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  * @file     core_cm4.h
   3:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  * @version  V4.30
   5:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  * @date     20. October 2015
   6:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
   7:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
   9:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    All rights reserved.
  10:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      to endorse or promote products derived from this software without
  19:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      specific prior written permission.
  20:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    *
  21:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  34:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  35:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if   defined ( __ICCARM__ )
  36:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
  40:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  41:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  44:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #include <stdint.h>
  45:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  46:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
  47:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  extern "C" {
  48:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
  49:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  50:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
  51:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  54:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  56:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  57:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      Unions are used for effective representation of core registers.
  59:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  60:.././hal//stm32f3/CMSIS/core/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:.././hal//stm32f3/CMSIS/core/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  62:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
  63:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  64:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  65:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
  66:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  *                 CMSIS definitions
  67:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
  68:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
  69:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup Cortex_M4
  70:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
  71:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
  72:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  73:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*  CMSIS CM4 definitions */
  74:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  77:.././hal//stm32f3/CMSIS/core/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  79:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  80:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  81:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  82:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if   defined ( __CC_ARM )
  83:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  86:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  87:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  91:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  92:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
  93:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
  96:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  97:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
  98:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 101:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 102:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TMS470__ )
 103:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 105:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 106:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 107:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 110:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 111:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 112:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __packed
 113:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define __STATIC_INLINE  static inline
 116:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 117:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #else
 118:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #error Unknown compiler
 119:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 120:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 121:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
 124:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if defined ( __CC_ARM )
 125:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 126:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 127:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 128:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 129:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 131:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 132:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 133:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 134:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 135:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 136:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined __ARM_PCS_VFP
 138:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 139:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 140:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 141:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 143:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 144:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 145:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 146:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 147:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 148:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __GNUC__ )
 149:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 151:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 152:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 153:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 155:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 156:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 157:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 158:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 159:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 160:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __ICCARM__ )
 161:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined __ARMVFP__
 162:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 163:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 164:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 165:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 167:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 168:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 169:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 170:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 171:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 172:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TMS470__ )
 173:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 174:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 175:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 176:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 177:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 179:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 180:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 181:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 182:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 183:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 184:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __TASKING__ )
 185:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if defined __FPU_VFP__
 186:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 187:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 188:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 189:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 191:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 192:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 193:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 194:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 195:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 196:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #elif defined ( __CSMC__ )
 197:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 198:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 199:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       1U
 200:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #else
 201:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:.././hal//stm32f3/CMSIS/core/core_cm4.h ****       #define __FPU_USED       0U
 203:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #endif
 204:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #else
 205:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_USED         0U
 206:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 207:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 208:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 209:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 210:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 214:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 215:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
 216:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 217:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 218:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 219:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 220:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CMSIS_GENERIC
 221:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 222:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 223:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 224:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 225:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 226:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  extern "C" {
 227:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 228:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 229:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* check device defines and use defaults */
 230:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 231:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __CM4_REV
 232:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __CM4_REV               0x0000U
 233:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 234:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 235:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 236:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __FPU_PRESENT
 237:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __FPU_PRESENT             0U
 238:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 240:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 241:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __MPU_PRESENT
 242:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __MPU_PRESENT             0U
 243:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 245:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 246:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 247:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 248:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 249:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 250:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 251:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 252:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 253:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 254:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #endif
 255:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 256:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 257:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 258:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 259:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 260:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 261:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 262:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     \li to specify the access to peripheral variables.
 263:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 264:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
 265:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #ifdef __cplusplus
 266:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 267:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #else
 268:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 269:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
 270:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 271:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 272:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 273:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* following defines should be used for structure members */
 274:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 275:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 276:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 277:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 278:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group Cortex_M4 */
 279:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 280:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 281:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 282:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
 283:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  *                 Register Abstraction
 284:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   Core Register contain:
 285:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core Register
 286:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core NVIC Register
 287:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core SCB Register
 288:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core SysTick Register
 289:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core Debug Register
 290:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core MPU Register
 291:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core FPU Register
 292:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
 293:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 294:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 295:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 296:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
 297:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 298:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 299:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 300:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 301:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief      Core Register type definitions.
 302:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 303:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 304:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 305:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 306:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 307:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 308:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef union
 309:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 310:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   struct
 311:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 312:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 313:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 314:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 315:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 316:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 317:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 318:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 319:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 320:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 321:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 322:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } APSR_Type;
 323:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 324:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* APSR Register Definitions */
 325:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 326:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 327:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 328:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 329:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 330:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 331:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 332:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 333:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 334:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 335:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 336:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 337:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 338:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 339:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 340:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 341:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 342:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 343:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 344:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 345:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 346:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 347:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef union
 348:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 349:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   struct
 350:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 351:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 352:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 353:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 354:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 355:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } IPSR_Type;
 356:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 357:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* IPSR Register Definitions */
 358:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 359:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 360:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 361:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 362:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 363:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 364:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 365:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef union
 366:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 367:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   struct
 368:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 369:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 370:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 371:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 372:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 373:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 374:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 375:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 376:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 377:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 378:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 379:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 380:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 381:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 382:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } xPSR_Type;
 383:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 384:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* xPSR Register Definitions */
 385:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 386:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 387:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 388:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 389:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 390:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 391:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 392:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 393:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 394:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 395:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 396:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 397:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 398:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 399:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 400:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 401:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 402:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 403:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 404:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 405:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 406:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 407:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 408:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 409:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 410:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 411:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 412:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 413:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 414:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 415:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 416:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef union
 417:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 418:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   struct
 419:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 420:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 421:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 422:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 423:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 424:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 425:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 426:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } CONTROL_Type;
 427:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 428:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* CONTROL Register Definitions */
 429:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 430:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 431:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 432:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 433:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 434:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 435:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 436:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 437:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 438:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CORE */
 439:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 440:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 441:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 442:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
 443:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 444:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 445:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 446:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 447:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 448:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 449:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 450:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 451:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 452:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 453:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 454:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[24U];
 455:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 456:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RSERVED1[24U];
 457:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 458:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[24U];
 459:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 460:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[24U];
 461:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 462:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[56U];
 463:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 464:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[644U];
 465:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 466:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }  NVIC_Type;
 467:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 468:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 469:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 470:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 471:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 472:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 473:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 474:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 475:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 476:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 477:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 478:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 479:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 480:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 481:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 482:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 483:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 484:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 485:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 486:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 487:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 488:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 489:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 490:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 491:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 492:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 493:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 494:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 495:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 496:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 497:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 498:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 499:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 500:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 501:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 502:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 503:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 504:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 505:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 506:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[5U];
 507:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 508:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } SCB_Type;
 509:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 510:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB CPUID Register Definitions */
 511:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 512:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 513:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 514:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 515:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 516:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 517:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 518:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 519:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 520:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 521:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 522:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 523:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 524:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 525:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 526:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 527:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 528:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 529:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 530:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 531:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 532:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 533:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 534:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 535:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 536:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 537:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 538:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 539:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 540:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 541:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 542:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 543:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 544:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 545:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 546:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 547:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 548:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 549:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 550:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 551:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 552:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 553:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 554:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 555:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 556:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 557:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 558:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 559:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 560:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 561:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 562:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 563:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 564:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 565:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 566:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 567:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 568:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 569:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 570:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 571:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 572:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 573:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 574:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 575:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 576:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 577:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 578:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 579:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 580:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 581:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 582:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 583:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB System Control Register Definitions */
 584:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 585:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 586:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 587:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 588:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 589:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 590:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 591:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 592:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 593:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 594:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 595:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 596:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 597:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 598:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 599:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 600:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 601:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 602:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 603:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 604:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 605:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 606:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 607:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 608:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 609:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 610:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 611:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 612:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 613:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 614:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 615:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 616:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 617:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 618:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 619:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 620:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 621:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 622:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 623:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 624:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 625:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 626:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 627:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 628:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 629:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 630:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 631:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 632:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 633:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 634:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 635:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 636:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 637:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 638:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 639:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 640:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 641:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 642:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 643:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 644:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 645:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 646:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 647:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 648:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 649:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 650:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 651:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 652:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 653:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 654:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 655:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 656:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 657:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 658:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 659:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 660:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 661:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 662:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 663:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 664:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 665:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 666:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 667:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 668:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 669:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 670:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 671:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 672:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 673:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 674:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 675:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 676:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 677:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 678:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 679:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 680:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 681:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 682:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 683:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 684:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 685:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 686:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 687:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 688:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 689:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 690:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 691:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCB */
 692:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 693:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 694:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 695:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 696:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 697:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 698:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 699:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 700:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 701:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 703:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 704:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 705:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 707:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 708:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 709:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } SCnSCB_Type;
 710:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 711:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 712:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 713:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 714:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 715:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Auxiliary Control Register Definitions */
 716:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 717:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 718:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 719:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 720:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 721:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 722:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 723:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 724:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 725:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 726:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 727:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 728:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 729:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 730:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 731:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 732:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 733:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 734:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 735:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 736:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 737:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 738:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 739:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 740:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 741:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 742:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 743:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 744:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 745:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 746:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 747:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 748:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 749:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 750:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } SysTick_Type;
 751:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 752:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 753:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 754:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 755:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 756:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 757:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 758:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 759:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 760:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 761:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 762:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 763:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 764:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 765:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Reload Register Definitions */
 766:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 767:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 768:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 769:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Current Register Definitions */
 770:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 771:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 772:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 773:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* SysTick Calibration Register Definitions */
 774:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 775:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 776:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 777:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 778:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 779:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 780:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 781:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 782:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 783:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 784:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 785:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 786:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 787:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 788:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 789:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 790:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 791:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 792:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 793:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 794:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 795:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 796:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 797:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 798:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __OM  union
 799:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 800:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 801:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 802:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 803:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 804:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[864U];
 805:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 806:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[15U];
 807:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 808:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[15U];
 809:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 810:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[29U];
 811:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 812:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 813:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 814:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[43U];
 815:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 816:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 817:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[6U];
 818:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 819:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 820:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 821:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 822:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 823:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 824:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 825:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 826:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 827:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 828:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 829:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 830:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } ITM_Type;
 831:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 832:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 833:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 834:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 835:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 836:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Trace Control Register Definitions */
 837:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 838:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 839:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 840:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 841:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 842:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 843:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 844:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 845:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 846:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 847:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 848:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 849:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 850:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 851:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 852:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 853:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 854:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 855:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 856:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 857:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 858:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 859:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 860:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 861:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 862:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 863:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 864:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Write Register Definitions */
 865:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 866:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 867:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 868:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Read Register Definitions */
 869:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 870:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 871:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 872:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 873:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 874:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 875:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 876:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 880:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 883:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 886:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 888:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 889:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 890:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
 894:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 895:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 896:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
 897:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
 899:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
 900:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
 901:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } DWT_Type;
 925:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 926:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Control Register Definitions */
 927:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 930:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 933:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 936:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 939:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 942:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 945:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 948:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 951:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 954:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 957:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 960:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 963:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 966:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 969:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 972:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 975:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 978:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 981:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 985:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 989:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 993:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
 997:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1001:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1005:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1009:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1012:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1015:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1018:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1021:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1024:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1027:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1030:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1033:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1035:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1036:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1037:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1041:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1042:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1043:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1044:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1046:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1047:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1048:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1060:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } TPI_Type;
1073:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1074:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1078:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1082:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1086:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1089:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1092:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1095:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1099:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1102:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1106:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1110:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1113:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1116:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1119:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1122:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1125:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1128:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1130:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1131:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1132:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1133:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1134:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1135:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1136:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1137:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1138:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1139:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1140:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1141:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1142:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1143:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1144:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1145:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1146:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1147:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1148:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1149:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1150:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1151:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1152:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1153:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1154:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1155:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1156:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1157:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1158:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1159:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1160:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1161:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1162:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI DEVID Register Definitions */
1163:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1164:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1165:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1166:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1167:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1168:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1169:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1170:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1171:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1172:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1173:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1174:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1175:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1176:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1177:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1178:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1179:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1180:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1181:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1182:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1183:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1184:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1185:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1186:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1187:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1188:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1189:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1190:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1191:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1192:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1193:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1194:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1195:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1196:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1197:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1198:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1199:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1200:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1201:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1202:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1203:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1204:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1205:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1206:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1207:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1208:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1209:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1210:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1211:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1212:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1213:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1214:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1215:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } MPU_Type;
1216:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1217:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* MPU Type Register Definitions */
1218:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1219:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1220:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1221:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1222:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1223:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1224:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1225:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1226:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1227:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* MPU Control Register Definitions */
1228:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1229:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1230:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1231:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1232:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1233:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1234:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1235:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1236:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1237:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Number Register Definitions */
1238:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1239:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1240:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1241:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1242:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1243:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1244:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1245:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1246:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1247:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1248:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1249:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1250:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1251:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1252:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1253:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1254:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1255:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1256:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1257:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1258:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1259:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1260:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1261:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1262:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1263:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1264:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1265:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1266:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1267:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1268:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1269:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1270:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1271:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1272:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1273:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1274:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1275:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1276:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1277:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1278:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1279:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1280:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1281:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1282:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_MPU */
1283:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
1284:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1285:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1286:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1287:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1288:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1289:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1290:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1291:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1292:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1293:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1294:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1295:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1296:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1297:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1298:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1299:.././hal//stm32f3/CMSIS/core/core_cm4.h ****         uint32_t RESERVED0[1U];
1300:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1301:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1302:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1303:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1304:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1305:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } FPU_Type;
1306:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1307:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1308:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1309:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1310:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1311:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1312:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1313:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1314:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1315:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1316:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1317:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1318:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1319:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1320:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1321:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1322:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1323:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1324:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1325:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1326:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1327:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1328:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1329:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1330:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1331:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1332:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1333:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1334:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1335:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1336:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1337:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1338:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1339:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1340:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1341:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1342:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1343:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1344:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1345:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1346:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1347:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1348:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1349:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1350:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1351:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1352:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1353:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1354:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1355:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1356:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1357:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1358:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1359:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1360:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1361:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1362:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1363:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1364:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1365:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1366:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1367:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1368:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1369:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1370:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1371:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1372:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1373:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1374:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1375:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1376:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1377:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1378:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1379:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1380:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1381:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1382:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1383:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1384:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1385:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1386:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1387:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1388:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1389:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1390:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_FPU */
1391:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
1392:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1393:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1394:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1395:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_core_register
1396:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1397:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1398:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1399:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1400:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1401:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1402:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1403:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1404:.././hal//stm32f3/CMSIS/core/core_cm4.h **** typedef struct
1405:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1406:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1407:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1408:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1409:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1410:.././hal//stm32f3/CMSIS/core/core_cm4.h **** } CoreDebug_Type;
1411:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1412:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1413:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1414:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1415:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1416:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1417:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1418:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1419:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1420:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1421:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1422:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1423:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1424:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1425:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1426:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1427:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1428:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1429:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1430:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1431:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1432:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1433:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1434:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1435:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1436:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1437:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1438:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1439:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1440:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1441:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1442:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1443:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1444:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1445:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1446:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1447:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1448:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1449:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1450:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1451:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1452:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1453:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1454:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1455:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1456:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1457:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1458:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1459:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1460:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1461:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1462:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1463:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1464:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1465:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1466:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1467:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1468:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1469:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1470:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1471:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1472:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1473:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1474:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1475:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1476:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1477:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1478:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1479:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1480:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1481:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1482:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1483:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1484:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1485:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1486:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1487:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1488:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1489:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1490:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1491:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1492:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1493:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1494:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1495:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1496:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1497:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1498:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1499:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1500:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1501:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1502:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1503:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1504:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1505:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1506:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1507:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1508:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1509:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param[in] value  Value of the bit field.
1510:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return           Masked and shifted value.
1511:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
1512:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1513:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1514:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1515:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1516:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param[in] field  Name of the register bit field.
1517:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param[in] value  Value of register.
1518:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return           Masked and shifted bit field value.
1519:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
1520:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1521:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1522:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1523:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1524:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1525:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1526:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup    CMSIS_core_register
1527:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1528:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1529:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1530:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1531:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1532:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1533:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1534:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1535:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1536:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1537:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1538:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1539:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1540:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1541:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1542:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1543:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1544:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1545:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1546:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1547:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1548:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1549:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1550:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1551:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if (__MPU_PRESENT == 1U)
1552:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1553:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1554:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
1555:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1556:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #if (__FPU_PRESENT == 1U)
1557:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1558:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1559:.././hal//stm32f3/CMSIS/core/core_cm4.h **** #endif
1560:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1561:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*@} */
1562:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1563:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1564:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1565:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /*******************************************************************************
1566:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  *                Hardware Abstraction Layer
1567:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   Core Function Interface contains:
1568:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core NVIC Functions
1569:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core SysTick Functions
1570:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core Debug Functions
1571:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   - Core Register Access Functions
1572:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  ******************************************************************************/
1573:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1574:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1575:.././hal//stm32f3/CMSIS/core/core_cm4.h **** */
1576:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1577:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1578:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1579:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1580:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1581:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1582:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1583:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1584:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   @{
1585:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1586:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1587:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1588:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Priority Grouping
1589:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1590:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1591:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            Only values from 0..7 are used.
1592:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1593:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1594:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1595:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1596:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1597:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1598:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t reg_value;
1599:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1600:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1601:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1602:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1603:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   reg_value  =  (reg_value                                   |
1604:.././hal//stm32f3/CMSIS/core/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1605:.././hal//stm32f3/CMSIS/core/core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1606:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   SCB->AIRCR =  reg_value;
1607:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1608:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1609:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1610:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1611:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Priority Grouping
1612:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1613:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1614:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1615:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
  39              		.loc 2 1615 26 view .LVU5
  40              	.LBB169:
1616:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1617:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  41              		.loc 2 1617 3 view .LVU6
  42              		.loc 2 1617 26 is_stmt 0 view .LVU7
  43 0000 164B     		ldr	r3, .L6
  44              	.LBE169:
  45              	.LBE168:
  53:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t prioritygroup = 0x00U;
  46              		.loc 1 53 1 view .LVU8
  47 0002 30B5     		push	{r4, r5, lr}
  48              	.LCFI0:
  49              		.cfi_def_cfa_offset 12
  50              		.cfi_offset 4, -12
  51              		.cfi_offset 5, -8
  52              		.cfi_offset 14, -4
  53              	.LBB171:
  54              	.LBB170:
  55              		.loc 2 1617 26 view .LVU9
  56 0004 DC68     		ldr	r4, [r3, #12]
  57              		.loc 2 1617 11 view .LVU10
  58 0006 C4F30224 		ubfx	r4, r4, #8, #3
  59              	.LVL1:
  60              		.loc 2 1617 11 view .LVU11
  61              	.LBE170:
  62              	.LBE171:
  61:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
  62:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
  63              		.loc 1 62 3 is_stmt 1 view .LVU12
  64              	.LBB172:
  65              	.LBI172:
1618:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1619:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1620:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1621:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1622:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Enable External Interrupt
1623:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1624:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1625:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1626:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1627:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1628:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1629:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1630:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1631:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1632:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1633:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Disable External Interrupt
1634:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1635:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1636:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1637:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1638:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1639:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1640:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1641:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1642:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1643:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1644:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Pending Interrupt
1645:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1646:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1647:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not pending.
1648:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is pending.
1649:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1650:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1651:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1652:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1653:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1654:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1655:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1656:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1657:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Pending Interrupt
1658:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the pending bit of an external interrupt.
1659:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1660:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1661:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1662:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1663:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1664:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1665:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1666:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1667:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1668:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Clear Pending Interrupt
1669:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Clears the pending bit of an external interrupt.
1670:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1671:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1672:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1673:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1674:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1675:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1676:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1677:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1678:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1679:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Active Interrupt
1680:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the active register in NVIC and returns the active bit.
1681:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1682:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return             0  Interrupt status is not active.
1683:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return             1  Interrupt status is active.
1684:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1685:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1686:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1687:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1688:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1689:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1690:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1691:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1692:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Set Interrupt Priority
1693:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Sets the priority of an interrupt.
1694:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \note    The priority cannot be set for every core interrupt.
1695:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1696:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]  priority  Priority to set.
1697:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1698:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1699:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1700:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1701:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1703:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
1704:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   else
1705:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1707:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
1708:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1709:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1710:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1711:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1712:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Get Interrupt Priority
1713:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Reads the priority of an interrupt.
1714:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1715:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            or negative to specify an internal (core) interrupt.
1716:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1717:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return             Interrupt Priority.
1718:.././hal//stm32f3/CMSIS/core/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1719:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1720:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1721:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1722:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1723:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   if ((int32_t)(IRQn) < 0)
1724:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
1725:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1726:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
1727:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   else
1728:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
1729:.././hal//stm32f3/CMSIS/core/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1730:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
1731:.././hal//stm32f3/CMSIS/core/core_cm4.h **** }
1732:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1733:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1734:.././hal//stm32f3/CMSIS/core/core_cm4.h **** /**
1735:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \brief   Encode Priority
1736:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1737:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            preemptive priority value, and subpriority value.
1738:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            In case of a conflict between priority grouping and available
1739:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1740:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1741:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1742:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1743:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1744:.././hal//stm32f3/CMSIS/core/core_cm4.h ****  */
1745:.././hal//stm32f3/CMSIS/core/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
  66              		.loc 2 1745 26 view .LVU13
  67              	.LBB173:
1746:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
1747:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
  68              		.loc 2 1747 3 view .LVU14
1748:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t PreemptPriorityBits;
  69              		.loc 2 1748 3 view .LVU15
1749:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   uint32_t SubPriorityBits;
  70              		.loc 2 1749 3 view .LVU16
1750:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1751:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
  71              		.loc 2 1751 3 view .LVU17
  72              		.loc 2 1751 31 is_stmt 0 view .LVU18
  73 000a C4F10703 		rsb	r3, r4, #7
1752:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  74              		.loc 2 1752 44 view .LVU19
  75 000e 251D     		adds	r5, r4, #4
1751:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
  76              		.loc 2 1751 23 view .LVU20
  77 0010 042B     		cmp	r3, #4
  78 0012 28BF     		it	cs
  79 0014 0423     		movcs	r3, #4
  80              	.LVL2:
  81              		.loc 2 1752 3 is_stmt 1 view .LVU21
  82              		.loc 2 1752 109 is_stmt 0 view .LVU22
  83 0016 062D     		cmp	r5, #6
1753:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
1754:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   return (
1755:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  84              		.loc 2 1755 30 view .LVU23
  85 0018 4FF0FF35 		mov	r5, #-1
1752:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  86              		.loc 2 1752 109 discriminator 1 view .LVU24
  87 001c 8CBF     		ite	hi
  88 001e 033C     		subhi	r4, r4, #3
  89              	.LVL3:
1752:.././hal//stm32f3/CMSIS/core/core_cm4.h **** 
  90              		.loc 2 1752 109 discriminator 2 view .LVU25
  91 0020 0024     		movls	r4, #0
  92              	.LVL4:
1754:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  93              		.loc 2 1754 3 is_stmt 1 view .LVU26
1754:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
  94              		.loc 2 1754 3 is_stmt 0 view .LVU27
  95              	.LBE173:
  96              	.LBE172:
  97              	.LBB176:
  98              	.LBI176:
1698:.././hal//stm32f3/CMSIS/core/core_cm4.h **** {
  99              		.loc 2 1698 22 is_stmt 1 view .LVU28
 100              	.LBB177:
1700:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 101              		.loc 2 1700 3 view .LVU29
 102              	.LBE177:
 103              	.LBE176:
 104              	.LBB180:
 105              	.LBB174:
 106              		.loc 2 1755 30 is_stmt 0 view .LVU30
 107 0022 05FA03F3 		lsl	r3, r5, r3
 108              	.LVL5:
 109              		.loc 2 1755 30 view .LVU31
 110 0026 21EA0303 		bic	r3, r1, r3
 111              	.LVL6:
1756:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 112              		.loc 2 1756 30 view .LVU32
 113 002a A540     		lsls	r5, r5, r4
 114 002c 22EA0502 		bic	r2, r2, r5
 115              	.LVL7:
1755:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 116              		.loc 2 1755 82 view .LVU33
 117 0030 A340     		lsls	r3, r3, r4
 118              	.LBE174:
 119              	.LBE180:
 120              	.LBB181:
 121              	.LBB178:
1700:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   {
 122              		.loc 2 1700 6 view .LVU34
 123 0032 0028     		cmp	r0, #0
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 124              		.loc 2 1702 5 is_stmt 1 view .LVU35
 125              	.LBE178:
 126              	.LBE181:
 127              	.LBB182:
 128              	.LBB175:
1755:.././hal//stm32f3/CMSIS/core/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 129              		.loc 2 1755 102 is_stmt 0 view .LVU36
 130 0034 43EA0203 		orr	r3, r3, r2
 131              	.LBE175:
 132              	.LBE182:
 133              	.LBB183:
 134              	.LBB179:
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 135              		.loc 2 1706 55 view .LVU37
 136 0038 ACBF     		ite	ge
 137 003a 00F16040 		addge	r0, r0, #-536870912
 138              	.LVL8:
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 139              		.loc 2 1702 55 view .LVU38
 140 003e 084A     		ldrlt	r2, .L6+4
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 141              		.loc 2 1702 57 view .LVU39
 142 0040 4FEA0313 		lsl	r3, r3, #4
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 143              		.loc 2 1702 41 view .LVU40
 144 0044 B8BF     		it	lt
 145 0046 00F00F00 		andlt	r0, r0, #15
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 146              		.loc 2 1702 57 view .LVU41
 147 004a DBB2     		uxtb	r3, r3
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 148              		.loc 2 1706 55 view .LVU42
 149 004c AABF     		itet	ge
 150 004e 00F56140 		addge	r0, r0, #57600
1702:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 151              		.loc 2 1702 55 view .LVU43
 152 0052 1354     		strblt	r3, [r2, r0]
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 153              		.loc 2 1706 5 is_stmt 1 view .LVU44
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 154              		.loc 2 1706 55 is_stmt 0 view .LVU45
 155 0054 80F80033 		strbge	r3, [r0, #768]
 156              	.LVL9:
1706:.././hal//stm32f3/CMSIS/core/core_cm4.h ****   }
 157              		.loc 2 1706 55 view .LVU46
 158              	.LBE179:
 159              	.LBE183:
  63:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 160              		.loc 1 63 1 view .LVU47
 161 0058 30BD     		pop	{r4, r5, pc}
 162              	.LVL10:
 163              	.L7:
 164              		.loc 1 63 1 view .LVU48
 165 005a 00BF     		.align	2
 166              	.L6:
 167 005c 00ED00E0 		.word	-536810240
 168 0060 14ED00E0 		.word	-536810220
 169              		.cfi_endproc
 170              	.LFE126:
 172              		.section	.text.HAL_InitTick,"ax",%progbits
 173              		.align	1
 174              		.global	HAL_InitTick
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	HAL_InitTick:
 180              	.LVL11:
 181              	.LFB127:
  64:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  65:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #ifndef ENABLE_TICK_TIMING
  66:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  67:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 182              		.loc 1 67 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
  68:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 	hal_sys_tick = 0;
 187              		.loc 1 68 2 view .LVU50
 188              		.loc 1 68 15 is_stmt 0 view .LVU51
 189 0000 014B     		ldr	r3, .L9
 190 0002 0020     		movs	r0, #0
 191              	.LVL12:
 192              		.loc 1 68 15 view .LVU52
 193 0004 1860     		str	r0, [r3]
  69:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 	return HAL_OK;
 194              		.loc 1 69 2 is_stmt 1 view .LVU53
  70:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 195              		.loc 1 70 1 is_stmt 0 view .LVU54
 196 0006 7047     		bx	lr
 197              	.L10:
 198              		.align	2
 199              	.L9:
 200 0008 00000000 		.word	.LANCHOR0
 201              		.cfi_endproc
 202              	.LFE127:
 204              		.section	.text.HAL_GetTick,"ax",%progbits
 205              		.align	1
 206              		.global	HAL_GetTick
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	HAL_GetTick:
 212              	.LFB128:
  71:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_GetTick(void)
  72:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 213              		.loc 1 72 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		@ link register save eliminated.
  73:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 	return hal_sys_tick++;
 218              		.loc 1 73 2 view .LVU56
 219              		.loc 1 73 21 is_stmt 0 view .LVU57
 220 0000 024B     		ldr	r3, .L12
 221 0002 1868     		ldr	r0, [r3]
 222 0004 421C     		adds	r2, r0, #1
 223 0006 1A60     		str	r2, [r3]
  74:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 224              		.loc 1 74 1 view .LVU58
 225 0008 7047     		bx	lr
 226              	.L13:
 227 000a 00BF     		.align	2
 228              	.L12:
 229 000c 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE128:
 233              		.section	.text.HAL_IncTick,"ax",%progbits
 234              		.align	1
 235              		.global	HAL_IncTick
 236              		.syntax unified
 237              		.thumb
 238              		.thumb_func
 240              	HAL_IncTick:
 241              	.LFB129:
  75:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** void HAL_IncTick(void)
  76:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 242              		.loc 1 76 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
  77:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 247              		.loc 1 77 1 view .LVU60
 248 0000 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE129:
 252              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 253              		.align	1
 254              		.global	HAL_RCC_GetSysClockFreq
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	HAL_RCC_GetSysClockFreq:
 260              	.LFB130:
  78:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #else
  79:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  80:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
  81:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
  82:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   HAL_SYSTICK_Config(SystemCoreClock / 1000U);
  83:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  84:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*Configure the SysTick IRQ priority */
  85:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority ,0U);
  86:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  87:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    /* Return function status */
  88:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
  89:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
  90:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** __weak uint32_t HAL_GetTick(void)
  91:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
  92:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return uwTick;
  93:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
  94:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
  95:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** __weak void HAL_IncTick(void)
  96:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
  97:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uwTick++;
  98:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
  99:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif
 100:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 101:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 102:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 103:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define UART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 104:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                      USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8)) /*!< UART or U
 105:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 106:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 107:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 261              		.loc 1 107 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 108:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 	return F_CPU;
 266              		.loc 1 108 2 view .LVU62
 109:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 267              		.loc 1 109 1 is_stmt 0 view .LVU63
 268 0000 4FF4E100 		mov	r0, #7372800
 269 0004 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE130:
 273              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_RCC_GetPCLK1Freq
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	HAL_RCC_GetPCLK1Freq:
 281              	.LFB144:
 282              		.cfi_startproc
 110:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 111:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 283              		.loc 1 111 10 is_stmt 1 view -0
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 4FF4E100 		mov	r0, #7372800
 288 0004 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE144:
 292              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 293              		.align	1
 294              		.global	HAL_RCC_OscConfig
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	HAL_RCC_OscConfig:
 300              	.LVL13:
 301              	.LFB132:
 112:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 113:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 	return F_CPU;
 114:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 115:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 116:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 117:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 118:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         RCC_OscInitTypeDef.
 119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 120:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         contains the configuration information for the RCC Oscillators.
 121:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The PLL is not disabled when used as system clock.
 122:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 123:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to LSE Off
 124:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         first and then LSE On or LSE Bypass.
 125:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 126:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         supported by this macro. User should request a transition to HSE Off
 127:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         first and then HSE On or HSE Bypass.
 128:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 129:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 130:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 131:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 302              		.loc 1 131 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 8
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 132:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 306              		.loc 1 132 4 view .LVU66
 133:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 134:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 135:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(RCC_OscInitStruct != NULL);
 307              		.loc 1 135 3 view .LVU67
 136:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 308              		.loc 1 136 3 view .LVU68
 137:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 138:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 139:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 309              		.loc 1 139 3 view .LVU69
 310              		.loc 1 139 43 is_stmt 0 view .LVU70
 311 0000 0368     		ldr	r3, [r0]
 131:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 312              		.loc 1 131 1 view .LVU71
 313 0002 2DE9F743 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 314              	.LCFI1:
 315              		.cfi_def_cfa_offset 40
 316              		.cfi_offset 4, -28
 317              		.cfi_offset 5, -24
 318              		.cfi_offset 6, -20
 319              		.cfi_offset 7, -16
 320              		.cfi_offset 8, -12
 321              		.cfi_offset 9, -8
 322              		.cfi_offset 14, -4
 323              		.loc 1 139 5 view .LVU72
 324 0006 D907     		lsls	r1, r3, #31
 131:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    uint32_t tickstart = 0U;
 325              		.loc 1 131 1 view .LVU73
 326 0008 0446     		mov	r4, r0
 327              		.loc 1 139 5 view .LVU74
 328 000a 10D4     		bmi	.L18
 329              	.LVL14:
 330              	.L23:
 140:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 141:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 142:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 143:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 144:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 145:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 147:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 149:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 150:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 151:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 152:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 153:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 154:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 155:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Set the new HSE configuration ---------------------------------------*/
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 157:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 158:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 159:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the HSE predivision factor --------------------------------*/
 160:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 161:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 162:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 163:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        /* Check the HSE State */
 164:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 165:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 166:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 167:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 168:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 169:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSE is ready */
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 171:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 173:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 174:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 175:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 176:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 177:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 178:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
 179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 180:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 181:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 182:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 183:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSE is disabled */
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 185:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 187:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 188:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 189:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 191:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 192:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 194:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 195:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 331              		.loc 1 195 3 is_stmt 1 view .LVU75
 332              		.loc 1 195 43 is_stmt 0 view .LVU76
 333 000c 2368     		ldr	r3, [r4]
 334              		.loc 1 195 5 view .LVU77
 335 000e 9A07     		lsls	r2, r3, #30
 336 0010 7ED4     		bmi	.L19
 337              	.L35:
 196:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 197:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 199:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 200:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 201:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 202:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 204:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 205:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* When HSI is used as system clock it will not disabled */
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 207:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 208:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 209:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 210:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Otherwise, just the calibration is allowed */
 211:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
 212:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 213:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 214:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 215:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 216:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 217:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 218:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 219:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSI State */
 220:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 221:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 222:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 223:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_ENABLE();
 224:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 225:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 226:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 227:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 228:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSI is ready */
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 230:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 231:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 232:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 233:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 234:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 235:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 236:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                 
 237:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 239:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 240:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
 241:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 242:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 243:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_HSI_DISABLE();
 244:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 245:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 246:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 247:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 248:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till HSI is disabled */
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 250:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 251:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 252:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 253:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 254:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 255:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 256:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 257:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 258:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 259:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 260:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 338              		.loc 1 260 3 is_stmt 1 view .LVU78
 339              		.loc 1 260 43 is_stmt 0 view .LVU79
 340 0012 2368     		ldr	r3, [r4]
 341              		.loc 1 260 5 view .LVU80
 342 0014 1E07     		lsls	r6, r3, #28
 343 0016 00F1E780 		bmi	.L45
 344              	.L51:
 261:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 262:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 263:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 264:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 265:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSI State */
 266:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 267:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 268:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 269:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_LSI_ENABLE();
 270:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 271:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 272:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 273:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 274:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSI is ready */  
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 276:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 277:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 278:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 279:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 280:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 281:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 282:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 283:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 284:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 285:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 286:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_LSI_DISABLE();
 287:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 288:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 289:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 290:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 291:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSI is disabled */  
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 293:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 294:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 295:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 296:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 297:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 298:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 299:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 300:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 301:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 302:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 345              		.loc 1 302 3 is_stmt 1 view .LVU81
 346              		.loc 1 302 43 is_stmt 0 view .LVU82
 347 001a 2368     		ldr	r3, [r4]
 348              		.loc 1 302 5 view .LVU83
 349 001c 5D07     		lsls	r5, r3, #29
 350 001e 00F12A81 		bmi	.L46
 351              	.L54:
 303:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 304:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     FlagStatus       pwrclkchanged = RESET;
 305:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 306:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 307:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 308:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 309:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Update LSE configuration in Backup Domain control register    */
 310:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Requires to enable write access to Backup Domain of necessary */
 311:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 312:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 314:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 315:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 316:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 317:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 318:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 319:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Enable write access to Backup domain */
 320:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 321:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 322:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait for Backup domain Write protection disable */
 323:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 324:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 325:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 326:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 327:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 328:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 329:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 330:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 331:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 332:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 333:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 334:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Set the new LSE configuration -----------------------------------------*/
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 336:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 337:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 338:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 339:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 340:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 341:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 342:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSE is ready */  
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 344:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 346:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 347:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 348:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 349:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 350:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 351:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 352:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 353:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Get Start Tick */
 354:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       tickstart = HAL_GetTick();
 355:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 356:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Wait till LSE is disabled */  
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 358:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 360:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 361:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 362:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 363:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 364:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 365:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 366:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Require to disable power clock if necessary */
 367:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(pwrclkchanged == SET)
 368:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 369:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 370:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 371:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 372:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 373:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 374:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 375:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 352              		.loc 1 375 3 is_stmt 1 view .LVU84
 376:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 353              		.loc 1 376 3 view .LVU85
 354              		.loc 1 376 30 is_stmt 0 view .LVU86
 355 0022 E269     		ldr	r2, [r4, #28]
 356              		.loc 1 376 6 view .LVU87
 357 0024 002A     		cmp	r2, #0
 358 0026 40F0AD81 		bne	.L71
 359              	.LVL15:
 360              	.L77:
 377:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 378:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check if the PLL is used as system clock or not */
 379:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 380:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     { 
 381:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 382:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 383:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the parameters */
 384:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 385:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 386:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 387:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 388:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif
 389:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 390:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the main PLL. */
 391:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 392:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 393:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 394:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 395:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 396:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is disabled */
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 398:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 400:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 401:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 402:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 403:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 404:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 405:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 406:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 407:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 408:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 409:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 410:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #else
 411:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the main PLL clock source and multiplication factor. */
 412:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 413:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 414:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 415:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Enable the main PLL. */
 416:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_ENABLE();
 417:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 418:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 419:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 420:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 421:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is ready */
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 423:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 425:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 426:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 427:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 428:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 429:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 430:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
 431:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 432:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable the main PLL. */
 433:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_PLL_DISABLE();
 434:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****  
 435:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Get Start Tick */
 436:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tickstart = HAL_GetTick();
 437:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 438:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Wait till PLL is disabled */  
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 440:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 442:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 443:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****             return HAL_TIMEOUT;
 444:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 445:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 446:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 447:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 448:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 449:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 450:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 451:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 452:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 453:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 454:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 361              		.loc 1 454 10 view .LVU88
 362 002a 0020     		movs	r0, #0
 363 002c 1FE0     		b	.L24
 364              	.LVL16:
 365              	.L18:
 142:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 366              		.loc 1 142 5 is_stmt 1 view .LVU89
 145:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 367              		.loc 1 145 5 view .LVU90
 145:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 368              		.loc 1 145 9 is_stmt 0 view .LVU91
 369 002e AE49     		ldr	r1, .L106
 370 0030 4B68     		ldr	r3, [r1, #4]
 371 0032 03F00C03 		and	r3, r3, #12
 145:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 372              		.loc 1 145 7 view .LVU92
 373 0036 042B     		cmp	r3, #4
 374 0038 07D0     		beq	.L21
 146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 375              		.loc 1 146 13 view .LVU93
 376 003a 4B68     		ldr	r3, [r1, #4]
 377 003c 03F00C03 		and	r3, r3, #12
 146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 378              		.loc 1 146 8 view .LVU94
 379 0040 082B     		cmp	r3, #8
 380 0042 17D1     		bne	.L22
 146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 381              		.loc 1 146 82 discriminator 1 view .LVU95
 382 0044 4B68     		ldr	r3, [r1, #4]
 146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 383              		.loc 1 146 78 discriminator 1 view .LVU96
 384 0046 DB03     		lsls	r3, r3, #15
 385 0048 14D5     		bpl	.L22
 386              	.L21:
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 387              		.loc 1 148 7 is_stmt 1 view .LVU97
 388              	.LVL17:
 389              	.LBB184:
 390              	.LBI184:
 391              		.file 3 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h"
   1:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**************************************************************************//**
   2:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * @version  V4.30
   5:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * @date     20. October 2015
   6:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  ******************************************************************************/
   7:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
   9:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    All rights reserved.
  10:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****      specific prior written permission.
  20:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    *
  21:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  34:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  35:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  38:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
  45:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  46:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  47:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   @{
  51:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  52:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  53:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  54:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  58:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
  60:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
  62:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  63:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  64:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  65:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  69:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
  71:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
  73:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  74:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  75:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  76:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Control Register
  77:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Control Register value
  79:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  80:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
  82:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
  83:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  84:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
  86:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
  87:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  88:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  89:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
  90:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Control Register
  91:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
  94:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
  96:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
  98:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
  99:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 100:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 101:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               IPSR Register value
 104:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 105:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 107:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 108:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 109:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 111:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 112:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 113:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 114:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 115:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get APSR Register
 116:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               APSR Register value
 118:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 119:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 121:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 122:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 123:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 125:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 126:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 127:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 128:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 129:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 132:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     \return               xPSR Register value
 133:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 134:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 136:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 137:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 138:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 140:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 141:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 142:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 143:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 144:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               PSP Register value
 147:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 148:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 150:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 151:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 152:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 154:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 155:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 156:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 157:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 158:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 162:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 164:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 166:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 167:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 168:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 169:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               MSP Register value
 172:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 173:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 175:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   register uint32_t result;
 176:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 177:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 179:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 180:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 181:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 182:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 183:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 186:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 188:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 190:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 192:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 193:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 194:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 195:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Priority Mask value
 198:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 199:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 201:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 202:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 203:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 205:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 206:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 207:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 208:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 209:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 213:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 215:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 217:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 218:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 219:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 221:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 222:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Enable FIQ
 223:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 226:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 228:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 230:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 231:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 232:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 233:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Disable FIQ
 234:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 237:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 239:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 241:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 242:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 243:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 244:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Base Priority
 245:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Base Priority register value
 247:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 248:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 250:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 251:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 252:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 254:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 255:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 256:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 257:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 258:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority
 259:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 262:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 264:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 266:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 267:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 268:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 269:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 274:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 276:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 278:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 279:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 280:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 281:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Fault Mask register value
 284:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 285:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 287:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 288:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 289:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 291:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 292:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 293:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 294:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 295:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 299:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 301:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 303:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 304:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 306:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 307:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 309:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 310:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Get FPSCR
 311:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 314:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 316:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 318:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 319:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 321:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 323:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 324:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 325:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    return(0);
 326:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 327:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 328:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 329:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 330:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 331:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Set FPSCR
 332:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 335:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 337:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 340:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("");
 342:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 343:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 344:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 345:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 347:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 348:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 349:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 351:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 352:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   Access to dedicated instructions
 355:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   @{
 356:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** */
 357:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 358:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 365:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 368:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 369:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 370:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   No Operation
 371:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 373:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 375:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 377:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 378:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 379:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 380:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 383:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 385:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 387:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 388:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 389:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 390:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Wait For Event
 391:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 394:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 396:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 398:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 399:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 400:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 401:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Send Event
 402:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 404:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 406:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 408:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 409:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 410:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 411:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            after the instruction has been completed.
 415:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 416:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 418:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 420:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 421:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 422:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 423:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 427:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 429:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 431:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 432:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 433:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 434:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 438:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 440:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 442:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 443:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 444:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 445:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 449:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 450:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 452:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 455:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 456:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 457:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 459:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 460:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 461:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 462:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 463:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 464:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 468:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 469:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 471:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 472:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 473:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 475:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 476:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 477:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 478:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 479:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 483:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 484:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 486:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 489:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   int32_t result;
 490:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 491:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 493:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 494:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 495:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 496:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 497:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 498:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Rotated value
 503:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 504:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 506:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** }
 508:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 509:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 510:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 511:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Breakpoint
 512:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 517:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 519:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 520:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** /**
 521:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   \return               Reversed value
 525:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****  */
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 392              		.loc 3 526 57 view .LVU98
 393              	.LBB185:
 527:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   uint32_t result;
 394              		.loc 3 528 3 view .LVU99
 529:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 530:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 395              		.loc 3 531 4 view .LVU100
 396 004a 4FF40033 		mov	r3, #131072
 397              		.syntax unified
 398              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 399 004e 93FAA3F2 		rbit r2, r3
 400              	@ 0 "" 2
 401              	.LVL18:
 532:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 533:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 535:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   {
 538:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     result <<= 1U;
 539:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     result |= value & 1U;
 540:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****     s--;
 541:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   }
 542:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #endif
 544:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h ****   return(result);
 402              		.loc 3 544 3 view .LVU101
 403              		.loc 3 544 3 is_stmt 0 view .LVU102
 404              		.thumb
 405              		.syntax unified
 406              	.LBE185:
 407              	.LBE184:
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 408              		.loc 1 148 11 discriminator 1 view .LVU103
 409 0052 0968     		ldr	r1, [r1]
 410              	.LVL19:
 411              	.LBB186:
 412              	.LBI186:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 413              		.loc 3 526 57 is_stmt 1 view .LVU104
 414              	.LBB187:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 415              		.loc 3 528 3 view .LVU105
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 416              		.loc 3 531 4 view .LVU106
 417              		.syntax unified
 418              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 419 0054 93FAA3F3 		rbit r3, r3
 420              	@ 0 "" 2
 421              	.LVL20:
 422              		.loc 3 544 3 view .LVU107
 423              		.loc 3 544 3 is_stmt 0 view .LVU108
 424              		.thumb
 425              		.syntax unified
 426              	.LBE187:
 427              	.LBE186:
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 428              		.loc 1 148 11 discriminator 2 view .LVU109
 429 0058 0122     		movs	r2, #1
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 430              		.loc 1 148 11 discriminator 1 view .LVU110
 431 005a B3FA83F3 		clz	r3, r3
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 432              		.loc 1 148 11 discriminator 2 view .LVU111
 433 005e 02FA03F3 		lsl	r3, r2, r3
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 434              		.loc 1 148 9 discriminator 2 view .LVU112
 435 0062 0B42     		tst	r3, r1
 436 0064 D2D0     		beq	.L23
 148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 437              		.loc 1 148 57 discriminator 13 view .LVU113
 438 0066 6368     		ldr	r3, [r4, #4]
 439 0068 002B     		cmp	r3, #0
 440 006a CFD1     		bne	.L23
 441              	.LVL21:
 442              	.L39:
 150:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 443              		.loc 1 150 16 view .LVU114
 444 006c 0120     		movs	r0, #1
 445              	.LVL22:
 446              	.L24:
 455:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 447              		.loc 1 455 1 view .LVU115
 448 006e 03B0     		add	sp, sp, #12
 449              	.LCFI2:
 450              		.cfi_remember_state
 451              		.cfi_def_cfa_offset 28
 452              		@ sp needed
 453 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 454              	.LVL23:
 455              	.L22:
 456              	.LCFI3:
 457              		.cfi_restore_state
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 458              		.loc 1 156 7 is_stmt 1 view .LVU116
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 459              		.loc 1 156 7 view .LVU117
 460 0074 6268     		ldr	r2, [r4, #4]
 461 0076 B2F5803F 		cmp	r2, #65536
 462 007a 22D1     		bne	.L25
 463              	.L104:
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 464              		.loc 1 156 7 discriminator 7 view .LVU118
 465 007c 0B68     		ldr	r3, [r1]
 466 007e 43F48033 		orr	r3, r3, #65536
 467              	.L101:
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 468              		.loc 1 156 7 is_stmt 0 discriminator 8 view .LVU119
 469 0082 0B60     		str	r3, [r1]
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 470              		.loc 1 156 7 is_stmt 1 discriminator 10 view .LVU120
 160:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 471              		.loc 1 160 7 view .LVU121
 472 0084 CB6A     		ldr	r3, [r1, #44]
 473 0086 A068     		ldr	r0, [r4, #8]
 474              	.LVL24:
 160:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 475              		.loc 1 160 7 is_stmt 0 view .LVU122
 476 0088 23F00F03 		bic	r3, r3, #15
 477 008c 0343     		orrs	r3, r3, r0
 478 008e CB62     		str	r3, [r1, #44]
 164:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 479              		.loc 1 164 7 is_stmt 1 view .LVU123
 164:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 480              		.loc 1 164 9 is_stmt 0 view .LVU124
 481 0090 3AB3     		cbz	r2, .L29
 167:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 482              		.loc 1 167 9 is_stmt 1 view .LVU125
 167:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 483              		.loc 1 167 21 is_stmt 0 view .LVU126
 484 0092 FFF7FEFF 		bl	HAL_GetTick
 485              	.LVL25:
 486              	.LBB188:
 487              	.LBB189:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 488              		.loc 3 531 4 view .LVU127
 489 0096 4FF40036 		mov	r6, #131072
 490              	.LBE189:
 491              	.LBE188:
 167:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 492              		.loc 1 167 21 view .LVU128
 493 009a 0546     		mov	r5, r0
 494              	.LVL26:
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 495              		.loc 1 170 9 is_stmt 1 view .LVU129
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 496              		.loc 1 170 15 is_stmt 0 discriminator 2 view .LVU130
 497 009c 0127     		movs	r7, #1
 498              	.LVL27:
 499              	.L30:
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 500              		.loc 1 170 51 is_stmt 1 view .LVU131
 501              	.LBB191:
 502              	.LBI188:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 503              		.loc 3 526 57 view .LVU132
 504              	.LBB190:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 505              		.loc 3 528 3 view .LVU133
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 506              		.loc 3 531 4 view .LVU134
 507              		.syntax unified
 508              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 509 009e 96FAA6F3 		rbit r3, r6
 510              	@ 0 "" 2
 511              	.LVL28:
 512              		.loc 3 544 3 view .LVU135
 513              		.loc 3 544 3 is_stmt 0 view .LVU136
 514              		.thumb
 515              		.syntax unified
 516              	.LBE190:
 517              	.LBE191:
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 518              		.loc 1 170 15 discriminator 1 view .LVU137
 519 00a2 0A68     		ldr	r2, [r1]
 520              	.LVL29:
 521              	.LBB192:
 522              	.LBI192:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 523              		.loc 3 526 57 is_stmt 1 view .LVU138
 524              	.LBB193:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 525              		.loc 3 528 3 view .LVU139
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 526              		.loc 3 531 4 view .LVU140
 527              		.syntax unified
 528              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 529 00a4 96FAA6F3 		rbit r3, r6
 530              	@ 0 "" 2
 531              	.LVL30:
 532              		.loc 3 544 3 view .LVU141
 533              		.loc 3 544 3 is_stmt 0 view .LVU142
 534              		.thumb
 535              		.syntax unified
 536              	.LBE193:
 537              	.LBE192:
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 538              		.loc 1 170 15 discriminator 1 view .LVU143
 539 00a8 B3FA83F3 		clz	r3, r3
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 540              		.loc 1 170 15 discriminator 2 view .LVU144
 541 00ac 07FA03F3 		lsl	r3, r7, r3
 170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 542              		.loc 1 170 51 discriminator 2 view .LVU145
 543 00b0 1342     		tst	r3, r2
 544 00b2 ABD1     		bne	.L23
 172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 545              		.loc 1 172 11 is_stmt 1 view .LVU146
 172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 546              		.loc 1 172 15 is_stmt 0 view .LVU147
 547 00b4 FFF7FEFF 		bl	HAL_GetTick
 548              	.LVL31:
 172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 549              		.loc 1 172 29 discriminator 1 view .LVU148
 550 00b8 401B     		subs	r0, r0, r5
 172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 551              		.loc 1 172 13 discriminator 1 view .LVU149
 552 00ba 6428     		cmp	r0, #100
 553 00bc EFD9     		bls	.L30
 554              	.LVL32:
 555              	.L33:
 174:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           }
 556              		.loc 1 174 20 view .LVU150
 557 00be 0320     		movs	r0, #3
 558 00c0 D5E7     		b	.L24
 559              	.LVL33:
 560              	.L25:
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 561              		.loc 1 156 7 is_stmt 1 discriminator 2 view .LVU151
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 562              		.loc 1 156 7 is_stmt 0 discriminator 4 view .LVU152
 563 00c2 0B68     		ldr	r3, [r1]
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 564              		.loc 1 156 7 discriminator 2 view .LVU153
 565 00c4 32B9     		cbnz	r2, .L27
 566              	.L28:
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 567              		.loc 1 156 7 is_stmt 1 discriminator 8 view .LVU154
 568 00c6 23F48033 		bic	r3, r3, #65536
 569 00ca 0B60     		str	r3, [r1]
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 570              		.loc 1 156 7 discriminator 8 view .LVU155
 571 00cc 0B68     		ldr	r3, [r1]
 572 00ce 23F48023 		bic	r3, r3, #262144
 573 00d2 D6E7     		b	.L101
 574              	.L27:
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 575              		.loc 1 156 7 discriminator 5 view .LVU156
 576 00d4 B2F5A02F 		cmp	r2, #327680
 577 00d8 F5D1     		bne	.L28
 156:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 578              		.loc 1 156 7 discriminator 7 view .LVU157
 579 00da 43F48023 		orr	r3, r3, #262144
 580 00de 0B60     		str	r3, [r1]
 581 00e0 CCE7     		b	.L104
 582              	.LVL34:
 583              	.L29:
 181:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 584              		.loc 1 181 9 view .LVU158
 181:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 585              		.loc 1 181 21 is_stmt 0 view .LVU159
 586 00e2 FFF7FEFF 		bl	HAL_GetTick
 587              	.LVL35:
 588              	.LBB194:
 589              	.LBB195:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 590              		.loc 3 531 4 view .LVU160
 591 00e6 4FF40036 		mov	r6, #131072
 592              	.LBE195:
 593              	.LBE194:
 181:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 594              		.loc 1 181 21 view .LVU161
 595 00ea 0546     		mov	r5, r0
 596              	.LVL36:
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 597              		.loc 1 184 9 is_stmt 1 view .LVU162
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 598              		.loc 1 184 15 is_stmt 0 discriminator 2 view .LVU163
 599 00ec 0127     		movs	r7, #1
 600              	.LVL37:
 601              	.L32:
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 602              		.loc 1 184 51 is_stmt 1 view .LVU164
 603              	.LBB197:
 604              	.LBI194:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 605              		.loc 3 526 57 view .LVU165
 606              	.LBB196:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 607              		.loc 3 528 3 view .LVU166
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 608              		.loc 3 531 4 view .LVU167
 609              		.syntax unified
 610              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 611 00ee 96FAA6F3 		rbit r3, r6
 612              	@ 0 "" 2
 613              	.LVL38:
 614              		.loc 3 544 3 view .LVU168
 615              		.loc 3 544 3 is_stmt 0 view .LVU169
 616              		.thumb
 617              		.syntax unified
 618              	.LBE196:
 619              	.LBE197:
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 620              		.loc 1 184 15 discriminator 1 view .LVU170
 621 00f2 0A68     		ldr	r2, [r1]
 622              	.LVL39:
 623              	.LBB198:
 624              	.LBI198:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 625              		.loc 3 526 57 is_stmt 1 view .LVU171
 626              	.LBB199:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 627              		.loc 3 528 3 view .LVU172
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 628              		.loc 3 531 4 view .LVU173
 629              		.syntax unified
 630              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 631 00f4 96FAA6F3 		rbit r3, r6
 632              	@ 0 "" 2
 633              	.LVL40:
 634              		.loc 3 544 3 view .LVU174
 635              		.loc 3 544 3 is_stmt 0 view .LVU175
 636              		.thumb
 637              		.syntax unified
 638              	.LBE199:
 639              	.LBE198:
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 640              		.loc 1 184 15 discriminator 1 view .LVU176
 641 00f8 B3FA83F3 		clz	r3, r3
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 642              		.loc 1 184 15 discriminator 2 view .LVU177
 643 00fc 07FA03F3 		lsl	r3, r7, r3
 184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 644              		.loc 1 184 51 discriminator 2 view .LVU178
 645 0100 1342     		tst	r3, r2
 646 0102 83D0     		beq	.L23
 186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 647              		.loc 1 186 12 is_stmt 1 view .LVU179
 186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 648              		.loc 1 186 16 is_stmt 0 view .LVU180
 649 0104 FFF7FEFF 		bl	HAL_GetTick
 650              	.LVL41:
 186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 651              		.loc 1 186 30 discriminator 1 view .LVU181
 652 0108 401B     		subs	r0, r0, r5
 186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 653              		.loc 1 186 14 discriminator 1 view .LVU182
 654 010a 6428     		cmp	r0, #100
 655 010c EFD9     		bls	.L32
 656 010e D6E7     		b	.L33
 657              	.LVL42:
 658              	.L19:
 198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 659              		.loc 1 198 5 is_stmt 1 view .LVU183
 199:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 660              		.loc 1 199 5 view .LVU184
 202:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 661              		.loc 1 202 5 view .LVU185
 202:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 662              		.loc 1 202 9 is_stmt 0 view .LVU186
 663 0110 7549     		ldr	r1, .L106
 664 0112 4B68     		ldr	r3, [r1, #4]
 202:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 665              		.loc 1 202 7 view .LVU187
 666 0114 13F00C0F 		tst	r3, #12
 667 0118 07D0     		beq	.L36
 203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 668              		.loc 1 203 13 view .LVU188
 669 011a 4B68     		ldr	r3, [r1, #4]
 670 011c 03F00C03 		and	r3, r3, #12
 203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 671              		.loc 1 203 8 view .LVU189
 672 0120 082B     		cmp	r3, #8
 673 0122 1FD1     		bne	.L37
 203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 674              		.loc 1 203 82 discriminator 1 view .LVU190
 675 0124 4B68     		ldr	r3, [r1, #4]
 203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 676              		.loc 1 203 78 discriminator 1 view .LVU191
 677 0126 DF03     		lsls	r7, r3, #15
 678 0128 1CD4     		bmi	.L37
 679              	.L36:
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 680              		.loc 1 206 7 is_stmt 1 view .LVU192
 681              	.LVL43:
 682              	.LBB200:
 683              	.LBI200:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 684              		.loc 3 526 57 view .LVU193
 685              	.LBB201:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 686              		.loc 3 528 3 view .LVU194
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 687              		.loc 3 531 4 view .LVU195
 688 012a 0223     		movs	r3, #2
 689              		.syntax unified
 690              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 691 012c 93FAA3F2 		rbit r2, r3
 692              	@ 0 "" 2
 693              	.LVL44:
 694              		.loc 3 544 3 view .LVU196
 695              		.loc 3 544 3 is_stmt 0 view .LVU197
 696              		.thumb
 697              		.syntax unified
 698              	.LBE201:
 699              	.LBE200:
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 700              		.loc 1 206 11 discriminator 1 view .LVU198
 701 0130 0868     		ldr	r0, [r1]
 702              	.LVL45:
 703              	.LBB202:
 704              	.LBI202:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 705              		.loc 3 526 57 is_stmt 1 view .LVU199
 706              	.LBB203:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 707              		.loc 3 528 3 view .LVU200
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 708              		.loc 3 531 4 view .LVU201
 709              		.syntax unified
 710              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 711 0132 93FAA3F3 		rbit r3, r3
 712              	@ 0 "" 2
 713              	.LVL46:
 714              		.loc 3 544 3 view .LVU202
 715              		.loc 3 544 3 is_stmt 0 view .LVU203
 716              		.thumb
 717              		.syntax unified
 718              	.LBE203:
 719              	.LBE202:
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 720              		.loc 1 206 11 discriminator 2 view .LVU204
 721 0136 0122     		movs	r2, #1
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 722              		.loc 1 206 11 discriminator 1 view .LVU205
 723 0138 B3FA83F3 		clz	r3, r3
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 724              		.loc 1 206 11 discriminator 2 view .LVU206
 725 013c 02FA03F3 		lsl	r3, r2, r3
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 726              		.loc 1 206 9 discriminator 2 view .LVU207
 727 0140 0342     		tst	r3, r0
 728 0142 02D0     		beq	.L102
 206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 729              		.loc 1 206 57 discriminator 13 view .LVU208
 730 0144 2369     		ldr	r3, [r4, #16]
 731 0146 9342     		cmp	r3, r2
 732 0148 90D1     		bne	.L39
 733              	.L102:
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 734              		.loc 1 238 9 is_stmt 1 view .LVU209
 735 014a 0868     		ldr	r0, [r1]
 736              	.LVL47:
 737              	.LBB204:
 738              	.LBI204:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 739              		.loc 3 526 57 view .LVU210
 740              	.LBB205:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 741              		.loc 3 528 3 view .LVU211
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 742              		.loc 3 531 4 view .LVU212
 743 014c F822     		movs	r2, #248
 744              		.syntax unified
 745              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 746 014e 92FAA2F2 		rbit r2, r2
 747              	@ 0 "" 2
 748              	.LVL48:
 749              		.loc 3 544 3 view .LVU213
 750              		.loc 3 544 3 is_stmt 0 view .LVU214
 751              		.thumb
 752              		.syntax unified
 753              	.LBE205:
 754              	.LBE204:
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 755              		.loc 1 238 9 discriminator 2 view .LVU215
 756 0152 6369     		ldr	r3, [r4, #20]
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 757              		.loc 1 238 9 discriminator 1 view .LVU216
 758 0154 B2FA82F2 		clz	r2, r2
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 759              		.loc 1 238 9 discriminator 2 view .LVU217
 760 0158 9340     		lsls	r3, r3, r2
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 761              		.loc 1 238 9 view .LVU218
 762 015a 20F0F802 		bic	r2, r0, #248
 238:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 763              		.loc 1 238 9 discriminator 2 view .LVU219
 764 015e 1343     		orrs	r3, r3, r2
 765 0160 0B60     		str	r3, [r1]
 766 0162 56E7     		b	.L35
 767              	.L37:
 220:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 768              		.loc 1 220 7 is_stmt 1 view .LVU220
 220:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 769              		.loc 1 220 9 is_stmt 0 view .LVU221
 770 0164 2269     		ldr	r2, [r4, #16]
 771 0166 0125     		movs	r5, #1
 772 0168 F2B1     		cbz	r2, .L40
 223:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 773              		.loc 1 223 9 is_stmt 1 view .LVU222
 774              	.LVL49:
 775              	.LBB206:
 776              	.LBI206:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 777              		.loc 3 526 57 view .LVU223
 778              	.LBB207:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 779              		.loc 3 528 3 view .LVU224
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 780              		.loc 3 531 4 view .LVU225
 781              		.syntax unified
 782              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 783 016a 95FAA5F3 		rbit r3, r5
 784              	@ 0 "" 2
 785              	.LVL50:
 786              		.loc 3 544 3 view .LVU226
 787              		.loc 3 544 3 is_stmt 0 view .LVU227
 788              		.thumb
 789              		.syntax unified
 790              	.LBE207:
 791              	.LBE206:
 223:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 792              		.loc 1 223 9 discriminator 1 view .LVU228
 793 016e B3FA83F3 		clz	r3, r3
 223:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 794              		.loc 1 223 9 discriminator 2 view .LVU229
 795 0172 03F18453 		add	r3, r3, #276824064
 796 0176 03F58413 		add	r3, r3, #1081344
 797 017a 9B00     		lsls	r3, r3, #2
 798              	.LBB208:
 799              	.LBB209:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 800              		.loc 3 531 4 view .LVU230
 801 017c 0227     		movs	r7, #2
 802              	.LBE209:
 803              	.LBE208:
 223:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 804              		.loc 1 223 9 discriminator 2 view .LVU231
 805 017e 1D60     		str	r5, [r3]
 226:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 806              		.loc 1 226 9 is_stmt 1 view .LVU232
 226:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 807              		.loc 1 226 21 is_stmt 0 view .LVU233
 808 0180 FFF7FEFF 		bl	HAL_GetTick
 809              	.LVL51:
 810 0184 0646     		mov	r6, r0
 811              	.LVL52:
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 812              		.loc 1 229 9 is_stmt 1 view .LVU234
 813              	.L41:
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 814              		.loc 1 229 51 view .LVU235
 815              	.LBB211:
 816              	.LBI208:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 817              		.loc 3 526 57 view .LVU236
 818              	.LBB210:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 819              		.loc 3 528 3 view .LVU237
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 820              		.loc 3 531 4 view .LVU238
 821              		.syntax unified
 822              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 823 0186 97FAA7F3 		rbit r3, r7
 824              	@ 0 "" 2
 825              	.LVL53:
 826              		.loc 3 544 3 view .LVU239
 827              		.loc 3 544 3 is_stmt 0 view .LVU240
 828              		.thumb
 829              		.syntax unified
 830              	.LBE210:
 831              	.LBE211:
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 832              		.loc 1 229 15 discriminator 1 view .LVU241
 833 018a 0A68     		ldr	r2, [r1]
 834              	.LVL54:
 835              	.LBB212:
 836              	.LBI212:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 837              		.loc 3 526 57 is_stmt 1 view .LVU242
 838              	.LBB213:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 839              		.loc 3 528 3 view .LVU243
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 840              		.loc 3 531 4 view .LVU244
 841              		.syntax unified
 842              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 843 018c 97FAA7F3 		rbit r3, r7
 844              	@ 0 "" 2
 845              	.LVL55:
 846              		.loc 3 544 3 view .LVU245
 847              		.loc 3 544 3 is_stmt 0 view .LVU246
 848              		.thumb
 849              		.syntax unified
 850              	.LBE213:
 851              	.LBE212:
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 852              		.loc 1 229 15 discriminator 1 view .LVU247
 853 0190 B3FA83F3 		clz	r3, r3
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 854              		.loc 1 229 15 discriminator 2 view .LVU248
 855 0194 05FA03F3 		lsl	r3, r5, r3
 229:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 856              		.loc 1 229 51 discriminator 2 view .LVU249
 857 0198 1342     		tst	r3, r2
 858 019a D6D1     		bne	.L102
 231:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 859              		.loc 1 231 11 is_stmt 1 view .LVU250
 231:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 860              		.loc 1 231 15 is_stmt 0 view .LVU251
 861 019c FFF7FEFF 		bl	HAL_GetTick
 862              	.LVL56:
 231:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 863              		.loc 1 231 29 discriminator 1 view .LVU252
 864 01a0 801B     		subs	r0, r0, r6
 231:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 865              		.loc 1 231 13 discriminator 1 view .LVU253
 866 01a2 0228     		cmp	r0, #2
 867 01a4 EFD9     		bls	.L41
 868 01a6 8AE7     		b	.L33
 869              	.LVL57:
 870              	.L40:
 243:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 871              		.loc 1 243 9 is_stmt 1 view .LVU254
 872              	.LBB214:
 873              	.LBI214:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 874              		.loc 3 526 57 view .LVU255
 875              	.LBB215:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 876              		.loc 3 528 3 view .LVU256
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 877              		.loc 3 531 4 view .LVU257
 878              		.syntax unified
 879              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 880 01a8 95FAA5F3 		rbit r3, r5
 881              	@ 0 "" 2
 882              	.LVL58:
 883              		.loc 3 544 3 view .LVU258
 884              		.loc 3 544 3 is_stmt 0 view .LVU259
 885              		.thumb
 886              		.syntax unified
 887              	.LBE215:
 888              	.LBE214:
 243:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 889              		.loc 1 243 9 discriminator 1 view .LVU260
 890 01ac B3FA83F3 		clz	r3, r3
 243:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 891              		.loc 1 243 9 discriminator 2 view .LVU261
 892 01b0 03F18453 		add	r3, r3, #276824064
 893 01b4 03F58413 		add	r3, r3, #1081344
 894 01b8 9B00     		lsls	r3, r3, #2
 895              	.LBB216:
 896              	.LBB217:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 897              		.loc 3 531 4 view .LVU262
 898 01ba 0227     		movs	r7, #2
 899              	.LBE217:
 900              	.LBE216:
 243:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 901              		.loc 1 243 9 discriminator 2 view .LVU263
 902 01bc 1A60     		str	r2, [r3]
 246:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 903              		.loc 1 246 9 is_stmt 1 view .LVU264
 246:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 904              		.loc 1 246 21 is_stmt 0 view .LVU265
 905 01be FFF7FEFF 		bl	HAL_GetTick
 906              	.LVL59:
 907 01c2 0646     		mov	r6, r0
 908              	.LVL60:
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 909              		.loc 1 249 9 is_stmt 1 view .LVU266
 910              	.L43:
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 911              		.loc 1 249 51 view .LVU267
 912              	.LBB219:
 913              	.LBI216:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 914              		.loc 3 526 57 view .LVU268
 915              	.LBB218:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 916              		.loc 3 528 3 view .LVU269
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 917              		.loc 3 531 4 view .LVU270
 918              		.syntax unified
 919              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 920 01c4 97FAA7F3 		rbit r3, r7
 921              	@ 0 "" 2
 922              	.LVL61:
 923              		.loc 3 544 3 view .LVU271
 924              		.loc 3 544 3 is_stmt 0 view .LVU272
 925              		.thumb
 926              		.syntax unified
 927              	.LBE218:
 928              	.LBE219:
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 929              		.loc 1 249 15 discriminator 1 view .LVU273
 930 01c8 0A68     		ldr	r2, [r1]
 931              	.LVL62:
 932              	.LBB220:
 933              	.LBI220:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 934              		.loc 3 526 57 is_stmt 1 view .LVU274
 935              	.LBB221:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 936              		.loc 3 528 3 view .LVU275
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 937              		.loc 3 531 4 view .LVU276
 938              		.syntax unified
 939              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 940 01ca 97FAA7F3 		rbit r3, r7
 941              	@ 0 "" 2
 942              	.LVL63:
 943              		.loc 3 544 3 view .LVU277
 944              		.loc 3 544 3 is_stmt 0 view .LVU278
 945              		.thumb
 946              		.syntax unified
 947              	.LBE221:
 948              	.LBE220:
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 949              		.loc 1 249 15 discriminator 1 view .LVU279
 950 01ce B3FA83F3 		clz	r3, r3
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 951              		.loc 1 249 15 discriminator 2 view .LVU280
 952 01d2 05FA03F3 		lsl	r3, r5, r3
 249:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 953              		.loc 1 249 51 discriminator 2 view .LVU281
 954 01d6 1342     		tst	r3, r2
 955 01d8 3FF41BAF 		beq	.L35
 251:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 956              		.loc 1 251 11 is_stmt 1 view .LVU282
 251:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 957              		.loc 1 251 15 is_stmt 0 view .LVU283
 958 01dc FFF7FEFF 		bl	HAL_GetTick
 959              	.LVL64:
 251:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 960              		.loc 1 251 29 discriminator 1 view .LVU284
 961 01e0 801B     		subs	r0, r0, r6
 251:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 962              		.loc 1 251 13 discriminator 1 view .LVU285
 963 01e2 0228     		cmp	r0, #2
 964 01e4 EED9     		bls	.L43
 965 01e6 6AE7     		b	.L33
 966              	.LVL65:
 967              	.L45:
 263:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 968              		.loc 1 263 5 is_stmt 1 view .LVU286
 266:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 969              		.loc 1 266 5 view .LVU287
 266:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 970              		.loc 1 266 7 is_stmt 0 view .LVU288
 971 01e8 A269     		ldr	r2, [r4, #24]
 972 01ea 3F4D     		ldr	r5, .L106
 973 01ec 3F48     		ldr	r0, .L106+4
 974 01ee 0121     		movs	r1, #1
 975 01f0 02B3     		cbz	r2, .L48
 269:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 976              		.loc 1 269 7 is_stmt 1 view .LVU289
 977              	.LVL66:
 978              	.LBB222:
 979              	.LBI222:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 980              		.loc 3 526 57 view .LVU290
 981              	.LBB223:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 982              		.loc 3 528 3 view .LVU291
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 983              		.loc 3 531 4 view .LVU292
 984              		.syntax unified
 985              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 986 01f2 91FAA1F3 		rbit r3, r1
 987              	@ 0 "" 2
 988              	.LVL67:
 989              		.loc 3 544 3 view .LVU293
 990              		.loc 3 544 3 is_stmt 0 view .LVU294
 991              		.thumb
 992              		.syntax unified
 993              	.LBE223:
 994              	.LBE222:
 269:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 995              		.loc 1 269 7 discriminator 1 view .LVU295
 996 01f6 B3FA83F3 		clz	r3, r3
 269:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 997              		.loc 1 269 7 discriminator 2 view .LVU296
 998 01fa 0344     		add	r3, r3, r0
 999 01fc 9B00     		lsls	r3, r3, #2
 1000              	.LBB224:
 1001              	.LBB225:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1002              		.loc 3 531 4 view .LVU297
 1003 01fe 0226     		movs	r6, #2
 1004              	.LBE225:
 1005              	.LBE224:
 269:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1006              		.loc 1 269 7 discriminator 2 view .LVU298
 1007 0200 1960     		str	r1, [r3]
 272:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1008              		.loc 1 272 7 is_stmt 1 view .LVU299
 272:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1009              		.loc 1 272 19 is_stmt 0 view .LVU300
 1010 0202 FFF7FEFF 		bl	HAL_GetTick
 1011              	.LVL68:
 1012 0206 0746     		mov	r7, r0
 1013              	.LVL69:
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1014              		.loc 1 275 7 is_stmt 1 view .LVU301
 1015              	.L49:
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1016              		.loc 1 275 49 view .LVU302
 1017              	.LBB227:
 1018              	.LBI224:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1019              		.loc 3 526 57 view .LVU303
 1020              	.LBB226:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1021              		.loc 3 528 3 view .LVU304
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1022              		.loc 3 531 4 view .LVU305
 1023              		.syntax unified
 1024              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1025 0208 96FAA6F3 		rbit r3, r6
 1026              	@ 0 "" 2
 1027              	.LVL70:
 1028              		.loc 3 544 3 view .LVU306
 1029              		.loc 3 544 3 is_stmt 0 view .LVU307
 1030              		.thumb
 1031              		.syntax unified
 1032              	.LBE226:
 1033              	.LBE227:
 1034              	.LBB228:
 1035              	.LBI228:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1036              		.loc 3 526 57 is_stmt 1 view .LVU308
 1037              	.LBB229:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1038              		.loc 3 528 3 view .LVU309
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1039              		.loc 3 531 4 view .LVU310
 1040              		.syntax unified
 1041              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1042 020c 96FAA6F3 		rbit r3, r6
 1043              	@ 0 "" 2
 1044              	.LVL71:
 1045              		.loc 3 544 3 view .LVU311
 1046              		.loc 3 544 3 is_stmt 0 view .LVU312
 1047              		.thumb
 1048              		.syntax unified
 1049              	.LBE229:
 1050              	.LBE228:
 1051              	.LBB230:
 1052              	.LBI230:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1053              		.loc 3 526 57 is_stmt 1 view .LVU313
 1054              	.LBB231:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1055              		.loc 3 528 3 view .LVU314
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1056              		.loc 3 531 4 view .LVU315
 1057              		.syntax unified
 1058              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1059 0210 96FAA6F3 		rbit r3, r6
 1060              	@ 0 "" 2
 1061              	.LVL72:
 1062              		.loc 3 544 3 view .LVU316
 1063              		.loc 3 544 3 is_stmt 0 view .LVU317
 1064              		.thumb
 1065              		.syntax unified
 1066              	.LBE231:
 1067              	.LBE230:
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1068              		.loc 1 275 13 discriminator 8 view .LVU318
 1069 0214 6A6A     		ldr	r2, [r5, #36]
 1070              	.LVL73:
 1071              	.LBB232:
 1072              	.LBI232:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1073              		.loc 3 526 57 is_stmt 1 view .LVU319
 1074              	.LBB233:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1075              		.loc 3 528 3 view .LVU320
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1076              		.loc 3 531 4 view .LVU321
 1077              		.syntax unified
 1078              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1079 0216 96FAA6F3 		rbit r3, r6
 1080              	@ 0 "" 2
 1081              	.LVL74:
 1082              		.loc 3 544 3 view .LVU322
 1083              		.loc 3 544 3 is_stmt 0 view .LVU323
 1084              		.thumb
 1085              		.syntax unified
 1086              	.LBE233:
 1087              	.LBE232:
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1088              		.loc 1 275 13 discriminator 1 view .LVU324
 1089 021a B3FA83F3 		clz	r3, r3
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1090              		.loc 1 275 13 discriminator 2 view .LVU325
 1091 021e 01FA03F3 		lsl	r3, r1, r3
 275:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1092              		.loc 1 275 49 discriminator 2 view .LVU326
 1093 0222 1342     		tst	r3, r2
 1094 0224 7FF4F9AE 		bne	.L51
 277:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1095              		.loc 1 277 9 is_stmt 1 view .LVU327
 277:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1096              		.loc 1 277 13 is_stmt 0 view .LVU328
 1097 0228 FFF7FEFF 		bl	HAL_GetTick
 1098              	.LVL75:
 277:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1099              		.loc 1 277 27 discriminator 1 view .LVU329
 1100 022c C01B     		subs	r0, r0, r7
 277:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1101              		.loc 1 277 11 discriminator 1 view .LVU330
 1102 022e 0228     		cmp	r0, #2
 1103 0230 EAD9     		bls	.L49
 1104 0232 44E7     		b	.L33
 1105              	.LVL76:
 1106              	.L48:
 286:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1107              		.loc 1 286 7 is_stmt 1 view .LVU331
 1108              	.LBB234:
 1109              	.LBI234:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1110              		.loc 3 526 57 view .LVU332
 1111              	.LBB235:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1112              		.loc 3 528 3 view .LVU333
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1113              		.loc 3 531 4 view .LVU334
 1114              		.syntax unified
 1115              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1116 0234 91FAA1F3 		rbit r3, r1
 1117              	@ 0 "" 2
 1118              	.LVL77:
 1119              		.loc 3 544 3 view .LVU335
 1120              		.loc 3 544 3 is_stmt 0 view .LVU336
 1121              		.thumb
 1122              		.syntax unified
 1123              	.LBE235:
 1124              	.LBE234:
 286:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1125              		.loc 1 286 7 discriminator 1 view .LVU337
 1126 0238 B3FA83F3 		clz	r3, r3
 286:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1127              		.loc 1 286 7 discriminator 2 view .LVU338
 1128 023c 0344     		add	r3, r3, r0
 1129 023e 9B00     		lsls	r3, r3, #2
 1130              	.LBB236:
 1131              	.LBB237:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1132              		.loc 3 531 4 view .LVU339
 1133 0240 0226     		movs	r6, #2
 1134              	.LBE237:
 1135              	.LBE236:
 286:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1136              		.loc 1 286 7 discriminator 2 view .LVU340
 1137 0242 1A60     		str	r2, [r3]
 289:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1138              		.loc 1 289 7 is_stmt 1 view .LVU341
 289:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1139              		.loc 1 289 19 is_stmt 0 view .LVU342
 1140 0244 FFF7FEFF 		bl	HAL_GetTick
 1141              	.LVL78:
 1142 0248 0746     		mov	r7, r0
 1143              	.LVL79:
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1144              		.loc 1 292 7 is_stmt 1 view .LVU343
 1145              	.L52:
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1146              		.loc 1 292 49 view .LVU344
 1147              	.LBB239:
 1148              	.LBI236:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1149              		.loc 3 526 57 view .LVU345
 1150              	.LBB238:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1151              		.loc 3 528 3 view .LVU346
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1152              		.loc 3 531 4 view .LVU347
 1153              		.syntax unified
 1154              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1155 024a 96FAA6F3 		rbit r3, r6
 1156              	@ 0 "" 2
 1157              	.LVL80:
 1158              		.loc 3 544 3 view .LVU348
 1159              		.loc 3 544 3 is_stmt 0 view .LVU349
 1160              		.thumb
 1161              		.syntax unified
 1162              	.LBE238:
 1163              	.LBE239:
 1164              	.LBB240:
 1165              	.LBI240:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1166              		.loc 3 526 57 is_stmt 1 view .LVU350
 1167              	.LBB241:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1168              		.loc 3 528 3 view .LVU351
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1169              		.loc 3 531 4 view .LVU352
 1170              		.syntax unified
 1171              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1172 024e 96FAA6F3 		rbit r3, r6
 1173              	@ 0 "" 2
 1174              	.LVL81:
 1175              		.loc 3 544 3 view .LVU353
 1176              		.loc 3 544 3 is_stmt 0 view .LVU354
 1177              		.thumb
 1178              		.syntax unified
 1179              	.LBE241:
 1180              	.LBE240:
 1181              	.LBB242:
 1182              	.LBI242:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1183              		.loc 3 526 57 is_stmt 1 view .LVU355
 1184              	.LBB243:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1185              		.loc 3 528 3 view .LVU356
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1186              		.loc 3 531 4 view .LVU357
 1187              		.syntax unified
 1188              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1189 0252 96FAA6F3 		rbit r3, r6
 1190              	@ 0 "" 2
 1191              	.LVL82:
 1192              		.loc 3 544 3 view .LVU358
 1193              		.loc 3 544 3 is_stmt 0 view .LVU359
 1194              		.thumb
 1195              		.syntax unified
 1196              	.LBE243:
 1197              	.LBE242:
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1198              		.loc 1 292 13 discriminator 8 view .LVU360
 1199 0256 6A6A     		ldr	r2, [r5, #36]
 1200              	.LVL83:
 1201              	.LBB244:
 1202              	.LBI244:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1203              		.loc 3 526 57 is_stmt 1 view .LVU361
 1204              	.LBB245:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1205              		.loc 3 528 3 view .LVU362
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1206              		.loc 3 531 4 view .LVU363
 1207              		.syntax unified
 1208              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1209 0258 96FAA6F3 		rbit r3, r6
 1210              	@ 0 "" 2
 1211              	.LVL84:
 1212              		.loc 3 544 3 view .LVU364
 1213              		.loc 3 544 3 is_stmt 0 view .LVU365
 1214              		.thumb
 1215              		.syntax unified
 1216              	.LBE245:
 1217              	.LBE244:
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1218              		.loc 1 292 13 discriminator 1 view .LVU366
 1219 025c B3FA83F3 		clz	r3, r3
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1220              		.loc 1 292 13 discriminator 2 view .LVU367
 1221 0260 01FA03F3 		lsl	r3, r1, r3
 292:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1222              		.loc 1 292 49 discriminator 2 view .LVU368
 1223 0264 1342     		tst	r3, r2
 1224 0266 3FF4D8AE 		beq	.L51
 294:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1225              		.loc 1 294 9 is_stmt 1 view .LVU369
 294:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1226              		.loc 1 294 13 is_stmt 0 view .LVU370
 1227 026a FFF7FEFF 		bl	HAL_GetTick
 1228              	.LVL85:
 294:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1229              		.loc 1 294 27 discriminator 1 view .LVU371
 1230 026e C01B     		subs	r0, r0, r7
 294:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1231              		.loc 1 294 11 discriminator 1 view .LVU372
 1232 0270 0228     		cmp	r0, #2
 1233 0272 EAD9     		bls	.L52
 1234 0274 23E7     		b	.L33
 1235              	.LVL86:
 1236              	.L46:
 1237              	.LBB246:
 304:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 1238              		.loc 1 304 5 is_stmt 1 view .LVU373
 307:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 1239              		.loc 1 307 5 view .LVU374
 311:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1240              		.loc 1 311 5 view .LVU375
 311:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1241              		.loc 1 311 8 is_stmt 0 view .LVU376
 1242 0276 1C49     		ldr	r1, .L106
 1243 0278 CB69     		ldr	r3, [r1, #28]
 311:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1244              		.loc 1 311 7 view .LVU377
 1245 027a D800     		lsls	r0, r3, #3
 1246 027c 31D4     		bmi	.L80
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1247              		.loc 1 313 7 is_stmt 1 view .LVU378
 1248              	.LBB247:
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1249              		.loc 1 313 7 view .LVU379
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1250              		.loc 1 313 7 view .LVU380
 1251 027e CB69     		ldr	r3, [r1, #28]
 1252 0280 43F08053 		orr	r3, r3, #268435456
 1253 0284 CB61     		str	r3, [r1, #28]
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1254              		.loc 1 313 7 view .LVU381
 1255 0286 CB69     		ldr	r3, [r1, #28]
 1256 0288 03F08053 		and	r3, r3, #268435456
 1257 028c 0193     		str	r3, [sp, #4]
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1258              		.loc 1 313 7 view .LVU382
 1259 028e 019B     		ldr	r3, [sp, #4]
 1260              	.LBE247:
 313:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       pwrclkchanged = SET;
 1261              		.loc 1 313 7 view .LVU383
 314:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 1262              		.loc 1 314 7 view .LVU384
 1263              	.LVL87:
 314:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 1264              		.loc 1 314 21 is_stmt 0 view .LVU385
 1265 0290 0125     		movs	r5, #1
 1266              	.LVL88:
 1267              	.L55:
 317:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1268              		.loc 1 317 5 is_stmt 1 view .LVU386
 317:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1269              		.loc 1 317 8 is_stmt 0 view .LVU387
 1270 0292 174E     		ldr	r6, .L106+8
 1271 0294 3368     		ldr	r3, [r6]
 317:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1272              		.loc 1 317 7 view .LVU388
 1273 0296 DA05     		lsls	r2, r3, #23
 1274 0298 2CD5     		bpl	.L56
 1275              	.L61:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1276              		.loc 1 335 5 is_stmt 1 view .LVU389
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1277              		.loc 1 335 5 view .LVU390
 1278 029a E368     		ldr	r3, [r4, #12]
 1279 029c 012B     		cmp	r3, #1
 1280 029e 39D1     		bne	.L100
 1281              	.L105:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1282              		.loc 1 335 5 discriminator 7 view .LVU391
 1283 02a0 0B6A     		ldr	r3, [r1, #32]
 1284 02a2 43F00103 		orr	r3, r3, #1
 1285              	.L103:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1286              		.loc 1 335 5 is_stmt 0 discriminator 8 view .LVU392
 1287 02a6 0B62     		str	r3, [r1, #32]
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1288              		.loc 1 335 5 is_stmt 1 discriminator 10 view .LVU393
 337:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1289              		.loc 1 337 5 view .LVU394
 340:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1290              		.loc 1 340 7 view .LVU395
 340:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1291              		.loc 1 340 19 is_stmt 0 view .LVU396
 1292 02a8 FFF7FEFF 		bl	HAL_GetTick
 1293              	.LVL89:
 1294              	.LBB248:
 1295              	.LBB249:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1296              		.loc 3 531 4 view .LVU397
 1297 02ac 0226     		movs	r6, #2
 1298              	.LBE249:
 1299              	.LBE248:
 340:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1300              		.loc 1 340 19 view .LVU398
 1301 02ae 0746     		mov	r7, r0
 1302              	.LVL90:
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1303              		.loc 1 343 7 is_stmt 1 view .LVU399
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1304              		.loc 1 343 13 is_stmt 0 discriminator 2 view .LVU400
 1305 02b0 4FF00108 		mov	r8, #1
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1306              		.loc 1 345 11 discriminator 1 view .LVU401
 1307 02b4 41F28839 		movw	r9, #5000
 1308              	.LVL91:
 1309              	.L66:
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1310              		.loc 1 343 49 is_stmt 1 view .LVU402
 1311              	.LBB251:
 1312              	.LBI248:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1313              		.loc 3 526 57 view .LVU403
 1314              	.LBB250:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1315              		.loc 3 528 3 view .LVU404
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1316              		.loc 3 531 4 view .LVU405
 1317              		.syntax unified
 1318              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1319 02b8 96FAA6F3 		rbit r3, r6
 1320              	@ 0 "" 2
 1321              	.LVL92:
 1322              		.loc 3 544 3 view .LVU406
 1323              		.loc 3 544 3 is_stmt 0 view .LVU407
 1324              		.thumb
 1325              		.syntax unified
 1326              	.LBE250:
 1327              	.LBE251:
 1328              	.LBB252:
 1329              	.LBI252:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1330              		.loc 3 526 57 is_stmt 1 view .LVU408
 1331              	.LBB253:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1332              		.loc 3 528 3 view .LVU409
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1333              		.loc 3 531 4 view .LVU410
 1334              		.syntax unified
 1335              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1336 02bc 96FAA6F3 		rbit r3, r6
 1337              	@ 0 "" 2
 1338              	.LVL93:
 1339              		.loc 3 544 3 view .LVU411
 1340              		.loc 3 544 3 is_stmt 0 view .LVU412
 1341              		.thumb
 1342              		.syntax unified
 1343              	.LBE253:
 1344              	.LBE252:
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1345              		.loc 1 343 13 discriminator 4 view .LVU413
 1346 02c0 0A6A     		ldr	r2, [r1, #32]
 1347              	.LVL94:
 1348              	.LBB254:
 1349              	.LBI254:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1350              		.loc 3 526 57 is_stmt 1 view .LVU414
 1351              	.LBB255:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1352              		.loc 3 528 3 view .LVU415
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1353              		.loc 3 531 4 view .LVU416
 1354              		.syntax unified
 1355              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1356 02c2 96FAA6F3 		rbit r3, r6
 1357              	@ 0 "" 2
 1358              	.LVL95:
 1359              		.loc 3 544 3 view .LVU417
 1360              		.loc 3 544 3 is_stmt 0 view .LVU418
 1361              		.thumb
 1362              		.syntax unified
 1363              	.LBE255:
 1364              	.LBE254:
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1365              		.loc 1 343 13 discriminator 1 view .LVU419
 1366 02c6 B3FA83F3 		clz	r3, r3
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1367              		.loc 1 343 13 discriminator 2 view .LVU420
 1368 02ca 08FA03F3 		lsl	r3, r8, r3
 343:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1369              		.loc 1 343 49 discriminator 2 view .LVU421
 1370 02ce 1342     		tst	r3, r2
 1371 02d0 52D0     		beq	.L67
 1372              	.L70:
 367:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1373              		.loc 1 367 5 is_stmt 1 view .LVU422
 367:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1374              		.loc 1 367 7 is_stmt 0 view .LVU423
 1375 02d2 002D     		cmp	r5, #0
 1376 02d4 3FF4A5AE 		beq	.L54
 369:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 1377              		.loc 1 369 7 is_stmt 1 view .LVU424
 1378 02d8 CB69     		ldr	r3, [r1, #28]
 1379 02da 23F08053 		bic	r3, r3, #268435456
 1380 02de CB61     		str	r3, [r1, #28]
 1381 02e0 9FE6     		b	.L54
 1382              	.LVL96:
 1383              	.L80:
 304:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 1384              		.loc 1 304 22 is_stmt 0 view .LVU425
 1385 02e2 0025     		movs	r5, #0
 1386 02e4 D5E7     		b	.L55
 1387              	.L107:
 1388 02e6 00BF     		.align	2
 1389              	.L106:
 1390 02e8 00100240 		.word	1073876992
 1391 02ec 20819010 		.word	277905696
 1392 02f0 00700040 		.word	1073770496
 1393              	.LVL97:
 1394              	.L56:
 320:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1395              		.loc 1 320 7 is_stmt 1 view .LVU426
 1396 02f4 3368     		ldr	r3, [r6]
 1397 02f6 43F48073 		orr	r3, r3, #256
 1398 02fa 3360     		str	r3, [r6]
 323:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 1399              		.loc 1 323 7 view .LVU427
 323:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 1400              		.loc 1 323 19 is_stmt 0 view .LVU428
 1401 02fc FFF7FEFF 		bl	HAL_GetTick
 1402              	.LVL98:
 1403 0300 0746     		mov	r7, r0
 1404              	.LVL99:
 325:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1405              		.loc 1 325 7 is_stmt 1 view .LVU429
 1406              	.L59:
 325:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1407              		.loc 1 325 13 view .LVU430
 1408 0302 3368     		ldr	r3, [r6]
 1409 0304 DB05     		lsls	r3, r3, #23
 1410 0306 C8D4     		bmi	.L61
 327:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1411              		.loc 1 327 9 view .LVU431
 327:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1412              		.loc 1 327 13 is_stmt 0 view .LVU432
 1413 0308 FFF7FEFF 		bl	HAL_GetTick
 1414              	.LVL100:
 327:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1415              		.loc 1 327 27 discriminator 1 view .LVU433
 1416 030c C01B     		subs	r0, r0, r7
 327:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1417              		.loc 1 327 11 discriminator 1 view .LVU434
 1418 030e 6428     		cmp	r0, #100
 1419 0310 F7D9     		bls	.L59
 1420 0312 D4E6     		b	.L33
 1421              	.LVL101:
 1422              	.L100:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1423              		.loc 1 335 5 is_stmt 1 discriminator 2 view .LVU435
 1424 0314 13BB     		cbnz	r3, .L63
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1425              		.loc 1 335 5 discriminator 4 view .LVU436
 1426 0316 0B6A     		ldr	r3, [r1, #32]
 1427 0318 23F00103 		bic	r3, r3, #1
 1428 031c 0B62     		str	r3, [r1, #32]
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1429              		.loc 1 335 5 discriminator 4 view .LVU437
 1430 031e 0B6A     		ldr	r3, [r1, #32]
 1431 0320 23F00403 		bic	r3, r3, #4
 1432 0324 0B62     		str	r3, [r1, #32]
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1433              		.loc 1 335 5 discriminator 10 view .LVU438
 337:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1434              		.loc 1 337 5 view .LVU439
 354:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1435              		.loc 1 354 7 view .LVU440
 354:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1436              		.loc 1 354 19 is_stmt 0 view .LVU441
 1437 0326 FFF7FEFF 		bl	HAL_GetTick
 1438              	.LVL102:
 1439              	.LBB256:
 1440              	.LBB257:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1441              		.loc 3 531 4 view .LVU442
 1442 032a 0226     		movs	r6, #2
 1443              	.LBE257:
 1444              	.LBE256:
 354:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       
 1445              		.loc 1 354 19 view .LVU443
 1446 032c 0746     		mov	r7, r0
 1447              	.LVL103:
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1448              		.loc 1 357 7 is_stmt 1 view .LVU444
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1449              		.loc 1 357 13 is_stmt 0 discriminator 2 view .LVU445
 1450 032e 4FF00108 		mov	r8, #1
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1451              		.loc 1 359 11 discriminator 1 view .LVU446
 1452 0332 41F28839 		movw	r9, #5000
 1453              	.LVL104:
 1454              	.L64:
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1455              		.loc 1 357 49 is_stmt 1 view .LVU447
 1456              	.LBB259:
 1457              	.LBI256:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1458              		.loc 3 526 57 view .LVU448
 1459              	.LBB258:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1460              		.loc 3 528 3 view .LVU449
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1461              		.loc 3 531 4 view .LVU450
 1462              		.syntax unified
 1463              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1464 0336 96FAA6F3 		rbit r3, r6
 1465              	@ 0 "" 2
 1466              	.LVL105:
 1467              		.loc 3 544 3 view .LVU451
 1468              		.loc 3 544 3 is_stmt 0 view .LVU452
 1469              		.thumb
 1470              		.syntax unified
 1471              	.LBE258:
 1472              	.LBE259:
 1473              	.LBB260:
 1474              	.LBI260:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1475              		.loc 3 526 57 is_stmt 1 view .LVU453
 1476              	.LBB261:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1477              		.loc 3 528 3 view .LVU454
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1478              		.loc 3 531 4 view .LVU455
 1479              		.syntax unified
 1480              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1481 033a 96FAA6F3 		rbit r3, r6
 1482              	@ 0 "" 2
 1483              	.LVL106:
 1484              		.loc 3 544 3 view .LVU456
 1485              		.loc 3 544 3 is_stmt 0 view .LVU457
 1486              		.thumb
 1487              		.syntax unified
 1488              	.LBE261:
 1489              	.LBE260:
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1490              		.loc 1 357 13 discriminator 4 view .LVU458
 1491 033e 0A6A     		ldr	r2, [r1, #32]
 1492              	.LVL107:
 1493              	.LBB262:
 1494              	.LBI262:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1495              		.loc 3 526 57 is_stmt 1 view .LVU459
 1496              	.LBB263:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1497              		.loc 3 528 3 view .LVU460
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1498              		.loc 3 531 4 view .LVU461
 1499              		.syntax unified
 1500              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1501 0340 96FAA6F3 		rbit r3, r6
 1502              	@ 0 "" 2
 1503              	.LVL108:
 1504              		.loc 3 544 3 view .LVU462
 1505              		.loc 3 544 3 is_stmt 0 view .LVU463
 1506              		.thumb
 1507              		.syntax unified
 1508              	.LBE263:
 1509              	.LBE262:
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1510              		.loc 1 357 13 discriminator 1 view .LVU464
 1511 0344 B3FA83F3 		clz	r3, r3
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1512              		.loc 1 357 13 discriminator 2 view .LVU465
 1513 0348 08FA03F3 		lsl	r3, r8, r3
 357:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1514              		.loc 1 357 49 discriminator 2 view .LVU466
 1515 034c 1342     		tst	r3, r2
 1516 034e C0D0     		beq	.L70
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1517              		.loc 1 359 9 is_stmt 1 view .LVU467
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1518              		.loc 1 359 13 is_stmt 0 view .LVU468
 1519 0350 FFF7FEFF 		bl	HAL_GetTick
 1520              	.LVL109:
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1521              		.loc 1 359 27 discriminator 1 view .LVU469
 1522 0354 C01B     		subs	r0, r0, r7
 359:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1523              		.loc 1 359 11 discriminator 1 view .LVU470
 1524 0356 4845     		cmp	r0, r9
 1525 0358 EDD9     		bls	.L64
 1526 035a B0E6     		b	.L33
 1527              	.LVL110:
 1528              	.L63:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1529              		.loc 1 335 5 is_stmt 1 discriminator 5 view .LVU471
 1530 035c 052B     		cmp	r3, #5
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1531              		.loc 1 335 5 is_stmt 0 discriminator 7 view .LVU472
 1532 035e 0B6A     		ldr	r3, [r1, #32]
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1533              		.loc 1 335 5 discriminator 5 view .LVU473
 1534 0360 03D1     		bne	.L65
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1535              		.loc 1 335 5 is_stmt 1 discriminator 7 view .LVU474
 1536 0362 43F00403 		orr	r3, r3, #4
 1537 0366 0B62     		str	r3, [r1, #32]
 1538 0368 9AE7     		b	.L105
 1539              	.L65:
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1540              		.loc 1 335 5 discriminator 8 view .LVU475
 1541 036a 23F00103 		bic	r3, r3, #1
 1542 036e 0B62     		str	r3, [r1, #32]
 335:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the LSE State */
 1543              		.loc 1 335 5 discriminator 8 view .LVU476
 1544 0370 0B6A     		ldr	r3, [r1, #32]
 1545 0372 23F00403 		bic	r3, r3, #4
 1546 0376 96E7     		b	.L103
 1547              	.LVL111:
 1548              	.L67:
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1549              		.loc 1 345 9 view .LVU477
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1550              		.loc 1 345 13 is_stmt 0 view .LVU478
 1551 0378 FFF7FEFF 		bl	HAL_GetTick
 1552              	.LVL112:
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1553              		.loc 1 345 27 discriminator 1 view .LVU479
 1554 037c C01B     		subs	r0, r0, r7
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1555              		.loc 1 345 11 discriminator 1 view .LVU480
 1556 037e 4845     		cmp	r0, r9
 1557 0380 9AD9     		bls	.L66
 1558 0382 9CE6     		b	.L33
 1559              	.LVL113:
 1560              	.L71:
 345:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1561              		.loc 1 345 11 discriminator 1 view .LVU481
 1562              	.LBE246:
 379:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1563              		.loc 1 379 5 is_stmt 1 view .LVU482
 379:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1564              		.loc 1 379 8 is_stmt 0 view .LVU483
 1565 0384 3F49     		ldr	r1, .L108
 1566 0386 4B68     		ldr	r3, [r1, #4]
 1567 0388 03F00C03 		and	r3, r3, #12
 379:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     { 
 1568              		.loc 1 379 7 view .LVU484
 1569 038c 082B     		cmp	r3, #8
 1570 038e 3FF46DAE 		beq	.L39
 381:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1571              		.loc 1 381 7 is_stmt 1 view .LVU485
 381:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 1572              		.loc 1 381 9 is_stmt 0 view .LVU486
 1573 0392 022A     		cmp	r2, #2
 1574 0394 4FF08073 		mov	r3, #16777216
 1575 0398 50D1     		bne	.L72
 384:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 1576              		.loc 1 384 9 is_stmt 1 view .LVU487
 385:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1577              		.loc 1 385 9 view .LVU488
 391:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1578              		.loc 1 391 9 view .LVU489
 1579              	.LVL114:
 1580              	.LBB264:
 1581              	.LBI264:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1582              		.loc 3 526 57 view .LVU490
 1583              	.LBB265:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1584              		.loc 3 528 3 view .LVU491
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1585              		.loc 3 531 4 view .LVU492
 1586              		.syntax unified
 1587              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1588 039a 93FAA3F3 		rbit r3, r3
 1589              	@ 0 "" 2
 1590              	.LVL115:
 1591              		.loc 3 544 3 view .LVU493
 1592              		.loc 3 544 3 is_stmt 0 view .LVU494
 1593              		.thumb
 1594              		.syntax unified
 1595              	.LBE265:
 1596              	.LBE264:
 391:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1597              		.loc 1 391 9 discriminator 1 view .LVU495
 1598 039e B3FA83F3 		clz	r3, r3
 391:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1599              		.loc 1 391 9 discriminator 2 view .LVU496
 1600 03a2 03F18453 		add	r3, r3, #276824064
 1601 03a6 03F58413 		add	r3, r3, #1081344
 1602 03aa 9B00     		lsls	r3, r3, #2
 1603 03ac 0022     		movs	r2, #0
 1604 03ae 1A60     		str	r2, [r3]
 394:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1605              		.loc 1 394 9 is_stmt 1 view .LVU497
 394:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1606              		.loc 1 394 21 is_stmt 0 view .LVU498
 1607 03b0 FFF7FEFF 		bl	HAL_GetTick
 1608              	.LVL116:
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1609              		.loc 1 399 13 discriminator 1 view .LVU499
 1610 03b4 DFF8D080 		ldr	r8, .L108+4
 394:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1611              		.loc 1 394 21 view .LVU500
 1612 03b8 0646     		mov	r6, r0
 1613              	.LVL117:
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1614              		.loc 1 397 9 is_stmt 1 view .LVU501
 1615              	.LBB266:
 1616              	.LBB267:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1617              		.loc 3 531 4 is_stmt 0 view .LVU502
 1618 03ba 4FF00077 		mov	r7, #33554432
 1619              	.LBE267:
 1620              	.LBE266:
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1621              		.loc 1 397 15 discriminator 2 view .LVU503
 1622 03be 0125     		movs	r5, #1
 1623              	.LVL118:
 1624              	.L73:
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1625              		.loc 1 397 52 is_stmt 1 view .LVU504
 1626              	.LBB269:
 1627              	.LBI266:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1628              		.loc 3 526 57 view .LVU505
 1629              	.LBB268:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1630              		.loc 3 528 3 view .LVU506
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1631              		.loc 3 531 4 view .LVU507
 1632              		.syntax unified
 1633              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1634 03c0 97FAA7F3 		rbit r3, r7
 1635              	@ 0 "" 2
 1636              	.LVL119:
 1637              		.loc 3 544 3 view .LVU508
 1638              		.loc 3 544 3 is_stmt 0 view .LVU509
 1639              		.thumb
 1640              		.syntax unified
 1641              	.LBE268:
 1642              	.LBE269:
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1643              		.loc 1 397 15 discriminator 1 view .LVU510
 1644 03c4 0A68     		ldr	r2, [r1]
 1645              	.LVL120:
 1646              	.LBB270:
 1647              	.LBI270:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1648              		.loc 3 526 57 is_stmt 1 view .LVU511
 1649              	.LBB271:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1650              		.loc 3 528 3 view .LVU512
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1651              		.loc 3 531 4 view .LVU513
 1652              		.syntax unified
 1653              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1654 03c6 97FAA7F3 		rbit r3, r7
 1655              	@ 0 "" 2
 1656              	.LVL121:
 1657              		.loc 3 544 3 view .LVU514
 1658              		.loc 3 544 3 is_stmt 0 view .LVU515
 1659              		.thumb
 1660              		.syntax unified
 1661              	.LBE271:
 1662              	.LBE270:
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1663              		.loc 1 397 15 discriminator 1 view .LVU516
 1664 03ca B3FA83F3 		clz	r3, r3
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1665              		.loc 1 397 15 discriminator 2 view .LVU517
 1666 03ce 05FA03F3 		lsl	r3, r5, r3
 397:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1667              		.loc 1 397 52 discriminator 2 view .LVU518
 1668 03d2 1342     		tst	r3, r2
 1669 03d4 2CD1     		bne	.L74
 412:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 1670              		.loc 1 412 7 is_stmt 1 view .LVU519
 1671 03d6 D4E90803 		ldrd	r0, r3, [r4, #32]
 1672 03da 4A68     		ldr	r2, [r1, #4]
 1673 03dc 0343     		orrs	r3, r3, r0
 1674 03de 22F47412 		bic	r2, r2, #3997696
 1675 03e2 1343     		orrs	r3, r3, r2
 1676 03e4 4B60     		str	r3, [r1, #4]
 416:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1677              		.loc 1 416 9 view .LVU520
 1678              	.LVL122:
 1679              	.LBB272:
 1680              	.LBI272:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1681              		.loc 3 526 57 view .LVU521
 1682              	.LBB273:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1683              		.loc 3 528 3 view .LVU522
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1684              		.loc 3 531 4 view .LVU523
 1685 03e6 4FF08073 		mov	r3, #16777216
 1686              		.syntax unified
 1687              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1688 03ea 93FAA3F3 		rbit r3, r3
 1689              	@ 0 "" 2
 1690              	.LVL123:
 1691              		.loc 3 544 3 view .LVU524
 1692              		.loc 3 544 3 is_stmt 0 view .LVU525
 1693              		.thumb
 1694              		.syntax unified
 1695              	.LBE273:
 1696              	.LBE272:
 416:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1697              		.loc 1 416 9 discriminator 1 view .LVU526
 1698 03ee B3FA83F3 		clz	r3, r3
 416:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1699              		.loc 1 416 9 discriminator 2 view .LVU527
 1700 03f2 03F18453 		add	r3, r3, #276824064
 1701 03f6 03F58413 		add	r3, r3, #1081344
 1702 03fa 9B00     		lsls	r3, r3, #2
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1703              		.loc 1 424 13 discriminator 1 view .LVU528
 1704 03fc 224F     		ldr	r7, .L108+4
 416:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1705              		.loc 1 416 9 discriminator 2 view .LVU529
 1706 03fe 1D60     		str	r5, [r3]
 419:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1707              		.loc 1 419 9 is_stmt 1 view .LVU530
 419:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1708              		.loc 1 419 21 is_stmt 0 view .LVU531
 1709 0400 FFF7FEFF 		bl	HAL_GetTick
 1710              	.LVL124:
 1711              	.LBB274:
 1712              	.LBB275:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1713              		.loc 3 531 4 view .LVU532
 1714 0404 4FF00075 		mov	r5, #33554432
 1715              	.LBE275:
 1716              	.LBE274:
 419:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1717              		.loc 1 419 21 view .LVU533
 1718 0408 0446     		mov	r4, r0
 1719              	.LVL125:
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1720              		.loc 1 422 9 is_stmt 1 view .LVU534
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1721              		.loc 1 422 15 is_stmt 0 discriminator 2 view .LVU535
 1722 040a 0126     		movs	r6, #1
 1723              	.LVL126:
 1724              	.L75:
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1725              		.loc 1 422 52 is_stmt 1 view .LVU536
 1726              	.LBB277:
 1727              	.LBI274:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1728              		.loc 3 526 57 view .LVU537
 1729              	.LBB276:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1730              		.loc 3 528 3 view .LVU538
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1731              		.loc 3 531 4 view .LVU539
 1732              		.syntax unified
 1733              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1734 040c 95FAA5F3 		rbit r3, r5
 1735              	@ 0 "" 2
 1736              	.LVL127:
 1737              		.loc 3 544 3 view .LVU540
 1738              		.loc 3 544 3 is_stmt 0 view .LVU541
 1739              		.thumb
 1740              		.syntax unified
 1741              	.LBE276:
 1742              	.LBE277:
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1743              		.loc 1 422 15 discriminator 1 view .LVU542
 1744 0410 0A68     		ldr	r2, [r1]
 1745              	.LVL128:
 1746              	.LBB278:
 1747              	.LBI278:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1748              		.loc 3 526 57 is_stmt 1 view .LVU543
 1749              	.LBB279:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1750              		.loc 3 528 3 view .LVU544
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1751              		.loc 3 531 4 view .LVU545
 1752              		.syntax unified
 1753              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1754 0412 95FAA5F3 		rbit r3, r5
 1755              	@ 0 "" 2
 1756              	.LVL129:
 1757              		.loc 3 544 3 view .LVU546
 1758              		.loc 3 544 3 is_stmt 0 view .LVU547
 1759              		.thumb
 1760              		.syntax unified
 1761              	.LBE279:
 1762              	.LBE278:
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1763              		.loc 1 422 15 discriminator 1 view .LVU548
 1764 0416 B3FA83F3 		clz	r3, r3
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1765              		.loc 1 422 15 discriminator 2 view .LVU549
 1766 041a 06FA03F3 		lsl	r3, r6, r3
 422:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1767              		.loc 1 422 52 discriminator 2 view .LVU550
 1768 041e 1342     		tst	r3, r2
 1769 0420 7FF403AE 		bne	.L77
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1770              		.loc 1 424 11 is_stmt 1 view .LVU551
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1771              		.loc 1 424 15 is_stmt 0 view .LVU552
 1772 0424 FFF7FEFF 		bl	HAL_GetTick
 1773              	.LVL130:
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1774              		.loc 1 424 29 discriminator 1 view .LVU553
 1775 0428 001B     		subs	r0, r0, r4
 424:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1776              		.loc 1 424 13 discriminator 1 view .LVU554
 1777 042a B842     		cmp	r0, r7
 1778 042c EED9     		bls	.L75
 1779 042e 46E6     		b	.L33
 1780              	.LVL131:
 1781              	.L74:
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1782              		.loc 1 399 11 is_stmt 1 view .LVU555
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1783              		.loc 1 399 15 is_stmt 0 view .LVU556
 1784 0430 FFF7FEFF 		bl	HAL_GetTick
 1785              	.LVL132:
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1786              		.loc 1 399 29 discriminator 1 view .LVU557
 1787 0434 831B     		subs	r3, r0, r6
 399:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1788              		.loc 1 399 13 discriminator 1 view .LVU558
 1789 0436 4345     		cmp	r3, r8
 1790 0438 C2D9     		bls	.L73
 1791 043a 40E6     		b	.L33
 1792              	.LVL133:
 1793              	.L72:
 433:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****  
 1794              		.loc 1 433 9 is_stmt 1 view .LVU559
 1795              	.LBB280:
 1796              	.LBI280:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1797              		.loc 3 526 57 view .LVU560
 1798              	.LBB281:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1799              		.loc 3 528 3 view .LVU561
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1800              		.loc 3 531 4 view .LVU562
 1801              		.syntax unified
 1802              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1803 043c 93FAA3F3 		rbit r3, r3
 1804              	@ 0 "" 2
 1805              	.LVL134:
 1806              		.loc 3 544 3 view .LVU563
 1807              		.loc 3 544 3 is_stmt 0 view .LVU564
 1808              		.thumb
 1809              		.syntax unified
 1810              	.LBE281:
 1811              	.LBE280:
 433:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****  
 1812              		.loc 1 433 9 discriminator 1 view .LVU565
 1813 0440 B3FA83F3 		clz	r3, r3
 433:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****  
 1814              		.loc 1 433 9 discriminator 2 view .LVU566
 1815 0444 03F18453 		add	r3, r3, #276824064
 1816 0448 03F58413 		add	r3, r3, #1081344
 1817 044c 9B00     		lsls	r3, r3, #2
 1818 044e 0022     		movs	r2, #0
 1819 0450 1A60     		str	r2, [r3]
 436:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1820              		.loc 1 436 9 is_stmt 1 view .LVU567
 436:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1821              		.loc 1 436 21 is_stmt 0 view .LVU568
 1822 0452 FFF7FEFF 		bl	HAL_GetTick
 1823              	.LVL135:
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1824              		.loc 1 441 13 discriminator 1 view .LVU569
 1825 0456 0C4F     		ldr	r7, .L108+4
 436:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 1826              		.loc 1 436 21 view .LVU570
 1827 0458 0446     		mov	r4, r0
 1828              	.LVL136:
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1829              		.loc 1 439 9 is_stmt 1 view .LVU571
 1830              	.LBB282:
 1831              	.LBB283:
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1832              		.loc 3 531 4 is_stmt 0 view .LVU572
 1833 045a 4FF00075 		mov	r5, #33554432
 1834              	.LBE283:
 1835              	.LBE282:
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1836              		.loc 1 439 15 discriminator 2 view .LVU573
 1837 045e 0126     		movs	r6, #1
 1838              	.LVL137:
 1839              	.L78:
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1840              		.loc 1 439 52 is_stmt 1 view .LVU574
 1841              	.LBB285:
 1842              	.LBI282:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1843              		.loc 3 526 57 view .LVU575
 1844              	.LBB284:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1845              		.loc 3 528 3 view .LVU576
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1846              		.loc 3 531 4 view .LVU577
 1847              		.syntax unified
 1848              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1849 0460 95FAA5F3 		rbit r3, r5
 1850              	@ 0 "" 2
 1851              	.LVL138:
 1852              		.loc 3 544 3 view .LVU578
 1853              		.loc 3 544 3 is_stmt 0 view .LVU579
 1854              		.thumb
 1855              		.syntax unified
 1856              	.LBE284:
 1857              	.LBE285:
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1858              		.loc 1 439 15 discriminator 1 view .LVU580
 1859 0464 0A68     		ldr	r2, [r1]
 1860              	.LVL139:
 1861              	.LBB286:
 1862              	.LBI286:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 1863              		.loc 3 526 57 is_stmt 1 view .LVU581
 1864              	.LBB287:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 1865              		.loc 3 528 3 view .LVU582
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 1866              		.loc 3 531 4 view .LVU583
 1867              		.syntax unified
 1868              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 1869 0466 95FAA5F3 		rbit r3, r5
 1870              	@ 0 "" 2
 1871              	.LVL140:
 1872              		.loc 3 544 3 view .LVU584
 1873              		.loc 3 544 3 is_stmt 0 view .LVU585
 1874              		.thumb
 1875              		.syntax unified
 1876              	.LBE287:
 1877              	.LBE286:
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1878              		.loc 1 439 15 discriminator 1 view .LVU586
 1879 046a B3FA83F3 		clz	r3, r3
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1880              		.loc 1 439 15 discriminator 2 view .LVU587
 1881 046e 06FA03F3 		lsl	r3, r6, r3
 439:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 1882              		.loc 1 439 52 discriminator 2 view .LVU588
 1883 0472 1342     		tst	r3, r2
 1884 0474 3FF4D9AD 		beq	.L77
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1885              		.loc 1 441 11 is_stmt 1 view .LVU589
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1886              		.loc 1 441 15 is_stmt 0 view .LVU590
 1887 0478 FFF7FEFF 		bl	HAL_GetTick
 1888              	.LVL141:
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1889              		.loc 1 441 29 discriminator 1 view .LVU591
 1890 047c 001B     		subs	r0, r0, r4
 441:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           {
 1891              		.loc 1 441 13 discriminator 1 view .LVU592
 1892 047e B842     		cmp	r0, r7
 1893 0480 EED9     		bls	.L78
 1894 0482 1CE6     		b	.L33
 1895              	.L109:
 1896              		.align	2
 1897              	.L108:
 1898 0484 00100240 		.word	1073876992
 1899 0488 400D0300 		.word	200000
 1900              		.cfi_endproc
 1901              	.LFE132:
 1903              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1904              		.align	1
 1905              		.global	HAL_RCC_ClockConfig
 1906              		.syntax unified
 1907              		.thumb
 1908              		.thumb_func
 1910              	HAL_RCC_ClockConfig:
 1911              	.LVL142:
 1912              	.LFB133:
 456:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 457:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 458:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 459:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 460:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         parameters in the RCC_ClkInitStruct.
 461:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 462:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         contains the configuration information for the RCC peripheral.
 463:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  FLatency FLASH Latency                   
 464:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *          The value of this parameter depend on device used within the same series
 465:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 466:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 467:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
 468:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 469:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 470:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         of failure of the HSE used directly or indirectly as system clock
 471:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         (if the Clock Security System CSS is enabled).
 472:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *           
 473:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   A switch from one clock source to another occurs only if the target
 474:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 475:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         If a clock source which is not yet ready is selected, the switch will
 476:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         occur when the clock source will be ready. 
 477:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 478:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         currently used as system clock source.
 479:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 480:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 481:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 482:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 1913              		.loc 1 482 1 is_stmt 1 view -0
 1914              		.cfi_startproc
 1915              		@ args = 0, pretend = 0, frame = 0
 1916              		@ frame_needed = 0, uses_anonymous_args = 0
 483:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1917              		.loc 1 483 3 view .LVU594
 484:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 485:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 486:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(RCC_ClkInitStruct != NULL);
 1918              		.loc 1 486 3 view .LVU595
 487:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 1919              		.loc 1 487 3 view .LVU596
 488:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 1920              		.loc 1 488 3 view .LVU597
 489:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 490:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 491:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   must be correctly programmed according to the frequency of the CPU clock 
 492:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     (HCLK) of the device. */
 493:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 494:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 495:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1921              		.loc 1 495 3 view .LVU598
 1922              		.loc 1 495 23 is_stmt 0 view .LVU599
 1923 0000 4D4A     		ldr	r2, .L154
 482:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1924              		.loc 1 482 1 view .LVU600
 1925 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1926              	.LCFI4:
 1927              		.cfi_def_cfa_offset 24
 1928              		.cfi_offset 3, -24
 1929              		.cfi_offset 4, -20
 1930              		.cfi_offset 5, -16
 1931              		.cfi_offset 6, -12
 1932              		.cfi_offset 7, -8
 1933              		.cfi_offset 14, -4
 1934              		.loc 1 495 23 view .LVU601
 1935 0004 1368     		ldr	r3, [r2]
 1936              		.loc 1 495 29 view .LVU602
 1937 0006 03F00703 		and	r3, r3, #7
 1938              		.loc 1 495 5 view .LVU603
 1939 000a 8B42     		cmp	r3, r1
 482:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 1940              		.loc 1 482 1 view .LVU604
 1941 000c 0446     		mov	r4, r0
 1942              		.loc 1 495 5 view .LVU605
 1943 000e 11D3     		bcc	.L111
 1944              	.L114:
 496:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {    
 497:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 498:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 499:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 500:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 501:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 502:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 503:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 504:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 505:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 506:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 507:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 508:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 509:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1945              		.loc 1 509 3 is_stmt 1 view .LVU606
 1946              		.loc 1 509 25 is_stmt 0 view .LVU607
 1947 0010 2268     		ldr	r2, [r4]
 1948              		.loc 1 509 5 view .LVU608
 1949 0012 9507     		lsls	r5, r2, #30
 1950 0014 1AD4     		bmi	.L112
 1951              	.LVL143:
 1952              	.L113:
 510:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 511:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 512:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 513:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 514:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 515:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 516:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1953              		.loc 1 516 3 is_stmt 1 view .LVU609
 1954              		.loc 1 516 5 is_stmt 0 view .LVU610
 1955 0016 D007     		lsls	r0, r2, #31
 1956 0018 20D4     		bmi	.L116
 1957              	.LVL144:
 1958              	.L126:
 517:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {    
 518:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 519:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 520:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* HSE is selected as System Clock Source */
 521:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 522:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 523:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSE ready flag */  
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 525:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 526:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 527:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 528:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 529:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* PLL is selected as System Clock Source */
 530:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 531:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 532:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the PLL ready flag */  
 533:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 534:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 535:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 536:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 537:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 538:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* HSI is selected as System Clock Source */
 539:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 540:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 541:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Check the HSI ready flag */  
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 543:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 544:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_ERROR;
 545:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 546:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 547:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 548:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 549:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Get Start Tick */
 550:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 551:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 552:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 553:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 554:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 555:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 557:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 558:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 559:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 560:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 561:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 562:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 563:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 564:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 565:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 566:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 567:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 568:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 569:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 570:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 571:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 572:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     else
 573:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 574:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 575:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 576:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 577:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 578:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           return HAL_TIMEOUT;
 579:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 580:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 581:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }      
 582:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }    
 583:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 584:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1959              		.loc 1 584 3 is_stmt 1 view .LVU611
 1960              		.loc 1 584 23 is_stmt 0 view .LVU612
 1961 001a 474A     		ldr	r2, .L154
 1962 001c 1368     		ldr	r3, [r2]
 1963              		.loc 1 584 29 view .LVU613
 1964 001e 03F00703 		and	r3, r3, #7
 1965              		.loc 1 584 5 view .LVU614
 1966 0022 8B42     		cmp	r3, r1
 1967 0024 6CD8     		bhi	.L117
 1968              	.L118:
 585:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {    
 586:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 587:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 588:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 589:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 590:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     memory by reading the FLASH_ACR register */
 591:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 592:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 593:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_ERROR;
 594:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 595:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }    
 596:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 597:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 598:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1969              		.loc 1 598 3 is_stmt 1 view .LVU615
 1970              		.loc 1 598 25 is_stmt 0 view .LVU616
 1971 0026 2268     		ldr	r2, [r4]
 1972              		.loc 1 598 5 view .LVU617
 1973 0028 5107     		lsls	r1, r2, #29
 1974              	.LVL145:
 1975              		.loc 1 598 5 view .LVU618
 1976 002a 74D4     		bmi	.L132
 1977              	.L133:
 599:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 600:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 601:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 602:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 603:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 604:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 605:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1978              		.loc 1 605 3 is_stmt 1 view .LVU619
 1979              		.loc 1 605 5 is_stmt 0 view .LVU620
 1980 002c 1307     		lsls	r3, r2, #28
 1981 002e 7AD4     		bmi	.L134
 1982              	.L135:
 606:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 607:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 608:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 609:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 610:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****  
 611:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Update the SystemCoreClock global variable */
 612:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   //SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_
 613:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 614:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the source of time base considering new system clocks settings*/
 615:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   //HAL_InitTick (TICK_INT_PRIORITY);
 616:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   
 617:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 1983              		.loc 1 617 10 view .LVU621
 1984 0030 0020     		movs	r0, #0
 1985 0032 0AE0     		b	.L115
 1986              	.LVL146:
 1987              	.L111:
 498:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 1988              		.loc 1 498 5 is_stmt 1 view .LVU622
 1989 0034 1368     		ldr	r3, [r2]
 1990 0036 23F00703 		bic	r3, r3, #7
 1991 003a 0B43     		orrs	r3, r3, r1
 1992 003c 1360     		str	r3, [r2]
 502:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1993              		.loc 1 502 5 view .LVU623
 502:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1994              		.loc 1 502 14 is_stmt 0 view .LVU624
 1995 003e 1368     		ldr	r3, [r2]
 502:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1996              		.loc 1 502 20 view .LVU625
 1997 0040 03F00703 		and	r3, r3, #7
 502:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 1998              		.loc 1 502 7 view .LVU626
 1999 0044 8B42     		cmp	r3, r1
 2000 0046 E3D0     		beq	.L114
 2001              	.LVL147:
 2002              	.L120:
 504:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 2003              		.loc 1 504 14 view .LVU627
 2004 0048 0120     		movs	r0, #1
 2005              	.LVL148:
 2006              	.L115:
 618:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 2007              		.loc 1 618 1 view .LVU628
 2008 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2009              	.LVL149:
 2010              	.L112:
 511:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 2011              		.loc 1 511 5 is_stmt 1 view .LVU629
 512:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2012              		.loc 1 512 5 view .LVU630
 2013 004c 3B48     		ldr	r0, .L154+4
 2014              	.LVL150:
 512:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2015              		.loc 1 512 5 is_stmt 0 view .LVU631
 2016 004e A568     		ldr	r5, [r4, #8]
 2017 0050 4368     		ldr	r3, [r0, #4]
 2018 0052 23F0F003 		bic	r3, r3, #240
 2019 0056 2B43     		orrs	r3, r3, r5
 2020 0058 4360     		str	r3, [r0, #4]
 2021 005a DCE7     		b	.L113
 2022              	.L116:
 518:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 2023              		.loc 1 518 5 is_stmt 1 view .LVU632
 521:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2024              		.loc 1 521 5 view .LVU633
 521:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2025              		.loc 1 521 25 is_stmt 0 view .LVU634
 2026 005c 6268     		ldr	r2, [r4, #4]
 2027 005e 374D     		ldr	r5, .L154+4
 521:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2028              		.loc 1 521 7 view .LVU635
 2029 0060 012A     		cmp	r2, #1
 2030 0062 25D1     		bne	.L119
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2031              		.loc 1 524 7 is_stmt 1 view .LVU636
 2032              	.LVL151:
 2033              	.LBB288:
 2034              	.LBI288:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2035              		.loc 3 526 57 view .LVU637
 2036              	.LBB289:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2037              		.loc 3 528 3 view .LVU638
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2038              		.loc 3 531 4 view .LVU639
 2039 0064 4FF40033 		mov	r3, #131072
 2040              		.syntax unified
 2041              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2042 0068 93FAA3F0 		rbit r0, r3
 2043              	@ 0 "" 2
 2044              	.LVL152:
 2045              		.loc 3 544 3 view .LVU640
 2046              		.loc 3 544 3 is_stmt 0 view .LVU641
 2047              		.thumb
 2048              		.syntax unified
 2049              	.LBE289:
 2050              	.LBE288:
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2051              		.loc 1 524 10 discriminator 1 view .LVU642
 2052 006c 2868     		ldr	r0, [r5]
 2053              	.LVL153:
 2054              	.LBB290:
 2055              	.LBI290:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2056              		.loc 3 526 57 is_stmt 1 view .LVU643
 2057              	.LBB291:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2058              		.loc 3 528 3 view .LVU644
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2059              		.loc 3 531 4 view .LVU645
 2060              		.syntax unified
 2061              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2062 006e 93FAA3F3 		rbit r3, r3
 2063              	@ 0 "" 2
 2064              	.LVL154:
 2065              		.loc 3 544 3 view .LVU646
 2066              		.loc 3 544 3 is_stmt 0 view .LVU647
 2067              		.thumb
 2068              		.syntax unified
 2069              	.LBE291:
 2070              	.LBE290:
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2071              		.loc 1 524 10 discriminator 1 view .LVU648
 2072 0072 B3FA83F3 		clz	r3, r3
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2073              		.loc 1 524 10 discriminator 2 view .LVU649
 2074 0076 02FA03F3 		lsl	r3, r2, r3
 524:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2075              		.loc 1 524 9 discriminator 2 view .LVU650
 2076 007a 0342     		tst	r3, r0
 2077              	.L151:
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2078              		.loc 1 542 9 discriminator 2 view .LVU651
 2079 007c E4D0     		beq	.L120
 547:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2080              		.loc 1 547 5 is_stmt 1 view .LVU652
 2081 007e 6B68     		ldr	r3, [r5, #4]
 2082 0080 23F00303 		bic	r3, r3, #3
 2083 0084 1343     		orrs	r3, r3, r2
 2084 0086 6B60     		str	r3, [r5, #4]
 550:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 2085              		.loc 1 550 5 view .LVU653
 550:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 2086              		.loc 1 550 17 is_stmt 0 view .LVU654
 2087 0088 FFF7FEFF 		bl	HAL_GetTick
 2088              	.LVL155:
 552:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2089              		.loc 1 552 25 view .LVU655
 2090 008c 6368     		ldr	r3, [r4, #4]
 552:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2091              		.loc 1 552 7 view .LVU656
 2092 008e 012B     		cmp	r3, #1
 550:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 2093              		.loc 1 550 17 view .LVU657
 2094 0090 0646     		mov	r6, r0
 2095              	.LVL156:
 552:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2096              		.loc 1 552 5 is_stmt 1 view .LVU658
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2097              		.loc 1 556 11 is_stmt 0 discriminator 1 view .LVU659
 2098 0092 41F28837 		movw	r7, #5000
 552:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2099              		.loc 1 552 7 view .LVU660
 2100 0096 1CD1     		bne	.L148
 2101              	.LVL157:
 2102              	.L123:
 554:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2103              		.loc 1 554 44 is_stmt 1 view .LVU661
 554:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2104              		.loc 1 554 14 is_stmt 0 view .LVU662
 2105 0098 6B68     		ldr	r3, [r5, #4]
 2106 009a 03F00C03 		and	r3, r3, #12
 554:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2107              		.loc 1 554 44 view .LVU663
 2108 009e 042B     		cmp	r3, #4
 2109 00a0 BBD0     		beq	.L126
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2110              		.loc 1 556 9 is_stmt 1 view .LVU664
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2111              		.loc 1 556 13 is_stmt 0 view .LVU665
 2112 00a2 FFF7FEFF 		bl	HAL_GetTick
 2113              	.LVL158:
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2114              		.loc 1 556 27 discriminator 1 view .LVU666
 2115 00a6 801B     		subs	r0, r0, r6
 556:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2116              		.loc 1 556 11 discriminator 1 view .LVU667
 2117 00a8 B842     		cmp	r0, r7
 2118 00aa F5D9     		bls	.L123
 2119              	.L129:
 558:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2120              		.loc 1 558 18 view .LVU668
 2121 00ac 0320     		movs	r0, #3
 2122 00ae CCE7     		b	.L115
 2123              	.LVL159:
 2124              	.L119:
 530:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2125              		.loc 1 530 10 is_stmt 1 view .LVU669
 530:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2126              		.loc 1 530 12 is_stmt 0 view .LVU670
 2127 00b0 022A     		cmp	r2, #2
 533:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2128              		.loc 1 533 7 is_stmt 1 view .LVU671
 2129              	.LVL160:
 2130              	.LBB292:
 2131              	.LBI292:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2132              		.loc 3 526 57 view .LVU672
 2133              	.LBB293:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2134              		.loc 3 528 3 view .LVU673
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2135              		.loc 3 531 4 view .LVU674
 2136 00b2 0CBF     		ite	eq
 2137 00b4 4FF00073 		moveq	r3, #33554432
 2138              	.LBE293:
 2139              	.LBE292:
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2140              		.loc 1 542 7 view .LVU675
 2141              	.LVL161:
 2142              	.LBB294:
 2143              	.LBI294:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2144              		.loc 3 526 57 view .LVU676
 2145              	.LBB295:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2146              		.loc 3 528 3 view .LVU677
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2147              		.loc 3 531 4 view .LVU678
 2148 00b8 0223     		movne	r3, #2
 2149              		.syntax unified
 2150              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2151 00ba 93FAA3F0 		rbit r0, r3
 2152              	@ 0 "" 2
 2153              	.LVL162:
 2154              		.loc 3 544 3 view .LVU679
 2155              		.loc 3 544 3 is_stmt 0 view .LVU680
 2156              		.thumb
 2157              		.syntax unified
 2158              	.LBE295:
 2159              	.LBE294:
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2160              		.loc 1 542 10 discriminator 1 view .LVU681
 2161 00be 2E68     		ldr	r6, [r5]
 2162              	.LVL163:
 2163              	.LBB296:
 2164              	.LBI296:
 526:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** {
 2165              		.loc 3 526 57 is_stmt 1 view .LVU682
 2166              	.LBB297:
 528:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** 
 2167              		.loc 3 528 3 view .LVU683
 531:.././hal//stm32f3/CMSIS/core/cmsis_gcc.h **** #else
 2168              		.loc 3 531 4 view .LVU684
 2169              		.syntax unified
 2170              	@ 531 ".././hal//stm32f3/CMSIS/core/cmsis_gcc.h" 1
 2171 00c0 93FAA3F3 		rbit r3, r3
 2172              	@ 0 "" 2
 2173              	.LVL164:
 2174              		.loc 3 544 3 view .LVU685
 2175              		.loc 3 544 3 is_stmt 0 view .LVU686
 2176              		.thumb
 2177              		.syntax unified
 2178              	.LBE297:
 2179              	.LBE296:
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2180              		.loc 1 542 10 discriminator 2 view .LVU687
 2181 00c4 0120     		movs	r0, #1
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2182              		.loc 1 542 10 discriminator 1 view .LVU688
 2183 00c6 B3FA83F3 		clz	r3, r3
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2184              		.loc 1 542 10 discriminator 2 view .LVU689
 2185 00ca 00FA03F3 		lsl	r3, r0, r3
 542:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2186              		.loc 1 542 9 discriminator 2 view .LVU690
 2187 00ce 3342     		tst	r3, r6
 2188 00d0 D4E7     		b	.L151
 2189              	.LVL165:
 2190              	.L148:
 562:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2191              		.loc 1 562 10 is_stmt 1 view .LVU691
 562:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2192              		.loc 1 562 12 is_stmt 0 view .LVU692
 2193 00d2 022B     		cmp	r3, #2
 2194 00d4 0FD1     		bne	.L128
 2195              	.LVL166:
 2196              	.L127:
 564:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2197              		.loc 1 564 44 is_stmt 1 view .LVU693
 564:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2198              		.loc 1 564 14 is_stmt 0 view .LVU694
 2199 00d6 6B68     		ldr	r3, [r5, #4]
 2200 00d8 03F00C03 		and	r3, r3, #12
 564:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2201              		.loc 1 564 44 view .LVU695
 2202 00dc 082B     		cmp	r3, #8
 2203 00de 9CD0     		beq	.L126
 566:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2204              		.loc 1 566 9 is_stmt 1 view .LVU696
 566:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2205              		.loc 1 566 13 is_stmt 0 view .LVU697
 2206 00e0 FFF7FEFF 		bl	HAL_GetTick
 2207              	.LVL167:
 566:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2208              		.loc 1 566 27 discriminator 1 view .LVU698
 2209 00e4 801B     		subs	r0, r0, r6
 566:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2210              		.loc 1 566 11 discriminator 1 view .LVU699
 2211 00e6 B842     		cmp	r0, r7
 2212 00e8 F5D9     		bls	.L127
 2213 00ea DFE7     		b	.L129
 2214              	.L131:
 576:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2215              		.loc 1 576 9 is_stmt 1 view .LVU700
 576:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2216              		.loc 1 576 13 is_stmt 0 view .LVU701
 2217 00ec FFF7FEFF 		bl	HAL_GetTick
 2218              	.LVL168:
 576:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2219              		.loc 1 576 27 discriminator 1 view .LVU702
 2220 00f0 801B     		subs	r0, r0, r6
 576:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2221              		.loc 1 576 11 discriminator 1 view .LVU703
 2222 00f2 B842     		cmp	r0, r7
 2223 00f4 DAD8     		bhi	.L129
 2224              	.L128:
 574:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2225              		.loc 1 574 44 is_stmt 1 view .LVU704
 574:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2226              		.loc 1 574 14 is_stmt 0 view .LVU705
 2227 00f6 6B68     		ldr	r3, [r5, #4]
 574:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2228              		.loc 1 574 44 view .LVU706
 2229 00f8 13F00C0F 		tst	r3, #12
 2230 00fc F6D1     		bne	.L131
 2231 00fe 8CE7     		b	.L126
 2232              	.LVL169:
 2233              	.L117:
 587:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 2234              		.loc 1 587 5 is_stmt 1 view .LVU707
 2235 0100 1368     		ldr	r3, [r2]
 2236 0102 23F00703 		bic	r3, r3, #7
 2237 0106 0B43     		orrs	r3, r3, r1
 2238 0108 1360     		str	r3, [r2]
 591:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2239              		.loc 1 591 5 view .LVU708
 591:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2240              		.loc 1 591 14 is_stmt 0 view .LVU709
 2241 010a 1368     		ldr	r3, [r2]
 591:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2242              		.loc 1 591 20 view .LVU710
 2243 010c 03F00703 		and	r3, r3, #7
 591:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2244              		.loc 1 591 7 view .LVU711
 2245 0110 8B42     		cmp	r3, r1
 2246 0112 99D1     		bne	.L120
 2247 0114 87E7     		b	.L118
 2248              	.LVL170:
 2249              	.L132:
 600:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 2250              		.loc 1 600 5 is_stmt 1 view .LVU712
 601:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2251              		.loc 1 601 5 view .LVU713
 2252 0116 0949     		ldr	r1, .L154+4
 2253 0118 E068     		ldr	r0, [r4, #12]
 2254 011a 4B68     		ldr	r3, [r1, #4]
 2255 011c 23F4E063 		bic	r3, r3, #1792
 2256 0120 0343     		orrs	r3, r3, r0
 2257 0122 4B60     		str	r3, [r1, #4]
 2258 0124 82E7     		b	.L133
 2259              	.L134:
 607:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2260              		.loc 1 607 5 view .LVU714
 608:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2261              		.loc 1 608 5 view .LVU715
 2262 0126 054A     		ldr	r2, .L154+4
 2263 0128 2169     		ldr	r1, [r4, #16]
 2264 012a 5368     		ldr	r3, [r2, #4]
 2265 012c 23F46053 		bic	r3, r3, #14336
 2266 0130 43EAC103 		orr	r3, r3, r1, lsl #3
 2267 0134 5360     		str	r3, [r2, #4]
 2268 0136 7BE7     		b	.L135
 2269              	.L155:
 2270              		.align	2
 2271              	.L154:
 2272 0138 00200240 		.word	1073881088
 2273 013c 00100240 		.word	1073876992
 2274              		.cfi_endproc
 2275              	.LFE133:
 2277              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2278              		.align	1
 2279              		.global	HAL_RCC_GetPCLK2Freq
 2280              		.syntax unified
 2281              		.thumb
 2282              		.thumb_func
 2284              	HAL_RCC_GetPCLK2Freq:
 2285              	.LFB146:
 2286              		.cfi_startproc
 619:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 620:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 621:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Returns the PCLK2 frequency
 622:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 623:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 624:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval PCLK2 frequency
 625:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 626:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
 2287              		.loc 1 626 10 view -0
 2288              		@ args = 0, pretend = 0, frame = 0
 2289              		@ frame_needed = 0, uses_anonymous_args = 0
 2290              		@ link register save eliminated.
 2291 0000 4FF4E100 		mov	r0, #7372800
 2292 0004 7047     		bx	lr
 2293              		.cfi_endproc
 2294              	.LFE146:
 2296              		.section	.text.HAL_GPIO_Init,"ax",%progbits
 2297              		.align	1
 2298              		.global	HAL_GPIO_Init
 2299              		.syntax unified
 2300              		.thumb
 2301              		.thumb_func
 2303              	HAL_GPIO_Init:
 2304              	.LVL171:
 2305              	.LFB135:
 627:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 628:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 629:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   //return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> POSITION_VAL(RCC_C
 630:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return F_CPU;
 631:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 632:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 633:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 634:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 635:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE             (0x00000003U)
 636:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define EXTI_MODE             (0x10000000U)
 637:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE_IT          (0x00010000U)
 638:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_MODE_EVT         (0x00020000U)
 639:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define RISING_EDGE           (0x00100000U)
 640:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define FALLING_EDGE          (0x00200000U)
 641:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_OUTPUT_TYPE      (0x00000010U)
 642:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 643:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define GPIO_NUMBER           (16U)
 644:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 645:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** #define __HAL_RCC_GPIOA_CLK_ENABLE()   do { \
 646:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                         __IO uint32_t tmpreg; \
 647:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                         SET_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 648:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                         /* Delay after an RCC peripheral clock enabling */ \
 649:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                         tmpreg = READ_BIT(RCC->AHBENR, RCC_AHBENR_GPIOAEN);\
 650:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                         UNUSED(tmpreg); \
 651:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****                                       } while(0U)
 652:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 653:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 654:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 655:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Initialize the GPIOx peripheral according to the specified parameters in the GPIO_Init.
 656:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F3 family devices
 657:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
 658:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         the configuration information for the specified GPIO peripheral.
 659:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval None
 660:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 661:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
 662:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 2306              		.loc 1 662 1 view -0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 8
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 663:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2310              		.loc 1 663 3 view .LVU718
 664:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2311              		.loc 1 664 3 view .LVU719
 665:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t temp = 0x00U;
 2312              		.loc 1 665 3 view .LVU720
 666:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 667:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 668:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 2313              		.loc 1 668 3 view .LVU721
 669:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 2314              		.loc 1 669 3 view .LVU722
 670:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 2315              		.loc 1 670 3 view .LVU723
 671:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 2316              		.loc 1 671 3 view .LVU724
 672:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 673:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the port pins */
 674:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   while (((GPIO_Init->Pin) >> position) != RESET)
 2317              		.loc 1 674 3 view .LVU725
 662:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t position = 0x00U;
 2318              		.loc 1 662 1 is_stmt 0 view .LVU726
 2319 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2320              	.LCFI5:
 2321              		.cfi_def_cfa_offset 48
 2322              		.cfi_offset 4, -36
 2323              		.cfi_offset 5, -32
 2324              		.cfi_offset 6, -28
 2325              		.cfi_offset 7, -24
 2326              		.cfi_offset 8, -20
 2327              		.cfi_offset 9, -16
 2328              		.cfi_offset 10, -12
 2329              		.cfi_offset 11, -8
 2330              		.cfi_offset 14, -4
 2331              	.LBB298:
 675:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 676:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Get current io position */
 677:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     iocurrent = (GPIO_Init->Pin) & (1U << position);
 678:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 679:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(iocurrent)
 680:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 681:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /*--------------------- GPIO Mode Configuration ------------------------*/
 682:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* In case of Alternate function mode selection */
 683:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 684:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 685:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the Alternate function parameters */
 686:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
 687:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 688:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 689:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure Alternate function mapped with the current IO */
 690:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->AFR[position >> 3];
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 692:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 693:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 694:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 695:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 696:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
 697:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp = GPIOx->MODER;
 698:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 699:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 700:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 701:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 702:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* In case of Output or Alternate function mode selection */
 703:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 704:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 705:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 706:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Check the Speed parameter */
 707:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 708:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Speed */
 709:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->OSPEEDR;
 710:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 711:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 712:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 713:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 714:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Output Type */
 715:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = GPIOx->OTYPER;
 716:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 717:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 718:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 719:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 720:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 721:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Activate the Pull-up or Pull down resistor for the current IO */
 722:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp = GPIOx->PUPDR;
 723:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 724:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 725:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 726:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 727:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /*--------------------- EXTI Mode Configuration ------------------------*/
 728:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Configure the External Interrupt or event for the current IO */
 729:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 730:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 731:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Enable SYSCFG Clock */
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_RCC_SYSCFG_CLK_ENABLE();
 2332              		.loc 1 732 9 view .LVU727
 2333 0004 DFF86881 		ldr	r8, .L182
 2334              	.LBE298:
 733:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 734:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = SYSCFG->EXTICR[position >> 2];
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 737:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 738:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 739:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Clear EXTI line configuration */
 740:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->IMR;
 2335              		.loc 1 740 14 view .LVU728
 2336 0008 5A4C     		ldr	r4, .L182+4
 663:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t iocurrent = 0x00U;
 2337              		.loc 1 663 12 view .LVU729
 2338 000a 0023     		movs	r3, #0
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2339              		.loc 1 735 27 view .LVU730
 2340 000c 4FF00F09 		mov	r9, #15
 2341              	.LVL172:
 2342              	.L158:
 674:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2343              		.loc 1 674 41 is_stmt 1 view .LVU731
 674:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2344              		.loc 1 674 21 is_stmt 0 view .LVU732
 2345 0010 0A68     		ldr	r2, [r1]
 674:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2346              		.loc 1 674 41 view .LVU733
 2347 0012 32FA03F5 		lsrs	r5, r2, r3
 2348 0016 02D1     		bne	.L173
 741:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 742:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 743:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 744:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 745:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 746:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->IMR = temp;
 747:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 748:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->EMR;
 749:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 750:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 751:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 752:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 753:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 754:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->EMR = temp;
 755:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 756:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Clear Rising Falling edge configuration */
 757:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->RTSR;
 758:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 759:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 760:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 761:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 762:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 763:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->RTSR = temp;
 764:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 765:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp = EXTI->FTSR;
 766:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 767:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 768:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 769:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****           temp |= iocurrent;
 770:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 771:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         EXTI->FTSR = temp;
 772:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 773:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 774:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     
 775:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     position++;
 776:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 777:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 2349              		.loc 1 777 1 view .LVU734
 2350 0018 03B0     		add	sp, sp, #12
 2351              	.LCFI6:
 2352              		.cfi_remember_state
 2353              		.cfi_def_cfa_offset 36
 2354              		@ sp needed
 2355 001a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2356              	.L173:
 2357              	.LCFI7:
 2358              		.cfi_restore_state
 677:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2359              		.loc 1 677 5 is_stmt 1 view .LVU735
 677:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2360              		.loc 1 677 40 is_stmt 0 view .LVU736
 2361 001e 0125     		movs	r5, #1
 2362 0020 05FA03FA 		lsl	r10, r5, r3
 2363              	.LVL173:
 679:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2364              		.loc 1 679 5 is_stmt 1 view .LVU737
 679:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2365              		.loc 1 679 7 is_stmt 0 view .LVU738
 2366 0024 1AEA0202 		ands	r2, r10, r2
 2367              	.LVL174:
 679:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2368              		.loc 1 679 7 view .LVU739
 2369 0028 00F09880 		beq	.L160
 683:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2370              		.loc 1 683 7 is_stmt 1 view .LVU740
 683:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2371              		.loc 1 683 20 is_stmt 0 view .LVU741
 2372 002c 4D68     		ldr	r5, [r1, #4]
 683:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2373              		.loc 1 683 9 view .LVU742
 2374 002e 25F0100E 		bic	lr, r5, #16
 2375 0032 BEF1020F 		cmp	lr, #2
 2376 0036 11D1     		bne	.L161
 686:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 2377              		.loc 1 686 9 is_stmt 1 view .LVU743
 687:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         
 2378              		.loc 1 687 9 view .LVU744
 690:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2379              		.loc 1 690 9 view .LVU745
 690:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2380              		.loc 1 690 36 is_stmt 0 view .LVU746
 2381 0038 DF08     		lsrs	r7, r3, #3
 2382 003a 00EB8707 		add	r7, r0, r7, lsl #2
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2383              		.loc 1 691 28 view .LVU747
 2384 003e 03F0070C 		and	ip, r3, #7
 690:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 2385              		.loc 1 690 14 view .LVU748
 2386 0042 3E6A     		ldr	r6, [r7, #32]
 2387              	.LVL175:
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2388              		.loc 1 691 9 is_stmt 1 view .LVU749
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2389              		.loc 1 691 57 is_stmt 0 view .LVU750
 2390 0044 4FEA8C0C 		lsl	ip, ip, #2
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2391              		.loc 1 691 24 view .LVU751
 2392 0048 09FA0CFB 		lsl	fp, r9, ip
 691:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 2393              		.loc 1 691 14 view .LVU752
 2394 004c 26EA0B0B 		bic	fp, r6, fp
 2395              	.LVL176:
 692:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2396              		.loc 1 692 9 is_stmt 1 view .LVU753
 692:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2397              		.loc 1 692 51 is_stmt 0 view .LVU754
 2398 0050 0E69     		ldr	r6, [r1, #16]
 2399 0052 06FA0CF6 		lsl	r6, r6, ip
 692:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->AFR[position >> 3] = temp;
 2400              		.loc 1 692 14 view .LVU755
 2401 0056 46EA0B06 		orr	r6, r6, fp
 2402              	.LVL177:
 693:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2403              		.loc 1 693 9 is_stmt 1 view .LVU756
 693:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2404              		.loc 1 693 35 is_stmt 0 view .LVU757
 2405 005a 3E62     		str	r6, [r7, #32]
 2406              	.LVL178:
 2407              	.L161:
 697:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 2408              		.loc 1 697 7 is_stmt 1 view .LVU758
 697:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 2409              		.loc 1 697 12 is_stmt 0 view .LVU759
 2410 005c D0F800B0 		ldr	fp, [r0]
 2411              	.LVL179:
 698:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2412              		.loc 1 698 7 is_stmt 1 view .LVU760
 2413 0060 4FEA430C 		lsl	ip, r3, #1
 698:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2414              		.loc 1 698 35 is_stmt 0 view .LVU761
 2415 0064 0326     		movs	r6, #3
 2416 0066 06FA0CF7 		lsl	r7, r6, ip
 698:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2417              		.loc 1 698 12 view .LVU762
 2418 006a 2BEA070B 		bic	fp, fp, r7
 2419              	.LVL180:
 699:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2420              		.loc 1 699 7 is_stmt 1 view .LVU763
 698:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 2421              		.loc 1 698 15 is_stmt 0 view .LVU764
 2422 006e FE43     		mvns	r6, r7
 699:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2423              		.loc 1 699 33 view .LVU765
 2424 0070 05F00307 		and	r7, r5, #3
 699:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2425              		.loc 1 699 46 view .LVU766
 2426 0074 07FA0CF7 		lsl	r7, r7, ip
 703:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2427              		.loc 1 703 9 view .LVU767
 2428 0078 0EF1FF3E 		add	lr, lr, #-1
 699:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->MODER = temp;
 2429              		.loc 1 699 12 view .LVU768
 2430 007c 47EA0B07 		orr	r7, r7, fp
 2431              	.LVL181:
 700:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2432              		.loc 1 700 7 is_stmt 1 view .LVU769
 703:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2433              		.loc 1 703 9 is_stmt 0 view .LVU770
 2434 0080 BEF1010F 		cmp	lr, #1
 700:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2435              		.loc 1 700 20 view .LVU771
 2436 0084 0760     		str	r7, [r0]
 703:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2437              		.loc 1 703 7 is_stmt 1 view .LVU772
 703:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 2438              		.loc 1 703 9 is_stmt 0 view .LVU773
 2439 0086 10D8     		bhi	.L162
 707:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Configure the IO Speed */
 2440              		.loc 1 707 9 is_stmt 1 view .LVU774
 709:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 2441              		.loc 1 709 9 view .LVU775
 709:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 2442              		.loc 1 709 14 is_stmt 0 view .LVU776
 2443 0088 8768     		ldr	r7, [r0, #8]
 2444              	.LVL182:
 710:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 2445              		.loc 1 710 9 is_stmt 1 view .LVU777
 710:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_Init->Speed << (position * 2U));
 2446              		.loc 1 710 14 is_stmt 0 view .LVU778
 2447 008a 06EA070E 		and	lr, r6, r7
 2448              	.LVL183:
 711:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2449              		.loc 1 711 9 is_stmt 1 view .LVU779
 711:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2450              		.loc 1 711 35 is_stmt 0 view .LVU780
 2451 008e CF68     		ldr	r7, [r1, #12]
 2452 0090 07FA0CF7 		lsl	r7, r7, ip
 711:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OSPEEDR = temp;
 2453              		.loc 1 711 14 view .LVU781
 2454 0094 47EA0E07 		orr	r7, r7, lr
 2455              	.LVL184:
 712:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2456              		.loc 1 712 9 is_stmt 1 view .LVU782
 712:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2457              		.loc 1 712 24 is_stmt 0 view .LVU783
 2458 0098 8760     		str	r7, [r0, #8]
 715:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 2459              		.loc 1 715 9 is_stmt 1 view .LVU784
 715:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 2460              		.loc 1 715 14 is_stmt 0 view .LVU785
 2461 009a 4768     		ldr	r7, [r0, #4]
 2462              	.LVL185:
 716:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 2463              		.loc 1 716 9 is_stmt 1 view .LVU786
 716:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 2464              		.loc 1 716 14 is_stmt 0 view .LVU787
 2465 009c 27EA0A0E 		bic	lr, r7, r10
 2466              	.LVL186:
 717:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2467              		.loc 1 717 9 is_stmt 1 view .LVU788
 717:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2468              		.loc 1 717 56 is_stmt 0 view .LVU789
 2469 00a0 2F09     		lsrs	r7, r5, #4
 717:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2470              		.loc 1 717 63 view .LVU790
 2471 00a2 9F40     		lsls	r7, r7, r3
 717:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         GPIOx->OTYPER = temp;
 2472              		.loc 1 717 14 view .LVU791
 2473 00a4 47EA0E07 		orr	r7, r7, lr
 2474              	.LVL187:
 718:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2475              		.loc 1 718 9 is_stmt 1 view .LVU792
 718:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2476              		.loc 1 718 23 is_stmt 0 view .LVU793
 2477 00a8 4760     		str	r7, [r0, #4]
 2478              	.LVL188:
 2479              	.L162:
 722:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 2480              		.loc 1 722 7 is_stmt 1 view .LVU794
 722:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 2481              		.loc 1 722 12 is_stmt 0 view .LVU795
 2482 00aa C768     		ldr	r7, [r0, #12]
 2483              	.LVL189:
 723:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2484              		.loc 1 723 7 is_stmt 1 view .LVU796
 723:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       temp |= ((GPIO_Init->Pull) << (position * 2U));
 2485              		.loc 1 723 12 is_stmt 0 view .LVU797
 2486 00ac 3740     		ands	r7, r7, r6
 2487              	.LVL190:
 724:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2488              		.loc 1 724 7 is_stmt 1 view .LVU798
 724:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2489              		.loc 1 724 34 is_stmt 0 view .LVU799
 2490 00ae 8E68     		ldr	r6, [r1, #8]
 2491 00b0 06FA0CF6 		lsl	r6, r6, ip
 724:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       GPIOx->PUPDR = temp;
 2492              		.loc 1 724 12 view .LVU800
 2493 00b4 3E43     		orrs	r6, r6, r7
 2494              	.LVL191:
 725:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2495              		.loc 1 725 7 is_stmt 1 view .LVU801
 725:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2496              		.loc 1 725 20 is_stmt 0 view .LVU802
 2497 00b6 C660     		str	r6, [r0, #12]
 729:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2498              		.loc 1 729 7 is_stmt 1 view .LVU803
 729:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2499              		.loc 1 729 9 is_stmt 0 view .LVU804
 2500 00b8 EE00     		lsls	r6, r5, #3
 2501              	.LVL192:
 729:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 2502              		.loc 1 729 9 view .LVU805
 2503 00ba 4FD5     		bpl	.L160
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2504              		.loc 1 732 9 is_stmt 1 view .LVU806
 2505              	.LBB299:
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2506              		.loc 1 732 9 view .LVU807
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2507              		.loc 1 732 9 view .LVU808
 2508 00bc D8F81860 		ldr	r6, [r8, #24]
 2509 00c0 46F00106 		orr	r6, r6, #1
 2510 00c4 C8F81860 		str	r6, [r8, #24]
 2511              	.LVL193:
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2512              		.loc 1 732 9 view .LVU809
 2513 00c8 D8F81860 		ldr	r6, [r8, #24]
 2514 00cc 23F00307 		bic	r7, r3, #3
 2515 00d0 07F18047 		add	r7, r7, #1073741824
 2516 00d4 06F00106 		and	r6, r6, #1
 2517 00d8 07F58037 		add	r7, r7, #65536
 2518 00dc 0196     		str	r6, [sp, #4]
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2519              		.loc 1 732 9 view .LVU810
 2520              	.LBE299:
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2521              		.loc 1 735 46 is_stmt 0 view .LVU811
 2522 00de 03F0030C 		and	ip, r3, #3
 2523              	.LBB300:
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2524              		.loc 1 732 9 view .LVU812
 2525 00e2 019E     		ldr	r6, [sp, #4]
 2526              	.LBE300:
 732:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2527              		.loc 1 732 9 is_stmt 1 view .LVU813
 734:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 2528              		.loc 1 734 9 view .LVU814
 734:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((0x0FU) << (4U * (position & 0x03U)));
 2529              		.loc 1 734 14 is_stmt 0 view .LVU815
 2530 00e4 BE68     		ldr	r6, [r7, #8]
 2531              	.LVL194:
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2532              		.loc 1 735 9 is_stmt 1 view .LVU816
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2533              		.loc 1 735 34 is_stmt 0 view .LVU817
 2534 00e6 4FEA8C0C 		lsl	ip, ip, #2
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2535              		.loc 1 735 27 view .LVU818
 2536 00ea 09FA0CFE 		lsl	lr, r9, ip
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2537              		.loc 1 736 18 view .LVU819
 2538 00ee B0F1904F 		cmp	r0, #1207959552
 735:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 2539              		.loc 1 735 14 view .LVU820
 2540 00f2 26EA0E0E 		bic	lr, r6, lr
 2541              	.LVL195:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2542              		.loc 1 736 9 is_stmt 1 view .LVU821
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2543              		.loc 1 736 18 is_stmt 0 view .LVU822
 2544 00f6 33D0     		beq	.L174
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2545              		.loc 1 736 18 discriminator 1 view .LVU823
 2546 00f8 1F4E     		ldr	r6, .L182+8
 2547 00fa B042     		cmp	r0, r6
 2548 00fc 32D0     		beq	.L175
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2549              		.loc 1 736 18 discriminator 3 view .LVU824
 2550 00fe 06F58066 		add	r6, r6, #1024
 2551 0102 B042     		cmp	r0, r6
 2552 0104 30D0     		beq	.L176
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2553              		.loc 1 736 18 discriminator 5 view .LVU825
 2554 0106 06F58066 		add	r6, r6, #1024
 2555 010a B042     		cmp	r0, r6
 2556 010c 2ED0     		beq	.L177
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2557              		.loc 1 736 18 discriminator 9 view .LVU826
 2558 010e 06F58066 		add	r6, r6, #1024
 2559 0112 B042     		cmp	r0, r6
 2560 0114 14BF     		ite	ne
 2561 0116 0526     		movne	r6, #5
 2562 0118 0426     		moveq	r6, #4
 2563              	.L164:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2564              		.loc 1 736 40 discriminator 20 view .LVU827
 2565 011a 06FA0CF6 		lsl	r6, r6, ip
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2566              		.loc 1 736 14 discriminator 20 view .LVU828
 2567 011e 46EA0E06 		orr	r6, r6, lr
 2568              	.LVL196:
 737:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2569              		.loc 1 737 9 is_stmt 1 view .LVU829
 737:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2570              		.loc 1 737 39 is_stmt 0 view .LVU830
 2571 0122 BE60     		str	r6, [r7, #8]
 740:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2572              		.loc 1 740 9 is_stmt 1 view .LVU831
 740:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2573              		.loc 1 740 14 is_stmt 0 view .LVU832
 2574 0124 2668     		ldr	r6, [r4]
 2575              	.LVL197:
 741:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2576              		.loc 1 741 9 is_stmt 1 view .LVU833
 741:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2577              		.loc 1 741 17 is_stmt 0 view .LVU834
 2578 0126 D743     		mvns	r7, r2
 2579              	.LVL198:
 742:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2580              		.loc 1 742 9 is_stmt 1 view .LVU835
 742:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2581              		.loc 1 742 11 is_stmt 0 view .LVU836
 2582 0128 15F4803F 		tst	r5, #65536
 741:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 2583              		.loc 1 741 14 view .LVU837
 2584 012c 0CBF     		ite	eq
 2585 012e 3E40     		andeq	r6, r6, r7
 2586              	.LVL199:
 744:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2587              		.loc 1 744 11 is_stmt 1 view .LVU838
 744:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2588              		.loc 1 744 16 is_stmt 0 view .LVU839
 2589 0130 1643     		orrne	r6, r6, r2
 2590              	.LVL200:
 746:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2591              		.loc 1 746 9 is_stmt 1 view .LVU840
 746:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2592              		.loc 1 746 19 is_stmt 0 view .LVU841
 2593 0132 2660     		str	r6, [r4]
 748:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2594              		.loc 1 748 9 is_stmt 1 view .LVU842
 748:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2595              		.loc 1 748 14 is_stmt 0 view .LVU843
 2596 0134 6668     		ldr	r6, [r4, #4]
 2597              	.LVL201:
 749:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2598              		.loc 1 749 9 is_stmt 1 view .LVU844
 750:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2599              		.loc 1 750 9 view .LVU845
 750:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2600              		.loc 1 750 11 is_stmt 0 view .LVU846
 2601 0136 15F4003F 		tst	r5, #131072
 749:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 2602              		.loc 1 749 14 view .LVU847
 2603 013a 0CBF     		ite	eq
 2604 013c 3E40     		andeq	r6, r6, r7
 2605              	.LVL202:
 752:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2606              		.loc 1 752 11 is_stmt 1 view .LVU848
 752:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2607              		.loc 1 752 16 is_stmt 0 view .LVU849
 2608 013e 1643     		orrne	r6, r6, r2
 2609              	.LVL203:
 754:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2610              		.loc 1 754 9 is_stmt 1 view .LVU850
 754:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2611              		.loc 1 754 19 is_stmt 0 view .LVU851
 2612 0140 6660     		str	r6, [r4, #4]
 757:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2613              		.loc 1 757 9 is_stmt 1 view .LVU852
 757:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2614              		.loc 1 757 14 is_stmt 0 view .LVU853
 2615 0142 A668     		ldr	r6, [r4, #8]
 2616              	.LVL204:
 758:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2617              		.loc 1 758 9 is_stmt 1 view .LVU854
 759:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2618              		.loc 1 759 9 view .LVU855
 759:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2619              		.loc 1 759 11 is_stmt 0 view .LVU856
 2620 0144 15F4801F 		tst	r5, #1048576
 758:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 2621              		.loc 1 758 14 view .LVU857
 2622 0148 0CBF     		ite	eq
 2623 014a 3E40     		andeq	r6, r6, r7
 2624              	.LVL205:
 761:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2625              		.loc 1 761 11 is_stmt 1 view .LVU858
 761:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2626              		.loc 1 761 16 is_stmt 0 view .LVU859
 2627 014c 1643     		orrne	r6, r6, r2
 2628              	.LVL206:
 763:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2629              		.loc 1 763 9 is_stmt 1 view .LVU860
 763:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2630              		.loc 1 763 20 is_stmt 0 view .LVU861
 2631 014e A660     		str	r6, [r4, #8]
 765:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2632              		.loc 1 765 9 is_stmt 1 view .LVU862
 765:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         temp &= ~((uint32_t)iocurrent);
 2633              		.loc 1 765 14 is_stmt 0 view .LVU863
 2634 0150 E668     		ldr	r6, [r4, #12]
 2635              	.LVL207:
 766:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2636              		.loc 1 766 9 is_stmt 1 view .LVU864
 767:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2637              		.loc 1 767 9 view .LVU865
 767:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         {
 2638              		.loc 1 767 11 is_stmt 0 view .LVU866
 2639 0152 AD02     		lsls	r5, r5, #10
 766:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 2640              		.loc 1 766 14 view .LVU867
 2641 0154 54BF     		ite	pl
 2642 0156 3E40     		andpl	r6, r6, r7
 2643              	.LVL208:
 769:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2644              		.loc 1 769 11 is_stmt 1 view .LVU868
 769:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         }
 2645              		.loc 1 769 16 is_stmt 0 view .LVU869
 2646 0158 1643     		orrmi	r6, r6, r2
 2647              	.LVL209:
 771:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2648              		.loc 1 771 9 is_stmt 1 view .LVU870
 771:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 2649              		.loc 1 771 20 is_stmt 0 view .LVU871
 2650 015a E660     		str	r6, [r4, #12]
 2651              	.LVL210:
 2652              	.L160:
 775:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2653              		.loc 1 775 5 is_stmt 1 view .LVU872
 775:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2654              		.loc 1 775 13 is_stmt 0 view .LVU873
 2655 015c 0133     		adds	r3, r3, #1
 2656              	.LVL211:
 775:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2657              		.loc 1 775 13 view .LVU874
 2658 015e 57E7     		b	.L158
 2659              	.LVL212:
 2660              	.L174:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2661              		.loc 1 736 18 discriminator 2 view .LVU875
 2662 0160 0026     		movs	r6, #0
 2663 0162 DAE7     		b	.L164
 2664              	.L175:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2665              		.loc 1 736 18 discriminator 4 view .LVU876
 2666 0164 0126     		movs	r6, #1
 2667 0166 D8E7     		b	.L164
 2668              	.L176:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2669              		.loc 1 736 18 discriminator 6 view .LVU877
 2670 0168 0226     		movs	r6, #2
 2671 016a D6E7     		b	.L164
 2672              	.L177:
 736:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         SYSCFG->EXTICR[position >> 2] = temp;
 2673              		.loc 1 736 18 discriminator 8 view .LVU878
 2674 016c 0326     		movs	r6, #3
 2675 016e D4E7     		b	.L164
 2676              	.L183:
 2677              		.align	2
 2678              	.L182:
 2679 0170 00100240 		.word	1073876992
 2680 0174 00040140 		.word	1073808384
 2681 0178 00040048 		.word	1207960576
 2682              		.cfi_endproc
 2683              	.LFE135:
 2685              		.section	.text.HAL_GPIO_WritePin,"ax",%progbits
 2686              		.align	1
 2687              		.global	HAL_GPIO_WritePin
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2692              	HAL_GPIO_WritePin:
 2693              	.LVL213:
 2694              	.LFB136:
 778:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 779:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 780:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Set or clear the selected data port bit.
 781:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
 782:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @note   This function uses GPIOx_BSRR and GPIOx_BRR registers to allow atomic read/modify
 783:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 784:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         the read and the modify access.
 785:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *
 786:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIOx: where x can be (A..F) to select the GPIO peripheral for STM32F3 family
 787:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 788:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         This parameter can be one of GPIO_PIN_x where x can be (0..15).
 789:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  PinState: specifies the value to be written to the selected bit.
 790:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *         This parameter can be one of the GPIO_PinState enum values:
 791:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *            @arg GPIO_PIN_RESET: to clear the port pin
 792:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *            @arg GPIO_PIN_SET: to set the port pin
 793:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval None
 794:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 795:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
 796:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 2695              		.loc 1 796 1 is_stmt 1 view -0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
 2699              		@ link register save eliminated.
 797:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 798:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 2700              		.loc 1 798 3 view .LVU880
 799:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_GPIO_PIN_ACTION(PinState));
 2701              		.loc 1 799 3 view .LVU881
 800:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 801:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(PinState != GPIO_PIN_RESET)
 2702              		.loc 1 801 3 view .LVU882
 2703              		.loc 1 801 5 is_stmt 0 view .LVU883
 2704 0000 0AB1     		cbz	r2, .L185
 802:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 803:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     GPIOx->BSRR = (uint32_t)GPIO_Pin;
 2705              		.loc 1 803 5 is_stmt 1 view .LVU884
 2706              		.loc 1 803 17 is_stmt 0 view .LVU885
 2707 0002 8161     		str	r1, [r0, #24]
 2708 0004 7047     		bx	lr
 2709              	.L185:
 804:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 805:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   else
 806:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 807:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     GPIOx->BRR = (uint32_t)GPIO_Pin;
 2710              		.loc 1 807 5 is_stmt 1 view .LVU886
 2711              		.loc 1 807 16 is_stmt 0 view .LVU887
 2712 0006 8162     		str	r1, [r0, #40]
 808:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 809:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 2713              		.loc 1 809 1 view .LVU888
 2714 0008 7047     		bx	lr
 2715              		.cfi_endproc
 2716              	.LFE136:
 2718              		.section	.text.UART_SetConfig,"ax",%progbits
 2719              		.align	1
 2720              		.global	UART_SetConfig
 2721              		.syntax unified
 2722              		.thumb
 2723              		.thumb_func
 2725              	UART_SetConfig:
 2726              	.LVL214:
 2727              	.LFB137:
 810:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 811:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 812:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 813:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Configure the UART peripheral.
 814:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
 815:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 816:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 817:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
 818:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 2728              		.loc 1 818 1 is_stmt 1 view -0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 0
 2731              		@ frame_needed = 0, uses_anonymous_args = 0
 819:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2732              		.loc 1 819 3 view .LVU890
 820:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 2733              		.loc 1 820 3 view .LVU891
 821:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t brrtemp                    = 0x0000U;
 2734              		.loc 1 821 3 view .LVU892
 822:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t usartdiv                   = 0x0000U;
 2735              		.loc 1 822 3 view .LVU893
 823:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2736              		.loc 1 823 3 view .LVU894
 824:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 825:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the parameters */
 826:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 2737              		.loc 1 826 3 view .LVU895
 827:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 2738              		.loc 1 827 3 view .LVU896
 828:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 2739              		.loc 1 828 3 view .LVU897
 829:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
 2740              		.loc 1 829 3 view .LVU898
 830:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
 2741              		.loc 1 830 3 view .LVU899
 831:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 2742              		.loc 1 831 3 view .LVU900
 832:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
 2743              		.loc 1 832 3 view .LVU901
 833:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 2744              		.loc 1 833 3 view .LVU902
 834:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 835:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 836:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
 837:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
 838:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *  the UART Word Length, Parity, Mode and oversampling:
 839:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *  set the M bits according to huart->Init.WordLength value
 840:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *  set PCE and PS bits according to huart->Init.Parity value
 841:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *  set TE and RE bits according to huart->Init.Mode value
 842:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *  set OVER8 bit according to huart->Init.OverSampling value */
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 2745              		.loc 1 843 3 view .LVU903
 844:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2746              		.loc 1 844 3 is_stmt 0 view .LVU904
 2747 0000 0268     		ldr	r2, [r0]
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2748              		.loc 1 843 45 view .LVU905
 2749 0002 8368     		ldr	r3, [r0, #8]
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2750              		.loc 1 843 98 view .LVU906
 2751 0004 C169     		ldr	r1, [r0, #28]
 2752              	.LVL215:
 2753              		.loc 1 844 3 is_stmt 1 view .LVU907
 818:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tmpreg                     = 0x00000000U;
 2754              		.loc 1 818 1 is_stmt 0 view .LVU908
 2755 0006 30B5     		push	{r4, r5, lr}
 2756              	.LCFI8:
 2757              		.cfi_def_cfa_offset 12
 2758              		.cfi_offset 4, -12
 2759              		.cfi_offset 5, -8
 2760              		.cfi_offset 14, -4
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2761              		.loc 1 843 45 view .LVU909
 2762 0008 0569     		ldr	r5, [r0, #16]
 2763              		.loc 1 844 3 view .LVU910
 2764 000a 1468     		ldr	r4, [r2]
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2765              		.loc 1 843 45 view .LVU911
 2766 000c 2B43     		orrs	r3, r3, r5
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2767              		.loc 1 843 66 view .LVU912
 2768 000e 4569     		ldr	r5, [r0, #20]
 2769              		.loc 1 844 3 view .LVU913
 2770 0010 24F41644 		bic	r4, r4, #38400
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2771              		.loc 1 843 66 view .LVU914
 2772 0014 2B43     		orrs	r3, r3, r5
 2773              		.loc 1 844 3 view .LVU915
 2774 0016 24F00C04 		bic	r4, r4, #12
 843:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR1, UART_CR1_FIELDS, tmpreg);
 2775              		.loc 1 843 10 view .LVU916
 2776 001a 0B43     		orrs	r3, r3, r1
 2777              		.loc 1 844 3 view .LVU917
 2778 001c 2343     		orrs	r3, r3, r4
 2779 001e 1360     		str	r3, [r2]
 845:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 846:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
 847:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
 848:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    * to huart->Init.StopBits value */
 849:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 2780              		.loc 1 849 3 is_stmt 1 view .LVU918
 2781 0020 5368     		ldr	r3, [r2, #4]
 2782 0022 C468     		ldr	r4, [r0, #12]
 850:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 851:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
 852:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Configure
 853:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    * - UART HardWare Flow Control: set CTSE and RTSE bits according
 854:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *   to huart->Init.HwFlowCtl value
 855:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    * - one-bit sampling method versus three samples' majority rule according
 856:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****    *   to huart->Init.OneBitSampling */
 857:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl | huart->Init.OneBitSampling ;
 2783              		.loc 1 857 10 is_stmt 0 view .LVU919
 2784 0024 056A     		ldr	r5, [r0, #32]
 849:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2785              		.loc 1 849 3 view .LVU920
 2786 0026 23F44053 		bic	r3, r3, #12288
 2787 002a 2343     		orrs	r3, r3, r4
 2788 002c 5360     		str	r3, [r2, #4]
 2789              		.loc 1 857 3 is_stmt 1 view .LVU921
 2790              	.LVL216:
 858:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2791              		.loc 1 858 3 view .LVU922
 2792 002e 9468     		ldr	r4, [r2, #8]
 857:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2793              		.loc 1 857 10 is_stmt 0 view .LVU923
 2794 0030 8369     		ldr	r3, [r0, #24]
 2795              		.loc 1 858 3 view .LVU924
 2796 0032 24F43064 		bic	r4, r4, #2816
 857:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT), tmpreg);
 2797              		.loc 1 857 10 view .LVU925
 2798 0036 2B43     		orrs	r3, r3, r5
 2799              		.loc 1 858 3 view .LVU926
 2800 0038 2343     		orrs	r3, r3, r4
 2801 003a 9360     		str	r3, [r2, #8]
 859:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 860:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 2802              		.loc 1 861 3 is_stmt 1 view .LVU927
 2803              		.loc 1 861 3 view .LVU928
 2804 003c 424B     		ldr	r3, .L285
 2805 003e 9A42     		cmp	r2, r3
 2806 0040 11D1     		bne	.L188
 2807              		.loc 1 861 3 discriminator 1 view .LVU929
 2808 0042 03F55843 		add	r3, r3, #55296
 2809 0046 1B6B     		ldr	r3, [r3, #48]
 2810 0048 03F00303 		and	r3, r3, #3
 2811 004c 022B     		cmp	r3, #2
 2812 004e 5FD0     		beq	.L189
 2813 0050 032B     		cmp	r3, #3
 2814 0052 65D0     		beq	.L190
 2815              	.L195:
 2816              	.LVL217:
 2817              		.loc 1 861 3 discriminator 36 view .LVU930
 862:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 863:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check UART Over Sampling to set Baud Rate Register */
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 2818              		.loc 1 864 3 view .LVU931
 2819              		.loc 1 864 6 is_stmt 0 view .LVU932
 2820 0054 B1F5004F 		cmp	r1, #32768
 865:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 866:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     switch (clocksource)
 867:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 868:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
 869:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 2821              		.loc 1 869 31 discriminator 1 view .LVU933
 2822 0058 4168     		ldr	r1, [r0, #4]
 2823 005a 4FEA5103 		lsr	r3, r1, #1
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2824              		.loc 1 864 6 view .LVU934
 2825 005e 45D0     		beq	.L205
 870:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 871:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK2:
 872:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 873:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 874:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
 875:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 876:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 877:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
 878:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 879:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 880:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
 881:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 882:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 883:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 884:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       default:
 885:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         ret = HAL_ERROR;
 886:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 887:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 888:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 889:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp = usartdiv & 0xFFF0U;
 890:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 891:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 892:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 893:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   else
 894:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 895:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     switch (clocksource)
 2826              		.loc 1 895 5 is_stmt 1 view .LVU935
 896:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 897:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK1:
 898:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.B
 899:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 900:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK2:
 901:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.B
 2827              		.loc 1 901 9 view .LVU936
 2828              		.loc 1 901 43 is_stmt 0 discriminator 1 view .LVU937
 2829 0060 03F5E103 		add	r3, r3, #7372800
 2830 0064 48E0     		b	.L283
 2831              	.LVL218:
 2832              	.L188:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2833              		.loc 1 861 3 is_stmt 1 discriminator 2 view .LVU938
 2834 0066 394B     		ldr	r3, .L285+4
 2835 0068 9A42     		cmp	r2, r3
 2836 006a 12D1     		bne	.L193
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2837              		.loc 1 861 3 discriminator 8 view .LVU939
 2838 006c 03F5E633 		add	r3, r3, #117760
 2839 0070 1B6B     		ldr	r3, [r3, #48]
 2840 0072 03F44033 		and	r3, r3, #196608
 2841 0076 B3F5003F 		cmp	r3, #131072
 2842 007a 49D0     		beq	.L189
 2843 007c EAD9     		bls	.L195
 2844 007e B3F5403F 		cmp	r3, #196608
 2845              	.L279:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2846              		.loc 1 861 3 is_stmt 0 discriminator 29 view .LVU940
 2847 0082 4DD0     		beq	.L190
 2848              	.L196:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2849              		.loc 1 861 3 is_stmt 1 discriminator 36 view .LVU941
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2850              		.loc 1 864 3 view .LVU942
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2851              		.loc 1 864 6 is_stmt 0 view .LVU943
 2852 0084 B1F5004F 		cmp	r1, #32768
 885:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2853              		.loc 1 885 13 view .LVU944
 2854 0088 4FF00100 		mov	r0, #1
 2855              	.LVL219:
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2856              		.loc 1 864 6 view .LVU945
 2857 008c 5BD1     		bne	.L269
 822:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 2858              		.loc 1 822 12 view .LVU946
 2859 008e 0023     		movs	r3, #0
 2860 0090 53E0     		b	.L202
 2861              	.LVL220:
 2862              	.L193:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2863              		.loc 1 861 3 is_stmt 1 discriminator 9 view .LVU947
 2864 0092 2F4B     		ldr	r3, .L285+8
 2865 0094 9A42     		cmp	r2, r3
 2866 0096 0BD1     		bne	.L197
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2867              		.loc 1 861 3 discriminator 15 view .LVU948
 2868 0098 03F5E433 		add	r3, r3, #116736
 2869 009c 1B6B     		ldr	r3, [r3, #48]
 2870 009e 03F44023 		and	r3, r3, #786432
 2871 00a2 B3F5002F 		cmp	r3, #524288
 2872 00a6 33D0     		beq	.L189
 2873 00a8 D4D9     		bls	.L195
 2874 00aa B3F5402F 		cmp	r3, #786432
 2875 00ae E8E7     		b	.L279
 2876              	.L197:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2877              		.loc 1 861 3 discriminator 16 view .LVU949
 2878 00b0 284B     		ldr	r3, .L285+12
 2879 00b2 9A42     		cmp	r2, r3
 2880 00b4 0BD1     		bne	.L199
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2881              		.loc 1 861 3 discriminator 22 view .LVU950
 2882 00b6 03F5E233 		add	r3, r3, #115712
 2883 00ba 1B6B     		ldr	r3, [r3, #48]
 2884 00bc 03F44013 		and	r3, r3, #3145728
 2885 00c0 B3F5001F 		cmp	r3, #2097152
 2886 00c4 24D0     		beq	.L189
 2887 00c6 C5D9     		bls	.L195
 2888 00c8 B3F5401F 		cmp	r3, #3145728
 2889 00cc D9E7     		b	.L279
 2890              	.L199:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2891              		.loc 1 861 3 discriminator 23 view .LVU951
 2892 00ce 224B     		ldr	r3, .L285+16
 2893 00d0 9A42     		cmp	r2, r3
 2894 00d2 D7D1     		bne	.L196
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2895              		.loc 1 861 3 discriminator 29 view .LVU952
 2896 00d4 03F5E033 		add	r3, r3, #114688
 2897 00d8 1B6B     		ldr	r3, [r3, #48]
 2898 00da 03F44003 		and	r3, r3, #12582912
 2899 00de B3F5000F 		cmp	r3, #8388608
 2900 00e2 15D0     		beq	.L189
 2901 00e4 B6D9     		bls	.L195
 2902 00e6 B3F5400F 		cmp	r3, #12582912
 2903 00ea CAE7     		b	.L279
 2904              	.LVL221:
 2905              	.L205:
 869:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2906              		.loc 1 869 9 view .LVU953
 869:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2907              		.loc 1 869 31 is_stmt 0 discriminator 1 view .LVU954
 2908 00ec 03F56103 		add	r3, r3, #14745600
 2909 00f0 1FE0     		b	.L275
 2910              	.LVL222:
 2911              	.L271:
 895:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2912              		.loc 1 895 5 is_stmt 1 view .LVU955
 902:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 903:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_HSI:
 904:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 905:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 906:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_SYSCLK:
 907:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Ini
 908:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 909:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_LSE:
 910:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->BRR = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 2913              		.loc 1 910 9 view .LVU956
 2914              		.loc 1 910 43 is_stmt 0 view .LVU957
 2915 00f2 4B08     		lsrs	r3, r1, #1
 2916 00f4 03F50043 		add	r3, r3, #32768
 2917              	.LVL223:
 2918              	.L283:
 901:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2919              		.loc 1 901 43 discriminator 1 view .LVU958
 2920 00f8 B3FBF1F3 		udiv	r3, r3, r1
 2921 00fc 9BB2     		uxth	r3, r3
 901:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2922              		.loc 1 901 30 discriminator 1 view .LVU959
 2923 00fe D360     		str	r3, [r2, #12]
 2924              	.LVL224:
 902:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2925              		.loc 1 902 9 is_stmt 1 view .LVU960
 823:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2926              		.loc 1 823 21 is_stmt 0 view .LVU961
 2927 0100 0020     		movs	r0, #0
 2928              	.LVL225:
 911:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 912:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 913:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       default:
 914:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         ret = HAL_ERROR;
 915:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 916:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 917:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 918:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 919:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return ret;
 2929              		.loc 1 919 3 is_stmt 1 view .LVU962
 2930              		.loc 1 919 10 is_stmt 0 view .LVU963
 2931 0102 20E0     		b	.L269
 2932              	.LVL226:
 2933              	.L272:
 904:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2934              		.loc 1 904 9 is_stmt 1 view .LVU964
 904:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2935              		.loc 1 904 43 is_stmt 0 view .LVU965
 2936 0104 4B08     		lsrs	r3, r1, #1
 2937 0106 03F57403 		add	r3, r3, #15990784
 2938 010a 03F51053 		add	r3, r3, #9216
 2939 010e F3E7     		b	.L283
 2940              	.LVL227:
 2941              	.L189:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2942              		.loc 1 861 3 is_stmt 1 discriminator 36 view .LVU966
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2943              		.loc 1 864 3 view .LVU967
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2944              		.loc 1 864 6 is_stmt 0 view .LVU968
 2945 0110 B1F5004F 		cmp	r1, #32768
 2946 0114 4168     		ldr	r1, [r0, #4]
 2947 0116 ECD1     		bne	.L271
 881:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2948              		.loc 1 881 9 is_stmt 1 view .LVU969
 881:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2949              		.loc 1 881 31 is_stmt 0 view .LVU970
 2950 0118 4B08     		lsrs	r3, r1, #1
 2951 011a 03F58033 		add	r3, r3, #65536
 2952 011e 08E0     		b	.L275
 2953              	.LVL228:
 2954              	.L190:
 861:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2955              		.loc 1 861 3 is_stmt 1 discriminator 36 view .LVU971
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2956              		.loc 1 864 3 view .LVU972
 864:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 2957              		.loc 1 864 6 is_stmt 0 view .LVU973
 2958 0120 B1F5004F 		cmp	r1, #32768
 2959 0124 4168     		ldr	r1, [r0, #4]
 2960 0126 EDD1     		bne	.L272
 866:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 2961              		.loc 1 866 5 is_stmt 1 view .LVU974
 875:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2962              		.loc 1 875 9 view .LVU975
 875:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2963              		.loc 1 875 31 is_stmt 0 view .LVU976
 2964 0128 4B08     		lsrs	r3, r1, #1
 2965 012a 03F1F473 		add	r3, r3, #31981568
 2966 012e 03F59043 		add	r3, r3, #18432
 2967              	.LVL229:
 2968              	.L275:
 869:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2969              		.loc 1 869 31 discriminator 1 view .LVU977
 2970 0132 B3FBF1F3 		udiv	r3, r3, r1
 823:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 2971              		.loc 1 823 21 view .LVU978
 2972 0136 0020     		movs	r0, #0
 2973              	.LVL230:
 869:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         break;
 2974              		.loc 1 869 18 discriminator 1 view .LVU979
 2975 0138 9BB2     		uxth	r3, r3
 2976              	.LVL231:
 870:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       case UART_CLOCKSOURCE_PCLK2:
 2977              		.loc 1 870 9 is_stmt 1 view .LVU980
 2978              	.L202:
 889:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2979              		.loc 1 889 5 view .LVU981
 889:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 2980              		.loc 1 889 13 is_stmt 0 view .LVU982
 2981 013a 23F00F01 		bic	r1, r3, #15
 2982              	.LVL232:
 890:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2983              		.loc 1 890 5 is_stmt 1 view .LVU983
 891:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2984              		.loc 1 891 5 view .LVU984
 890:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->BRR = brrtemp;
 2985              		.loc 1 890 16 is_stmt 0 view .LVU985
 2986 013e C3F34203 		ubfx	r3, r3, #1, #3
 2987              	.LVL233:
 891:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 2988              		.loc 1 891 26 view .LVU986
 2989 0142 0B43     		orrs	r3, r3, r1
 2990 0144 D360     		str	r3, [r2, #12]
 2991              	.LVL234:
 2992              	.L269:
 920:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 921:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 2993              		.loc 1 921 1 view .LVU987
 2994 0146 30BD     		pop	{r4, r5, pc}
 2995              	.L286:
 2996              		.align	2
 2997              	.L285:
 2998 0148 00380140 		.word	1073821696
 2999 014c 00440040 		.word	1073759232
 3000 0150 00480040 		.word	1073760256
 3001 0154 004C0040 		.word	1073761280
 3002 0158 00500040 		.word	1073762304
 3003              		.cfi_endproc
 3004              	.LFE137:
 3006              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3007              		.align	1
 3008              		.global	UART_WaitOnFlagUntilTimeout
 3009              		.syntax unified
 3010              		.thumb
 3011              		.thumb_func
 3013              	UART_WaitOnFlagUntilTimeout:
 3014              	.LVL235:
 3015              	.LFB140:
 922:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 923:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 924:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 925:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Check the UART Idle State.
 926:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart UART handle.
 927:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 928:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 929:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
 930:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 931:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 932:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 933:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Initialize the UART ErrorCode */
 934:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 935:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 936:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Init tickstart for timeout managment*/
 937:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   tickstart = HAL_GetTick();
 938:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 939:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check if the Transmitter is enabled */
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 941:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 942:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Wait until TEACK flag is set */
 943:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 944:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 945:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Timeout Occured */
 946:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
 947:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 948:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 949:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check if the Receiver is enabled */
 950:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 951:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 952:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Wait until REACK flag is set */
 953:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE
 954:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 955:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       /* Timeout Occured */
 956:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
 957:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 958:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 959:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 960:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Initialize the UART State */
 961:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->gState  = HAL_UART_STATE_READY;
 962:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 963:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 964:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Process Unlocked */
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UNLOCK(huart);
 966:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 967:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 968:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 969:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 970:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 971:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 972:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
 973:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Initialize the UART mode according to the specified
 974:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 975:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
 976:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
 977:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
 978:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 979:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 980:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 981:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(huart == NULL)
 982:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 983:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_ERROR;
 984:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 985:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 986:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 987:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 988:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 989:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 990:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 991:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   else
 992:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 993:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check the parameters */
 994:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 995:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 996:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 997:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_RESET)
 998:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 999:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Allocate lock resource and initialize it */
1000:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->Lock = HAL_UNLOCKED;
1001:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1002:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Init the low level hardware : GPIO, CLOCK */
1003:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     //HAL_UART_MspInit(huart);
1004:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1005:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1006:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->gState = HAL_UART_STATE_BUSY;
1007:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1008:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Disable the Peripheral */
1009:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UART_DISABLE(huart);
1010:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1011:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Set the UART Communication parameters */
1012:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
1013:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1014:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_ERROR;
1015:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1016:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1017:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1018:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1019:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     //UART_AdvFeatureConfig(huart);
1020:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1021:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1022:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* In asynchronous mode, the following bits must be kept cleared:
1023:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
1024:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
1025:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1026:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1027:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1028:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Enable the Peripheral */
1029:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   __HAL_UART_ENABLE(huart);
1030:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1031:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
1032:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return UART_CheckIdleState(huart);
1033:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
1034:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1035:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
1036:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief  Handle UART Communication Timeout.
1037:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  huart UART handle.
1038:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Flag Specifies the UART flag to check
1039:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Status Flag status (SET or RESET)
1040:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Tickstart Tick start value
1041:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param  Timeout Timeout duration
1042:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1043:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
1044:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
1045:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 3016              		.loc 1 1045 1 is_stmt 1 view -0
 3017              		.cfi_startproc
 3018              		@ args = 4, pretend = 0, frame = 0
 3019              		@ frame_needed = 0, uses_anonymous_args = 0
 3020              		.loc 1 1045 1 is_stmt 0 view .LVU989
 3021 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3022              	.LCFI9:
 3023              		.cfi_def_cfa_offset 24
 3024              		.cfi_offset 4, -24
 3025              		.cfi_offset 5, -20
 3026              		.cfi_offset 6, -16
 3027              		.cfi_offset 7, -12
 3028              		.cfi_offset 8, -8
 3029              		.cfi_offset 14, -4
 3030 0004 DDF81880 		ldr	r8, [sp, #24]
1046:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Wait until flag is set */
1047:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   while((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 3031              		.loc 1 1047 3 is_stmt 1 view .LVU990
1045:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Wait until flag is set */
 3032              		.loc 1 1045 1 is_stmt 0 view .LVU991
 3033 0008 0446     		mov	r4, r0
 3034 000a 1646     		mov	r6, r2
 3035 000c 1F46     		mov	r7, r3
 3036              	.LVL236:
 3037              	.L288:
 3038              		.loc 1 1047 10 view .LVU992
 3039 000e 2568     		ldr	r5, [r4]
 3040              	.L289:
 3041              		.loc 1 1047 58 is_stmt 1 view .LVU993
 3042              		.loc 1 1047 10 is_stmt 0 view .LVU994
 3043 0010 EB69     		ldr	r3, [r5, #28]
 3044              		.loc 1 1047 49 view .LVU995
 3045 0012 31EA0303 		bics	r3, r1, r3
 3046 0016 0CBF     		ite	eq
 3047 0018 0123     		moveq	r3, #1
 3048 001a 0023     		movne	r3, #0
 3049              		.loc 1 1047 58 view .LVU996
 3050 001c B342     		cmp	r3, r6
 3051 001e 01D0     		beq	.L293
1048:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1049:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Check for the Timeout */
1050:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(Timeout != HAL_MAX_DELAY)
1051:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if((Timeout == 0U) || ((HAL_GetTick()-Tickstart) > Timeout))
1053:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1054:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
1055:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
1056:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1057:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1058:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->gState  = HAL_UART_STATE_READY;
1059:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
1060:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1061:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         /* Process Unlocked */
1062:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         __HAL_UNLOCK(huart);
1063:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1064:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1065:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1066:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1067:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   return HAL_OK;
 3052              		.loc 1 1067 10 view .LVU997
 3053 0020 0020     		movs	r0, #0
 3054 0022 16E0     		b	.L291
 3055              	.L293:
1050:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3056              		.loc 1 1050 5 is_stmt 1 view .LVU998
1050:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3057              		.loc 1 1050 7 is_stmt 0 view .LVU999
 3058 0024 B8F1FF3F 		cmp	r8, #-1
 3059 0028 F2D0     		beq	.L289
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3060              		.loc 1 1052 7 is_stmt 1 view .LVU1000
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3061              		.loc 1 1052 9 is_stmt 0 view .LVU1001
 3062 002a B8F1000F 		cmp	r8, #0
 3063 002e 12D1     		bne	.L290
 3064              	.L292:
1055:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3065              		.loc 1 1055 9 is_stmt 1 view .LVU1002
 3066 0030 2B68     		ldr	r3, [r5]
 3067 0032 23F4D073 		bic	r3, r3, #416
 3068 0036 2B60     		str	r3, [r5]
1056:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3069              		.loc 1 1056 9 view .LVU1003
 3070 0038 AB68     		ldr	r3, [r5, #8]
 3071 003a 23F00103 		bic	r3, r3, #1
 3072 003e AB60     		str	r3, [r5, #8]
1058:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3073              		.loc 1 1058 9 view .LVU1004
1058:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->RxState = HAL_UART_STATE_READY;
 3074              		.loc 1 1058 24 is_stmt 0 view .LVU1005
 3075 0040 2023     		movs	r3, #32
 3076 0042 84F86930 		strb	r3, [r4, #105]
1059:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3077              		.loc 1 1059 9 is_stmt 1 view .LVU1006
1059:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3078              		.loc 1 1059 24 is_stmt 0 view .LVU1007
 3079 0046 84F86A30 		strb	r3, [r4, #106]
1062:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3080              		.loc 1 1062 9 is_stmt 1 view .LVU1008
1062:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3081              		.loc 1 1062 9 view .LVU1009
 3082 004a 0023     		movs	r3, #0
 3083 004c 84F86830 		strb	r3, [r4, #104]
1062:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
 3084              		.loc 1 1062 9 view .LVU1010
1063:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3085              		.loc 1 1063 9 view .LVU1011
1063:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3086              		.loc 1 1063 16 is_stmt 0 view .LVU1012
 3087 0050 0320     		movs	r0, #3
 3088              	.L291:
1068:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3089              		.loc 1 1068 1 view .LVU1013
 3090 0052 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3091              	.LVL237:
 3092              	.L290:
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3093              		.loc 1 1052 31 discriminator 1 view .LVU1014
 3094 0056 FFF7FEFF 		bl	HAL_GetTick
 3095              	.LVL238:
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3096              		.loc 1 1052 44 discriminator 1 view .LVU1015
 3097 005a C01B     		subs	r0, r0, r7
1052:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3098              		.loc 1 1052 26 discriminator 1 view .LVU1016
 3099 005c 4045     		cmp	r0, r8
 3100 005e D6D9     		bls	.L288
 3101 0060 E6E7     		b	.L292
 3102              		.cfi_endproc
 3103              	.LFE140:
 3105              		.section	.text.UART_CheckIdleState,"ax",%progbits
 3106              		.align	1
 3107              		.global	UART_CheckIdleState
 3108              		.syntax unified
 3109              		.thumb
 3110              		.thumb_func
 3112              	UART_CheckIdleState:
 3113              	.LVL239:
 3114              	.LFB138:
 930:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3115              		.loc 1 930 1 is_stmt 1 view -0
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 0
 3118              		@ frame_needed = 0, uses_anonymous_args = 0
 931:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3119              		.loc 1 931 3 view .LVU1018
 934:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3120              		.loc 1 934 3 view .LVU1019
 930:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3121              		.loc 1 930 1 is_stmt 0 view .LVU1020
 3122 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 3123              	.LCFI10:
 3124              		.cfi_def_cfa_offset 24
 3125              		.cfi_offset 4, -16
 3126              		.cfi_offset 5, -12
 3127              		.cfi_offset 6, -8
 3128              		.cfi_offset 14, -4
 930:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3129              		.loc 1 930 1 view .LVU1021
 3130 0002 0446     		mov	r4, r0
 934:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3131              		.loc 1 934 20 view .LVU1022
 3132 0004 0021     		movs	r1, #0
 3133 0006 C166     		str	r1, [r0, #108]
 937:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3134              		.loc 1 937 3 is_stmt 1 view .LVU1023
 937:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3135              		.loc 1 937 15 is_stmt 0 view .LVU1024
 3136 0008 FFF7FEFF 		bl	HAL_GetTick
 3137              	.LVL240:
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3138              		.loc 1 940 12 view .LVU1025
 3139 000c 2668     		ldr	r6, [r4]
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3140              		.loc 1 940 22 view .LVU1026
 3141 000e 3368     		ldr	r3, [r6]
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3142              		.loc 1 940 5 view .LVU1027
 3143 0010 1A07     		lsls	r2, r3, #28
 937:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3144              		.loc 1 937 15 view .LVU1028
 3145 0012 0546     		mov	r5, r0
 3146              	.LVL241:
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3147              		.loc 1 940 3 is_stmt 1 view .LVU1029
 940:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3148              		.loc 1 940 5 is_stmt 0 view .LVU1030
 3149 0014 16D4     		bmi	.L297
 3150              	.LVL242:
 3151              	.L300:
 950:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3152              		.loc 1 950 3 is_stmt 1 view .LVU1031
 950:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3153              		.loc 1 950 22 is_stmt 0 view .LVU1032
 3154 0016 3368     		ldr	r3, [r6]
 950:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3155              		.loc 1 950 5 view .LVU1033
 3156 0018 5B07     		lsls	r3, r3, #29
 3157 001a 0AD5     		bpl	.L299
 953:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3158              		.loc 1 953 5 is_stmt 1 view .LVU1034
 953:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3159              		.loc 1 953 8 is_stmt 0 view .LVU1035
 3160 001c 6FF07E43 		mvn	r3, #-33554432
 3161 0020 0093     		str	r3, [sp]
 3162 0022 0022     		movs	r2, #0
 3163 0024 2B46     		mov	r3, r5
 3164 0026 4FF48001 		mov	r1, #4194304
 3165 002a 2046     		mov	r0, r4
 3166 002c FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3167              	.LVL243:
 953:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3168              		.loc 1 953 7 discriminator 1 view .LVU1036
 3169 0030 A0B9     		cbnz	r0, .L302
 3170              	.L299:
 961:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3171              		.loc 1 961 3 is_stmt 1 view .LVU1037
 961:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3172              		.loc 1 961 18 is_stmt 0 view .LVU1038
 3173 0032 2023     		movs	r3, #32
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3174              		.loc 1 965 3 view .LVU1039
 3175 0034 0020     		movs	r0, #0
 961:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   huart->RxState = HAL_UART_STATE_READY;
 3176              		.loc 1 961 18 view .LVU1040
 3177 0036 84F86930 		strb	r3, [r4, #105]
 962:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3178              		.loc 1 962 3 is_stmt 1 view .LVU1041
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3179              		.loc 1 965 3 is_stmt 0 view .LVU1042
 3180 003a 84F86800 		strb	r0, [r4, #104]
 962:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3181              		.loc 1 962 18 view .LVU1043
 3182 003e 84F86A30 		strb	r3, [r4, #106]
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3183              		.loc 1 965 3 is_stmt 1 view .LVU1044
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3184              		.loc 1 965 3 view .LVU1045
 965:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3185              		.loc 1 965 3 view .LVU1046
 967:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3186              		.loc 1 967 3 view .LVU1047
 967:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3187              		.loc 1 967 10 is_stmt 0 view .LVU1048
 3188 0042 0CE0     		b	.L301
 3189              	.LVL244:
 3190              	.L297:
 943:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3191              		.loc 1 943 5 is_stmt 1 view .LVU1049
 943:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3192              		.loc 1 943 8 is_stmt 0 view .LVU1050
 3193 0044 6FF07E43 		mvn	r3, #-33554432
 3194 0048 0093     		str	r3, [sp]
 3195 004a 0A46     		mov	r2, r1
 3196 004c 0346     		mov	r3, r0
 3197 004e 4FF40011 		mov	r1, #2097152
 3198 0052 2046     		mov	r0, r4
 3199              	.LVL245:
 943:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3200              		.loc 1 943 8 view .LVU1051
 3201 0054 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3202              	.LVL246:
 943:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
 3203              		.loc 1 943 7 discriminator 1 view .LVU1052
 3204 0058 0028     		cmp	r0, #0
 3205 005a DCD0     		beq	.L300
 3206              	.L302:
 946:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 3207              		.loc 1 946 14 view .LVU1053
 3208 005c 0320     		movs	r0, #3
 3209              	.L301:
 968:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3210              		.loc 1 968 1 view .LVU1054
 3211 005e 02B0     		add	sp, sp, #8
 3212              	.LCFI11:
 3213              		.cfi_def_cfa_offset 16
 3214              		@ sp needed
 3215 0060 70BD     		pop	{r4, r5, r6, pc}
 968:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3216              		.loc 1 968 1 view .LVU1055
 3217              		.cfi_endproc
 3218              	.LFE138:
 3220              		.section	.text.HAL_UART_Init,"ax",%progbits
 3221              		.align	1
 3222              		.global	HAL_UART_Init
 3223              		.syntax unified
 3224              		.thumb
 3225              		.thumb_func
 3227              	HAL_UART_Init:
 3228              	.LVL247:
 3229              	.LFB139:
 979:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3230              		.loc 1 979 1 is_stmt 1 view -0
 3231              		.cfi_startproc
 3232              		@ args = 0, pretend = 0, frame = 0
 3233              		@ frame_needed = 0, uses_anonymous_args = 0
 981:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3234              		.loc 1 981 3 view .LVU1057
 979:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check the UART handle allocation */
 3235              		.loc 1 979 1 is_stmt 0 view .LVU1058
 3236 0000 38B5     		push	{r3, r4, r5, lr}
 3237              	.LCFI12:
 3238              		.cfi_def_cfa_offset 16
 3239              		.cfi_offset 3, -16
 3240              		.cfi_offset 4, -12
 3241              		.cfi_offset 5, -8
 3242              		.cfi_offset 14, -4
 981:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3243              		.loc 1 981 5 view .LVU1059
 3244 0002 0446     		mov	r4, r0
 3245 0004 20B3     		cbz	r0, .L308
 986:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3246              		.loc 1 986 3 is_stmt 1 view .LVU1060
 989:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 3247              		.loc 1 989 5 view .LVU1061
 994:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
 3248              		.loc 1 994 5 view .LVU1062
 997:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3249              		.loc 1 997 3 view .LVU1063
 997:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3250              		.loc 1 997 11 is_stmt 0 view .LVU1064
 3251 0006 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 997:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3252              		.loc 1 997 5 view .LVU1065
 3253 000a 03F0FF02 		and	r2, r3, #255
 3254 000e 0BB9     		cbnz	r3, .L309
1000:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3255              		.loc 1 1000 5 is_stmt 1 view .LVU1066
1000:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3256              		.loc 1 1000 17 is_stmt 0 view .LVU1067
 3257 0010 80F86820 		strb	r2, [r0, #104]
 3258              	.L309:
1006:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3259              		.loc 1 1006 3 is_stmt 1 view .LVU1068
1009:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3260              		.loc 1 1009 3 is_stmt 0 view .LVU1069
 3261 0014 2568     		ldr	r5, [r4]
1006:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3262              		.loc 1 1006 17 view .LVU1070
 3263 0016 2423     		movs	r3, #36
 3264 0018 84F86930 		strb	r3, [r4, #105]
1009:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3265              		.loc 1 1009 3 is_stmt 1 view .LVU1071
 3266 001c 2B68     		ldr	r3, [r5]
 3267 001e 23F00103 		bic	r3, r3, #1
 3268 0022 2B60     		str	r3, [r5]
1012:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3269              		.loc 1 1012 3 view .LVU1072
1012:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3270              		.loc 1 1012 7 is_stmt 0 view .LVU1073
 3271 0024 2046     		mov	r0, r4
 3272              	.LVL248:
1012:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3273              		.loc 1 1012 7 view .LVU1074
 3274 0026 FFF7FEFF 		bl	UART_SetConfig
 3275              	.LVL249:
1012:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3276              		.loc 1 1012 6 discriminator 1 view .LVU1075
 3277 002a 0128     		cmp	r0, #1
 3278 002c 10D0     		beq	.L308
1017:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
 3279              		.loc 1 1017 3 is_stmt 1 view .LVU1076
1020:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3280              		.loc 1 1020 3 view .LVU1077
1025:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 3281              		.loc 1 1025 3 view .LVU1078
 3282 002e 6B68     		ldr	r3, [r5, #4]
 3283 0030 23F49043 		bic	r3, r3, #18432
 3284 0034 6B60     		str	r3, [r5, #4]
1026:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3285              		.loc 1 1026 3 view .LVU1079
 3286 0036 AB68     		ldr	r3, [r5, #8]
 3287 0038 23F02A03 		bic	r3, r3, #42
 3288 003c AB60     		str	r3, [r5, #8]
1029:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3289              		.loc 1 1029 3 view .LVU1080
 3290 003e 2B68     		ldr	r3, [r5]
 3291 0040 43F00103 		orr	r3, r3, #1
 3292 0044 2B60     		str	r3, [r5]
1032:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3293              		.loc 1 1032 3 view .LVU1081
1032:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3294              		.loc 1 1032 10 is_stmt 0 view .LVU1082
 3295 0046 2046     		mov	r0, r4
1033:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3296              		.loc 1 1033 1 view .LVU1083
 3297 0048 BDE83840 		pop	{r3, r4, r5, lr}
 3298              	.LCFI13:
 3299              		.cfi_remember_state
 3300              		.cfi_restore 14
 3301              		.cfi_restore 5
 3302              		.cfi_restore 4
 3303              		.cfi_restore 3
 3304              		.cfi_def_cfa_offset 0
 3305              	.LVL250:
1032:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3306              		.loc 1 1032 10 view .LVU1084
 3307 004c FFF7FEBF 		b	UART_CheckIdleState
 3308              	.LVL251:
 3309              	.L308:
 3310              	.LCFI14:
 3311              		.cfi_restore_state
1033:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3312              		.loc 1 1033 1 view .LVU1085
 3313 0050 0120     		movs	r0, #1
 3314 0052 38BD     		pop	{r3, r4, r5, pc}
1033:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3315              		.loc 1 1033 1 view .LVU1086
 3316              		.cfi_endproc
 3317              	.LFE139:
 3319              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3320              		.align	1
 3321              		.global	HAL_UART_Transmit
 3322              		.syntax unified
 3323              		.thumb
 3324              		.thumb_func
 3326              	HAL_UART_Transmit:
 3327              	.LVL252:
 3328              	.LFB141:
1069:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1070:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1071:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1072:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
1073:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Send an amount of data in blocking mode.
1074:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
1075:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param pData: Pointer to data buffer.
1076:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param Size: Amount of data to be sent.
1077:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1078:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1079:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
1080:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1081:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 3329              		.loc 1 1081 1 is_stmt 1 view -0
 3330              		.cfi_startproc
 3331              		@ args = 0, pretend = 0, frame = 0
 3332              		@ frame_needed = 0, uses_anonymous_args = 0
1082:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3333              		.loc 1 1082 3 view .LVU1088
1083:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3334              		.loc 1 1083 3 view .LVU1089
1084:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1085:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check that a Tx process is not already ongoing */
1086:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->gState == HAL_UART_STATE_READY)
 3335              		.loc 1 1086 3 view .LVU1090
1081:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3336              		.loc 1 1081 1 is_stmt 0 view .LVU1091
 3337 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 3338              	.LCFI15:
 3339              		.cfi_def_cfa_offset 32
 3340              		.cfi_offset 4, -20
 3341              		.cfi_offset 5, -16
 3342              		.cfi_offset 6, -12
 3343              		.cfi_offset 7, -8
 3344              		.cfi_offset 14, -4
1081:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3345              		.loc 1 1081 1 view .LVU1092
 3346 0002 1E46     		mov	r6, r3
 3347              		.loc 1 1086 11 view .LVU1093
 3348 0004 90F86930 		ldrb	r3, [r0, #105]	@ zero_extendqisi2
 3349              	.LVL253:
 3350              		.loc 1 1086 5 view .LVU1094
 3351 0008 202B     		cmp	r3, #32
1081:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3352              		.loc 1 1081 1 view .LVU1095
 3353 000a 0D46     		mov	r5, r1
 3354 000c 0446     		mov	r4, r0
 3355 000e 1146     		mov	r1, r2
 3356              	.LVL254:
 3357              		.loc 1 1086 5 view .LVU1096
 3358 0010 4AD1     		bne	.L325
1087:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1088:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 3359              		.loc 1 1088 5 is_stmt 1 view .LVU1097
 3360              		.loc 1 1088 7 is_stmt 0 view .LVU1098
 3361 0012 002D     		cmp	r5, #0
 3362 0014 46D0     		beq	.L324
 3363              		.loc 1 1088 25 discriminator 1 view .LVU1099
 3364 0016 002A     		cmp	r2, #0
 3365 0018 44D0     		beq	.L324
1089:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1090:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return  HAL_ERROR;
1091:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1092:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1093:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Locked */
1094:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3366              		.loc 1 1094 5 is_stmt 1 view .LVU1100
 3367              		.loc 1 1094 5 view .LVU1101
 3368 001a 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3369 001e 012B     		cmp	r3, #1
 3370 0020 42D0     		beq	.L325
 3371              		.loc 1 1094 5 discriminator 2 view .LVU1102
 3372 0022 0123     		movs	r3, #1
 3373 0024 80F86830 		strb	r3, [r0, #104]
 3374              		.loc 1 1094 5 discriminator 2 view .LVU1103
1095:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1096:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3375              		.loc 1 1096 5 view .LVU1104
 3376              		.loc 1 1096 22 is_stmt 0 view .LVU1105
 3377 0028 0023     		movs	r3, #0
 3378 002a C366     		str	r3, [r0, #108]
1097:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3379              		.loc 1 1097 5 is_stmt 1 view .LVU1106
 3380              		.loc 1 1097 19 is_stmt 0 view .LVU1107
 3381 002c 2123     		movs	r3, #33
 3382 002e 80F86930 		strb	r3, [r0, #105]
1098:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1099:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1100:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3383              		.loc 1 1100 5 is_stmt 1 view .LVU1108
 3384              		.loc 1 1100 17 is_stmt 0 view .LVU1109
 3385 0032 FFF7FEFF 		bl	HAL_GetTick
 3386              	.LVL255:
1101:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1102:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->TxXferSize = Size;
 3387              		.loc 1 1102 23 view .LVU1110
 3388 0036 A4F85010 		strh	r1, [r4, #80]	@ movhi
1100:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3389              		.loc 1 1100 17 view .LVU1111
 3390 003a 0746     		mov	r7, r0
 3391              	.LVL256:
 3392              		.loc 1 1102 5 is_stmt 1 view .LVU1112
1103:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->TxXferCount = Size;
 3393              		.loc 1 1103 5 view .LVU1113
 3394              		.loc 1 1103 24 is_stmt 0 view .LVU1114
 3395 003c A4F85210 		strh	r1, [r4, #82]	@ movhi
1104:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     while(huart->TxXferCount > 0U)
 3396              		.loc 1 1104 5 is_stmt 1 view .LVU1115
 3397              	.LVL257:
 3398              	.L316:
 3399              		.loc 1 1104 30 view .LVU1116
 3400              		.loc 1 1104 16 is_stmt 0 view .LVU1117
 3401 0040 B4F85220 		ldrh	r2, [r4, #82]
 3402 0044 92B2     		uxth	r2, r2
 3403              		.loc 1 1104 30 view .LVU1118
 3404 0046 62B9     		cbnz	r2, .L320
1105:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1106:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       huart->TxXferCount--;
1107:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1108:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1109:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1110:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1111:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1112:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1113:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tmp = (uint16_t*) pData;
1114:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
1115:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
1116:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1117:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
1118:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*pData++ & (uint8_t)0xFFU);
1120:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1121:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1122:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 3405              		.loc 1 1122 5 is_stmt 1 view .LVU1119
 3406              		.loc 1 1122 8 is_stmt 0 view .LVU1120
 3407 0048 0096     		str	r6, [sp]
 3408 004a 3B46     		mov	r3, r7
 3409 004c 4021     		movs	r1, #64
 3410 004e 2046     		mov	r0, r4
 3411 0050 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3412              	.LVL258:
 3413              		.loc 1 1122 7 discriminator 1 view .LVU1121
 3414 0054 98B9     		cbnz	r0, .L321
1123:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1124:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return HAL_TIMEOUT;
1125:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1126:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1127:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* At end of Tx process, restore huart->gState to Ready */
1128:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->gState = HAL_UART_STATE_READY;
 3415              		.loc 1 1128 5 is_stmt 1 view .LVU1122
 3416              		.loc 1 1128 19 is_stmt 0 view .LVU1123
 3417 0056 2023     		movs	r3, #32
 3418 0058 84F86930 		strb	r3, [r4, #105]
1129:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1130:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Unlocked */
1131:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3419              		.loc 1 1131 5 is_stmt 1 view .LVU1124
 3420              		.loc 1 1131 5 view .LVU1125
 3421 005c 84F86800 		strb	r0, [r4, #104]
 3422              		.loc 1 1131 5 view .LVU1126
1132:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1133:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_OK;
 3423              		.loc 1 1133 5 view .LVU1127
 3424              		.loc 1 1133 12 is_stmt 0 view .LVU1128
 3425 0060 0EE0     		b	.L315
 3426              	.L320:
1106:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3427              		.loc 1 1106 7 is_stmt 1 view .LVU1129
1106:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3428              		.loc 1 1106 12 is_stmt 0 view .LVU1130
 3429 0062 B4F85220 		ldrh	r2, [r4, #82]
1106:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 3430              		.loc 1 1106 25 view .LVU1131
 3431 0066 013A     		subs	r2, r2, #1
 3432 0068 92B2     		uxth	r2, r2
 3433 006a A4F85220 		strh	r2, [r4, #82]	@ movhi
1107:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3434              		.loc 1 1107 7 is_stmt 1 view .LVU1132
1107:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3435              		.loc 1 1107 10 is_stmt 0 view .LVU1133
 3436 006e 3B46     		mov	r3, r7
 3437 0070 0096     		str	r6, [sp]
 3438 0072 0022     		movs	r2, #0
 3439 0074 8021     		movs	r1, #128
 3440 0076 2046     		mov	r0, r4
 3441 0078 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3442              	.LVL259:
1107:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3443              		.loc 1 1107 9 discriminator 1 view .LVU1134
 3444 007c 10B1     		cbz	r0, .L317
 3445              	.L321:
1109:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3446              		.loc 1 1109 16 view .LVU1135
 3447 007e 0320     		movs	r0, #3
 3448              	.LVL260:
 3449              	.L315:
1134:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1135:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   else
1136:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1137:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_BUSY;
1138:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1139:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3450              		.loc 1 1139 1 view .LVU1136
 3451 0080 03B0     		add	sp, sp, #12
 3452              	.LCFI16:
 3453              		.cfi_remember_state
 3454              		.cfi_def_cfa_offset 20
 3455              		@ sp needed
 3456 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 3457              	.LVL261:
 3458              	.L317:
 3459              	.LCFI17:
 3460              		.cfi_restore_state
1111:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3461              		.loc 1 1111 7 is_stmt 1 view .LVU1137
1111:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3462              		.loc 1 1111 10 is_stmt 0 view .LVU1138
 3463 0084 A368     		ldr	r3, [r4, #8]
1114:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3464              		.loc 1 1114 14 view .LVU1139
 3465 0086 2268     		ldr	r2, [r4]
1111:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3466              		.loc 1 1111 10 view .LVU1140
 3467 0088 B3F5805F 		cmp	r3, #4096
 3468 008c 07D1     		bne	.L318
1111:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3469              		.loc 1 1111 58 discriminator 1 view .LVU1141
 3470 008e 2369     		ldr	r3, [r4, #16]
 3471 0090 2BB9     		cbnz	r3, .L318
1113:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         huart->Instance->TDR = (*tmp & (uint16_t)0x01FFU);
 3472              		.loc 1 1113 9 is_stmt 1 view .LVU1142
 3473              	.LVL262:
1114:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3474              		.loc 1 1114 9 view .LVU1143
1114:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3475              		.loc 1 1114 38 is_stmt 0 view .LVU1144
 3476 0092 35F8023B 		ldrh	r3, [r5], #2
 3477              	.LVL263:
1114:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData += 2U;
 3478              		.loc 1 1114 38 view .LVU1145
 3479 0096 C3F30803 		ubfx	r3, r3, #0, #9
 3480              	.LVL264:
 3481              	.L326:
1119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3482              		.loc 1 1119 30 view .LVU1146
 3483 009a 1385     		strh	r3, [r2, #40]	@ movhi
 3484 009c D0E7     		b	.L316
 3485              	.LVL265:
 3486              	.L318:
1119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3487              		.loc 1 1119 9 is_stmt 1 view .LVU1147
1119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3488              		.loc 1 1119 33 is_stmt 0 view .LVU1148
 3489 009e 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 3490              	.LVL266:
1119:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3491              		.loc 1 1119 33 view .LVU1149
 3492 00a2 FAE7     		b	.L326
 3493              	.LVL267:
 3494              	.L324:
1090:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 3495              		.loc 1 1090 15 view .LVU1150
 3496 00a4 0120     		movs	r0, #1
 3497              	.LVL268:
1090:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 3498              		.loc 1 1090 15 view .LVU1151
 3499 00a6 EBE7     		b	.L315
 3500              	.LVL269:
 3501              	.L325:
1094:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3502              		.loc 1 1094 5 discriminator 1 view .LVU1152
 3503 00a8 0220     		movs	r0, #2
 3504              	.LVL270:
1094:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3505              		.loc 1 1094 5 discriminator 1 view .LVU1153
 3506 00aa E9E7     		b	.L315
 3507              		.cfi_endproc
 3508              	.LFE141:
 3510              		.section	.text.HAL_UART_Receive,"ax",%progbits
 3511              		.align	1
 3512              		.global	HAL_UART_Receive
 3513              		.syntax unified
 3514              		.thumb
 3515              		.thumb_func
 3517              	HAL_UART_Receive:
 3518              	.LVL271:
 3519              	.LFB142:
1140:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1141:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1142:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1143:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** /**
1144:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @brief Receive an amount of data in blocking mode.
1145:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param huart: UART handle.
1146:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param pData: pointer to data buffer.
1147:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param Size: amount of data to be received.
1148:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @param Timeout: Timeout duration.
1149:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   * @retval HAL status
1150:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   */
1151:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1152:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** {
 3520              		.loc 1 1152 1 is_stmt 1 view -0
 3521              		.cfi_startproc
 3522              		@ args = 0, pretend = 0, frame = 0
 3523              		@ frame_needed = 0, uses_anonymous_args = 0
1153:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3524              		.loc 1 1153 3 view .LVU1155
1154:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t uhMask;
 3525              		.loc 1 1154 3 view .LVU1156
1155:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint32_t tickstart = 0U;
 3526              		.loc 1 1155 3 view .LVU1157
1156:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1157:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   /* Check that a Rx process is not already ongoing */
1158:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   if(huart->RxState == HAL_UART_STATE_READY)
 3527              		.loc 1 1158 3 view .LVU1158
1152:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3528              		.loc 1 1152 1 is_stmt 0 view .LVU1159
 3529 0000 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
 3530              	.LCFI18:
 3531              		.cfi_def_cfa_offset 32
 3532              		.cfi_offset 4, -24
 3533              		.cfi_offset 5, -20
 3534              		.cfi_offset 6, -16
 3535              		.cfi_offset 7, -12
 3536              		.cfi_offset 8, -8
 3537              		.cfi_offset 14, -4
1152:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3538              		.loc 1 1152 1 view .LVU1160
 3539 0004 1E46     		mov	r6, r3
 3540              		.loc 1 1158 11 view .LVU1161
 3541 0006 90F86A30 		ldrb	r3, [r0, #106]	@ zero_extendqisi2
 3542              	.LVL272:
 3543              		.loc 1 1158 5 view .LVU1162
 3544 000a 202B     		cmp	r3, #32
1152:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   uint16_t* tmp;
 3545              		.loc 1 1152 1 view .LVU1163
 3546 000c 0D46     		mov	r5, r1
 3547 000e 0446     		mov	r4, r0
 3548 0010 1146     		mov	r1, r2
 3549              	.LVL273:
 3550              		.loc 1 1158 5 view .LVU1164
 3551 0012 5CD1     		bne	.L339
1159:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1160:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     if((pData == NULL ) || (Size == 0U))
 3552              		.loc 1 1160 5 is_stmt 1 view .LVU1165
 3553              		.loc 1 1160 7 is_stmt 0 view .LVU1166
 3554 0014 002D     		cmp	r5, #0
 3555 0016 58D0     		beq	.L338
 3556              		.loc 1 1160 25 discriminator 1 view .LVU1167
 3557 0018 002A     		cmp	r2, #0
 3558 001a 56D0     		beq	.L338
1161:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1162:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       return  HAL_ERROR;
1163:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1164:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1165:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Locked */
1166:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_LOCK(huart);
 3559              		.loc 1 1166 5 is_stmt 1 view .LVU1168
 3560              		.loc 1 1166 5 view .LVU1169
 3561 001c 90F86830 		ldrb	r3, [r0, #104]	@ zero_extendqisi2
 3562 0020 012B     		cmp	r3, #1
 3563 0022 54D0     		beq	.L339
 3564              		.loc 1 1166 5 discriminator 2 view .LVU1170
 3565 0024 0123     		movs	r3, #1
 3566 0026 80F86830 		strb	r3, [r0, #104]
 3567              		.loc 1 1166 5 discriminator 2 view .LVU1171
1167:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1168:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->Instance->ICR = 0xFFFFFFFF;
 3568              		.loc 1 1168 5 view .LVU1172
 3569              		.loc 1 1168 10 is_stmt 0 view .LVU1173
 3570 002a 0368     		ldr	r3, [r0]
 3571              		.loc 1 1168 26 view .LVU1174
 3572 002c 4FF0FF32 		mov	r2, #-1
 3573              	.LVL274:
 3574              		.loc 1 1168 26 view .LVU1175
 3575 0030 1A62     		str	r2, [r3, #32]
1169:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3576              		.loc 1 1169 5 is_stmt 1 view .LVU1176
 3577              		.loc 1 1169 22 is_stmt 0 view .LVU1177
 3578 0032 0023     		movs	r3, #0
 3579 0034 C366     		str	r3, [r0, #108]
1170:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 3580              		.loc 1 1170 5 is_stmt 1 view .LVU1178
 3581              		.loc 1 1170 20 is_stmt 0 view .LVU1179
 3582 0036 2223     		movs	r3, #34
 3583 0038 80F86A30 		strb	r3, [r0, #106]
1171:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1172:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Init tickstart for timeout managment*/
1173:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     tickstart = HAL_GetTick();
 3584              		.loc 1 1173 5 is_stmt 1 view .LVU1180
 3585              		.loc 1 1173 17 is_stmt 0 view .LVU1181
 3586 003c FFF7FEFF 		bl	HAL_GetTick
 3587              	.LVL275:
1174:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1175:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferSize = Size;
1176:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
1177:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1178:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Computation of UART mask to apply to RDR register */
1179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     UART_MASK_COMPUTATION(huart);
 3588              		.loc 1 1179 5 view .LVU1182
 3589 0040 A368     		ldr	r3, [r4, #8]
1175:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3590              		.loc 1 1175 23 view .LVU1183
 3591 0042 A4F85810 		strh	r1, [r4, #88]	@ movhi
 3592              		.loc 1 1179 5 view .LVU1184
 3593 0046 B3F5805F 		cmp	r3, #4096
1173:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3594              		.loc 1 1173 17 view .LVU1185
 3595 004a 8046     		mov	r8, r0
 3596              	.LVL276:
1175:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxXferCount = Size;
 3597              		.loc 1 1175 5 is_stmt 1 view .LVU1186
1176:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3598              		.loc 1 1176 5 view .LVU1187
1176:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3599              		.loc 1 1176 24 is_stmt 0 view .LVU1188
 3600 004c A4F85A10 		strh	r1, [r4, #90]	@ movhi
 3601              		.loc 1 1179 5 is_stmt 1 view .LVU1189
 3602              		.loc 1 1179 5 view .LVU1190
 3603 0050 15D1     		bne	.L329
 3604              		.loc 1 1179 5 discriminator 1 view .LVU1191
 3605 0052 2369     		ldr	r3, [r4, #16]
 3606 0054 8BB9     		cbnz	r3, .L330
 3607              		.loc 1 1179 5 discriminator 3 view .LVU1192
 3608 0056 40F2FF13 		movw	r3, #511
 3609              	.L344:
 3610              		.loc 1 1179 5 is_stmt 0 discriminator 8 view .LVU1193
 3611 005a A4F85C30 		strh	r3, [r4, #92]	@ movhi
 3612              	.L331:
 3613              		.loc 1 1179 5 is_stmt 1 discriminator 10 view .LVU1194
1180:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3614              		.loc 1 1180 5 view .LVU1195
 3615              		.loc 1 1180 12 is_stmt 0 view .LVU1196
 3616 005e B4F85C70 		ldrh	r7, [r4, #92]
 3617              	.LVL277:
1181:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1182:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* as long as data have to be received */
1183:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     while(huart->RxXferCount > 0U)
 3618              		.loc 1 1183 5 is_stmt 1 view .LVU1197
 3619              	.L332:
 3620              		.loc 1 1183 30 view .LVU1198
 3621              		.loc 1 1183 16 is_stmt 0 view .LVU1199
 3622 0062 B4F85A00 		ldrh	r0, [r4, #90]
 3623 0066 80B2     		uxth	r0, r0
 3624              		.loc 1 1183 30 view .LVU1200
 3625 0068 80B9     		cbnz	r0, .L335
1184:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     {
1185:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       huart->RxXferCount--;
1186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1187:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1188:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         return HAL_TIMEOUT;
1189:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1191:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1192:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         tmp = (uint16_t*) pData ;
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
1194:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
1195:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1196:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       else
1197:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         *pData++ = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1199:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
1200:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
1201:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1202:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1203:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     huart->RxState = HAL_UART_STATE_READY;
 3626              		.loc 1 1203 5 is_stmt 1 view .LVU1201
 3627              		.loc 1 1203 20 is_stmt 0 view .LVU1202
 3628 006a 2023     		movs	r3, #32
 3629 006c 84F86A30 		strb	r3, [r4, #106]
1204:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1205:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     /* Process Unlocked */
1206:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     __HAL_UNLOCK(huart);
 3630              		.loc 1 1206 5 is_stmt 1 view .LVU1203
 3631              		.loc 1 1206 5 view .LVU1204
 3632 0070 84F86800 		strb	r0, [r4, #104]
 3633              		.loc 1 1206 5 view .LVU1205
1207:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
1208:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_OK;
 3634              		.loc 1 1208 5 view .LVU1206
 3635              	.LVL278:
 3636              	.L328:
1209:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1210:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   else
1211:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   {
1212:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     return HAL_BUSY;
1213:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****   }
1214:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** }
 3637              		.loc 1 1214 1 is_stmt 0 view .LVU1207
 3638 0074 02B0     		add	sp, sp, #8
 3639              	.LCFI19:
 3640              		.cfi_remember_state
 3641              		.cfi_def_cfa_offset 24
 3642              		@ sp needed
 3643 0076 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3644              	.LVL279:
 3645              	.L330:
 3646              	.LCFI20:
 3647              		.cfi_restore_state
1179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3648              		.loc 1 1179 5 is_stmt 1 discriminator 4 view .LVU1208
 3649 007a FF23     		movs	r3, #255
 3650 007c EDE7     		b	.L344
 3651              	.L329:
1179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3652              		.loc 1 1179 5 discriminator 2 view .LVU1209
 3653 007e 002B     		cmp	r3, #0
 3654 0080 EDD1     		bne	.L331
1179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3655              		.loc 1 1179 5 discriminator 5 view .LVU1210
 3656 0082 2369     		ldr	r3, [r4, #16]
 3657 0084 002B     		cmp	r3, #0
 3658 0086 F8D0     		beq	.L330
1179:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     uhMask = huart->Mask;
 3659              		.loc 1 1179 5 discriminator 8 view .LVU1211
 3660 0088 7F23     		movs	r3, #127
 3661 008a E6E7     		b	.L344
 3662              	.LVL280:
 3663              	.L335:
1185:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3664              		.loc 1 1185 7 view .LVU1212
1185:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3665              		.loc 1 1185 12 is_stmt 0 view .LVU1213
 3666 008c B4F85A20 		ldrh	r2, [r4, #90]
1185:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       if(UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 3667              		.loc 1 1185 25 view .LVU1214
 3668 0090 013A     		subs	r2, r2, #1
 3669 0092 92B2     		uxth	r2, r2
 3670 0094 A4F85A20 		strh	r2, [r4, #90]	@ movhi
1186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3671              		.loc 1 1186 7 is_stmt 1 view .LVU1215
1186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3672              		.loc 1 1186 10 is_stmt 0 view .LVU1216
 3673 0098 4346     		mov	r3, r8
 3674 009a 0096     		str	r6, [sp]
 3675 009c 0022     		movs	r2, #0
 3676 009e 2021     		movs	r1, #32
 3677 00a0 2046     		mov	r0, r4
 3678 00a2 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3679              	.LVL281:
1186:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3680              		.loc 1 1186 9 discriminator 1 view .LVU1217
 3681 00a6 A0B9     		cbnz	r0, .L340
1190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3682              		.loc 1 1190 7 is_stmt 1 view .LVU1218
1190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3683              		.loc 1 1190 10 is_stmt 0 view .LVU1219
 3684 00a8 A268     		ldr	r2, [r4, #8]
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3685              		.loc 1 1193 32 view .LVU1220
 3686 00aa 2368     		ldr	r3, [r4]
1190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3687              		.loc 1 1190 10 view .LVU1221
 3688 00ac B2F5805F 		cmp	r2, #4096
 3689 00b0 06D1     		bne	.L333
1190:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       {
 3690              		.loc 1 1190 58 discriminator 1 view .LVU1222
 3691 00b2 2269     		ldr	r2, [r4, #16]
 3692 00b4 22B9     		cbnz	r2, .L333
1192:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         *tmp = (uint16_t)(huart->Instance->RDR & uhMask);
 3693              		.loc 1 1192 9 is_stmt 1 view .LVU1223
 3694              	.LVL282:
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3695              		.loc 1 1193 9 view .LVU1224
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3696              		.loc 1 1193 42 is_stmt 0 view .LVU1225
 3697 00b6 9B8C     		ldrh	r3, [r3, #36]
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3698              		.loc 1 1193 16 view .LVU1226
 3699 00b8 3B40     		ands	r3, r3, r7
1193:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****         pData +=2U;
 3700              		.loc 1 1193 14 view .LVU1227
 3701 00ba 25F8023B 		strh	r3, [r5], #2	@ movhi
 3702              	.LVL283:
1194:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3703              		.loc 1 1194 9 is_stmt 1 view .LVU1228
1194:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3704              		.loc 1 1194 15 is_stmt 0 view .LVU1229
 3705 00be D0E7     		b	.L332
 3706              	.LVL284:
 3707              	.L333:
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3708              		.loc 1 1198 9 is_stmt 1 view .LVU1230
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3709              		.loc 1 1198 45 is_stmt 0 view .LVU1231
 3710 00c0 9B8C     		ldrh	r3, [r3, #36]
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3711              		.loc 1 1198 20 view .LVU1232
 3712 00c2 3B40     		ands	r3, r3, r7
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3713              		.loc 1 1198 18 view .LVU1233
 3714 00c4 05F8013B 		strb	r3, [r5], #1
 3715              	.LVL285:
1198:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3716              		.loc 1 1198 18 view .LVU1234
 3717 00c8 CBE7     		b	.L332
 3718              	.LVL286:
 3719              	.L338:
1162:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 3720              		.loc 1 1162 15 view .LVU1235
 3721 00ca 0120     		movs	r0, #1
 3722              	.LVL287:
1162:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****     }
 3723              		.loc 1 1162 15 view .LVU1236
 3724 00cc D2E7     		b	.L328
 3725              	.LVL288:
 3726              	.L339:
1166:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3727              		.loc 1 1166 5 discriminator 1 view .LVU1237
 3728 00ce 0220     		movs	r0, #2
 3729              	.LVL289:
1166:.././hal//stm32f3/stm32f3_hal_lowlevel.c **** 
 3730              		.loc 1 1166 5 discriminator 1 view .LVU1238
 3731 00d0 D0E7     		b	.L328
 3732              	.LVL290:
 3733              	.L340:
1188:.././hal//stm32f3/stm32f3_hal_lowlevel.c ****       }
 3734              		.loc 1 1188 16 view .LVU1239
 3735 00d2 0320     		movs	r0, #3
 3736 00d4 CEE7     		b	.L328
 3737              		.cfi_endproc
 3738              	.LFE142:
 3740              		.global	SystemCoreClock
 3741              		.global	uwTick
 3742              		.global	hal_sys_tick
 3743              		.data
 3744              		.align	2
 3747              	SystemCoreClock:
 3748 0000 00127A00 		.word	8000000
 3749              		.bss
 3750              		.align	2
 3751              		.set	.LANCHOR0,. + 0
 3754              	hal_sys_tick:
 3755 0000 00000000 		.space	4
 3758              	uwTick:
 3759 0004 00000000 		.space	4
 3760              		.text
 3761              	.Letext0:
 3762              		.file 4 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 3763              		.file 5 ".././hal//stm32f3/CMSIS/device/stm32f303xc.h"
 3764              		.file 6 ".././hal//stm32f3/CMSIS/device/stm32f3xx.h"
 3765              		.file 7 ".././hal//stm32f3/stm32f3xx_hal_def.h"
 3766              		.file 8 ".././hal//stm32f3/stm32f3xx_hal_rcc.h"
 3767              		.file 9 ".././hal//stm32f3/stm32f3xx_hal_gpio.h"
 3768              		.file 10 ".././hal//stm32f3/stm32f3xx_hal_dma.h"
 3769              		.file 11 ".././hal//stm32f3/stm32f3xx_hal_uart.h"
 3770              		.file 12 ".././hal//stm32f3/CMSIS/device/system_stm32f3xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3_hal_lowlevel.c
     /tmp/ccMWTwbO.s:19     .text.HAL_NVIC_SetPriority:00000000 $t
     /tmp/ccMWTwbO.s:25     .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
     /tmp/ccMWTwbO.s:167    .text.HAL_NVIC_SetPriority:0000005c $d
     /tmp/ccMWTwbO.s:173    .text.HAL_InitTick:00000000 $t
     /tmp/ccMWTwbO.s:179    .text.HAL_InitTick:00000000 HAL_InitTick
     /tmp/ccMWTwbO.s:200    .text.HAL_InitTick:00000008 $d
     /tmp/ccMWTwbO.s:205    .text.HAL_GetTick:00000000 $t
     /tmp/ccMWTwbO.s:211    .text.HAL_GetTick:00000000 HAL_GetTick
     /tmp/ccMWTwbO.s:229    .text.HAL_GetTick:0000000c $d
     /tmp/ccMWTwbO.s:234    .text.HAL_IncTick:00000000 $t
     /tmp/ccMWTwbO.s:240    .text.HAL_IncTick:00000000 HAL_IncTick
     /tmp/ccMWTwbO.s:253    .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/ccMWTwbO.s:259    .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/ccMWTwbO.s:274    .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/ccMWTwbO.s:280    .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/ccMWTwbO.s:293    .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/ccMWTwbO.s:299    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/ccMWTwbO.s:1390   .text.HAL_RCC_OscConfig:000002e8 $d
     /tmp/ccMWTwbO.s:1396   .text.HAL_RCC_OscConfig:000002f4 $t
     /tmp/ccMWTwbO.s:1898   .text.HAL_RCC_OscConfig:00000484 $d
     /tmp/ccMWTwbO.s:1904   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/ccMWTwbO.s:1910   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/ccMWTwbO.s:2272   .text.HAL_RCC_ClockConfig:00000138 $d
     /tmp/ccMWTwbO.s:2278   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
     /tmp/ccMWTwbO.s:2284   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
     /tmp/ccMWTwbO.s:2297   .text.HAL_GPIO_Init:00000000 $t
     /tmp/ccMWTwbO.s:2303   .text.HAL_GPIO_Init:00000000 HAL_GPIO_Init
     /tmp/ccMWTwbO.s:2679   .text.HAL_GPIO_Init:00000170 $d
     /tmp/ccMWTwbO.s:2686   .text.HAL_GPIO_WritePin:00000000 $t
     /tmp/ccMWTwbO.s:2692   .text.HAL_GPIO_WritePin:00000000 HAL_GPIO_WritePin
     /tmp/ccMWTwbO.s:2719   .text.UART_SetConfig:00000000 $t
     /tmp/ccMWTwbO.s:2725   .text.UART_SetConfig:00000000 UART_SetConfig
     /tmp/ccMWTwbO.s:2998   .text.UART_SetConfig:00000148 $d
     /tmp/ccMWTwbO.s:3007   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/ccMWTwbO.s:3013   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccMWTwbO.s:3106   .text.UART_CheckIdleState:00000000 $t
     /tmp/ccMWTwbO.s:3112   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
     /tmp/ccMWTwbO.s:3221   .text.HAL_UART_Init:00000000 $t
     /tmp/ccMWTwbO.s:3227   .text.HAL_UART_Init:00000000 HAL_UART_Init
     /tmp/ccMWTwbO.s:3320   .text.HAL_UART_Transmit:00000000 $t
     /tmp/ccMWTwbO.s:3326   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
     /tmp/ccMWTwbO.s:3511   .text.HAL_UART_Receive:00000000 $t
     /tmp/ccMWTwbO.s:3517   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
     /tmp/ccMWTwbO.s:3747   .data:00000000 SystemCoreClock
     /tmp/ccMWTwbO.s:3758   .bss:00000004 uwTick
     /tmp/ccMWTwbO.s:3754   .bss:00000000 hal_sys_tick
     /tmp/ccMWTwbO.s:3744   .data:00000000 $d
     /tmp/ccMWTwbO.s:3750   .bss:00000000 $d

NO UNDEFINED SYMBOLS

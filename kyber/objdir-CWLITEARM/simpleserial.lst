   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"simpleserial.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 ".././simpleserial/simpleserial.c"
  18              		.section	.text.check_version,"ax",%progbits
  19              		.align	1
  20              		.global	check_version
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	check_version:
  26              	.LVL0:
  27              	.LFB1:
   1:.././simpleserial/simpleserial.c **** // simpleserial.c
   2:.././simpleserial/simpleserial.c **** 
   3:.././simpleserial/simpleserial.c **** #include "simpleserial.h"
   4:.././simpleserial/simpleserial.c **** #include <stdint.h>
   5:.././simpleserial/simpleserial.c **** #include "hal.h"
   6:.././simpleserial/simpleserial.c **** 
   7:.././simpleserial/simpleserial.c **** 
   8:.././simpleserial/simpleserial.c **** #define MAX_SS_CMDS 32
   9:.././simpleserial/simpleserial.c **** static int num_commands = 0;
  10:.././simpleserial/simpleserial.c **** 
  11:.././simpleserial/simpleserial.c **** 
  12:.././simpleserial/simpleserial.c **** //#define SS_VER_1_0 0
  13:.././simpleserial/simpleserial.c **** //#define SS_VER_1_1 1
  14:.././simpleserial/simpleserial.c **** //#define SS_VER_2_0 2
  15:.././simpleserial/simpleserial.c **** 
  16:.././simpleserial/simpleserial.c **** 
  17:.././simpleserial/simpleserial.c **** // 0xA6 formerly 
  18:.././simpleserial/simpleserial.c **** #define CW_CRC 0x4D 
  19:.././simpleserial/simpleserial.c **** uint8_t ss_crc(uint8_t *buf, uint8_t len)
  20:.././simpleserial/simpleserial.c **** {
  21:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
  22:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
  23:.././simpleserial/simpleserial.c **** 	while (len--) {
  24:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
  25:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
  26:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
  27:.././simpleserial/simpleserial.c **** 		}
  28:.././simpleserial/simpleserial.c **** 	}
  29:.././simpleserial/simpleserial.c **** 	return crc;
  30:.././simpleserial/simpleserial.c **** 
  31:.././simpleserial/simpleserial.c **** }
  32:.././simpleserial/simpleserial.c **** 
  33:.././simpleserial/simpleserial.c **** // [B_STUFF, CMD, SCMD, LEN, B_STUFF, DATA..., CRC, TERM]
  34:.././simpleserial/simpleserial.c **** 
  35:.././simpleserial/simpleserial.c **** //#define SS_VER SS_VER_2_0
  36:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_2_0
  37:.././simpleserial/simpleserial.c **** #error "SS_VER_2_0 is deprecated! Use SS_VER_2_1 instead."
  38:.././simpleserial/simpleserial.c **** #elif SS_VER == SS_VER_2_1
  39:.././simpleserial/simpleserial.c **** 
  40:.././simpleserial/simpleserial.c **** #define MAX_SS_LEN 249
  41:.././simpleserial/simpleserial.c **** 
  42:.././simpleserial/simpleserial.c **** int hex_decode(int len, char* ascii_buf, uint8_t* data_buf)
  43:.././simpleserial/simpleserial.c **** {
  44:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
  45:.././simpleserial/simpleserial.c **** 	{
  46:.././simpleserial/simpleserial.c **** 		char n_hi = ascii_buf[2*i];
  47:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
  48:.././simpleserial/simpleserial.c **** 
  49:.././simpleserial/simpleserial.c **** 		if(n_lo >= '0' && n_lo <= '9')
  50:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
  51:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
  52:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
  53:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
  54:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
  55:.././simpleserial/simpleserial.c **** 		else
  56:.././simpleserial/simpleserial.c **** 			return 1;
  57:.././simpleserial/simpleserial.c **** 
  58:.././simpleserial/simpleserial.c **** 		if(n_hi >= '0' && n_hi <= '9')
  59:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
  60:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
  61:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
  62:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
  63:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
  64:.././simpleserial/simpleserial.c **** 		else
  65:.././simpleserial/simpleserial.c **** 			return 1;
  66:.././simpleserial/simpleserial.c **** 	}
  67:.././simpleserial/simpleserial.c **** 
  68:.././simpleserial/simpleserial.c **** 	return 0;
  69:.././simpleserial/simpleserial.c **** }
  70:.././simpleserial/simpleserial.c **** 
  71:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
  72:.././simpleserial/simpleserial.c **** {
  73:.././simpleserial/simpleserial.c **** 	char c;
  74:.././simpleserial/simpleserial.c **** 	unsigned int len;
  75:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t *);
  76:.././simpleserial/simpleserial.c **** } ss_cmd;
  77:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
  78:.././simpleserial/simpleserial.c **** 
  79:.././simpleserial/simpleserial.c **** void ss_puts(char *x)
  80:.././simpleserial/simpleserial.c **** {
  81:.././simpleserial/simpleserial.c **** 	do {
  82:.././simpleserial/simpleserial.c **** 		putch(*x);
  83:.././simpleserial/simpleserial.c **** 	} while (*++x);
  84:.././simpleserial/simpleserial.c **** }
  85:.././simpleserial/simpleserial.c **** 
  86:.././simpleserial/simpleserial.c **** #define FRAME_BYTE 0x00
  87:.././simpleserial/simpleserial.c **** 
  88:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  89:.././simpleserial/simpleserial.c **** {
  90:.././simpleserial/simpleserial.c **** 	uint8_t ver = SS_VER;
  91:.././simpleserial/simpleserial.c **** 	simpleserial_put('r', 1, &ver);
  92:.././simpleserial/simpleserial.c **** 	return SS_ERR_OK;
  93:.././simpleserial/simpleserial.c **** }
  94:.././simpleserial/simpleserial.c **** 
  95:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t cmd, uint8_t scmd, uint8_t len, uint8_t *data)
  96:.././simpleserial/simpleserial.c **** {
  97:.././simpleserial/simpleserial.c ****     uint8_t cmd_chars[MAX_SS_CMDS];
  98:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
  99:.././simpleserial/simpleserial.c ****         cmd_chars[i] = commands[i].c;
 100:.././simpleserial/simpleserial.c ****     }
 101:.././simpleserial/simpleserial.c **** 
 102:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands & 0xFF, (void *)cmd_chars);
 103:.././simpleserial/simpleserial.c ****     return 0x00;
 104:.././simpleserial/simpleserial.c **** 
 105:.././simpleserial/simpleserial.c **** }
 106:.././simpleserial/simpleserial.c **** 
 107:.././simpleserial/simpleserial.c **** uint8_t stuff_data(uint8_t *buf, uint8_t len)
 108:.././simpleserial/simpleserial.c **** {
 109:.././simpleserial/simpleserial.c **** 	uint8_t i = 1;
 110:.././simpleserial/simpleserial.c **** 	uint8_t last = 0;
 111:.././simpleserial/simpleserial.c **** 	for (; i < len; i++) {
 112:.././simpleserial/simpleserial.c **** 		if (buf[i] == FRAME_BYTE) {
 113:.././simpleserial/simpleserial.c **** 			buf[last] = i - last;
 114:.././simpleserial/simpleserial.c **** 			last = i;
 115:.././simpleserial/simpleserial.c **** 		}
 116:.././simpleserial/simpleserial.c **** 	}
 117:.././simpleserial/simpleserial.c **** 	return 0x00;
 118:.././simpleserial/simpleserial.c **** }
 119:.././simpleserial/simpleserial.c **** 
 120:.././simpleserial/simpleserial.c **** uint8_t unstuff_data(uint8_t *buf, uint8_t len)
 121:.././simpleserial/simpleserial.c **** {
 122:.././simpleserial/simpleserial.c **** 	uint8_t next = buf[0];
 123:.././simpleserial/simpleserial.c **** 	buf[0] = 0x00;
 124:.././simpleserial/simpleserial.c **** 	//len -= 1;
 125:.././simpleserial/simpleserial.c **** 	uint8_t tmp = next;
 126:.././simpleserial/simpleserial.c **** 	while ((next < len) && tmp != 0) {
 127:.././simpleserial/simpleserial.c **** 		tmp = buf[next];
 128:.././simpleserial/simpleserial.c **** 		buf[next] = FRAME_BYTE;
 129:.././simpleserial/simpleserial.c **** 		next += tmp;
 130:.././simpleserial/simpleserial.c **** 	}
 131:.././simpleserial/simpleserial.c **** 	return next;
 132:.././simpleserial/simpleserial.c **** }
 133:.././simpleserial/simpleserial.c **** 
 134:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 135:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 136:.././simpleserial/simpleserial.c **** void simpleserial_init()
 137:.././simpleserial/simpleserial.c **** {
 138:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 139:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 140:.././simpleserial/simpleserial.c **** }
 141:.././simpleserial/simpleserial.c **** 
 142:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t, uint8_t, uint8_t, uint8_t*
 143:.././simpleserial/simpleserial.c **** {
 144:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS) {
 145:.././simpleserial/simpleserial.c **** 		putch('a');
 146:.././simpleserial/simpleserial.c **** 		return 1;
 147:.././simpleserial/simpleserial.c **** 	}
 148:.././simpleserial/simpleserial.c **** 
 149:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN) {
 150:.././simpleserial/simpleserial.c **** 		putch('b');
 151:.././simpleserial/simpleserial.c **** 		return 1;
 152:.././simpleserial/simpleserial.c **** 	}
 153:.././simpleserial/simpleserial.c **** 
 154:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 155:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 156:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 157:.././simpleserial/simpleserial.c **** 	num_commands++;
 158:.././simpleserial/simpleserial.c **** 
 159:.././simpleserial/simpleserial.c **** 	return 0;
 160:.././simpleserial/simpleserial.c **** }
 161:.././simpleserial/simpleserial.c **** 
 162:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 163:.././simpleserial/simpleserial.c **** {
 164:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 165:.././simpleserial/simpleserial.c **** 	uint8_t err = 0;
 166:.././simpleserial/simpleserial.c **** 
 167:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < 4; i++) {
 168:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch(); //PTR, cmd, scmd, len
 169:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 170:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 171:.././simpleserial/simpleserial.c **** 			goto ERROR;
 172:.././simpleserial/simpleserial.c **** 		}
 173:.././simpleserial/simpleserial.c **** 	}
 174:.././simpleserial/simpleserial.c **** 	uint8_t next_frame = unstuff_data(data_buf, 4);
 175:.././simpleserial/simpleserial.c **** 
 176:.././simpleserial/simpleserial.c **** 	// check for valid command
 177:.././simpleserial/simpleserial.c **** 	uint8_t c = 0;
 178:.././simpleserial/simpleserial.c **** 	for(c = 0; c < num_commands; c++)
 179:.././simpleserial/simpleserial.c **** 	{
 180:.././simpleserial/simpleserial.c **** 		if(commands[c].c == data_buf[1])
 181:.././simpleserial/simpleserial.c **** 			break;
 182:.././simpleserial/simpleserial.c **** 	}
 183:.././simpleserial/simpleserial.c **** 
 184:.././simpleserial/simpleserial.c **** 	if (c == num_commands) {
 185:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CMD;
 186:.././simpleserial/simpleserial.c **** 		goto ERROR;
 187:.././simpleserial/simpleserial.c **** 	}
 188:.././simpleserial/simpleserial.c **** 
 189:.././simpleserial/simpleserial.c **** 	//check that next frame not beyond end of message
 190:.././simpleserial/simpleserial.c **** 	// account for cmd, scmd, len, data, crc, end of frame
 191:.././simpleserial/simpleserial.c **** 	if ((data_buf[3] + 5) < next_frame) {
 192:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 193:.././simpleserial/simpleserial.c **** 		goto ERROR;
 194:.././simpleserial/simpleserial.c **** 	}
 195:.././simpleserial/simpleserial.c **** 
 196:.././simpleserial/simpleserial.c **** 	// read in data
 197:.././simpleserial/simpleserial.c **** 	// eq to len + crc + frame end
 198:.././simpleserial/simpleserial.c **** 	int i = 4;
 199:.././simpleserial/simpleserial.c **** 	for (; i < data_buf[3] + 5; i++) {
 200:.././simpleserial/simpleserial.c **** 		data_buf[i] = getch();
 201:.././simpleserial/simpleserial.c **** 		if (data_buf[i] == FRAME_BYTE) {
 202:.././simpleserial/simpleserial.c **** 			err = SS_ERR_FRAME_BYTE;
 203:.././simpleserial/simpleserial.c **** 			goto ERROR;
 204:.././simpleserial/simpleserial.c **** 		}
 205:.././simpleserial/simpleserial.c **** 	}
 206:.././simpleserial/simpleserial.c **** 
 207:.././simpleserial/simpleserial.c **** 	//check that final byte is the FRAME_BYTE
 208:.././simpleserial/simpleserial.c **** 	data_buf[i] = getch();
 209:.././simpleserial/simpleserial.c **** 	if (data_buf[i] != FRAME_BYTE) {
 210:.././simpleserial/simpleserial.c **** 		err = SS_ERR_LEN;
 211:.././simpleserial/simpleserial.c **** 		goto ERROR;
 212:.././simpleserial/simpleserial.c **** 	}
 213:.././simpleserial/simpleserial.c **** 
 214:.././simpleserial/simpleserial.c **** 	//fully unstuff data now
 215:.././simpleserial/simpleserial.c **** 	unstuff_data(data_buf + next_frame, i - next_frame + 1);
 216:.././simpleserial/simpleserial.c **** 
 217:.././simpleserial/simpleserial.c **** 	//calc crc excluding original frame offset and frame end and crc
 218:.././simpleserial/simpleserial.c **** 	uint8_t crc = ss_crc(data_buf+1, i-2);
 219:.././simpleserial/simpleserial.c **** 	if (crc != data_buf[i-1]) {
 220:.././simpleserial/simpleserial.c **** 		err = SS_ERR_CRC;
 221:.././simpleserial/simpleserial.c **** 		goto ERROR;
 222:.././simpleserial/simpleserial.c **** 	}
 223:.././simpleserial/simpleserial.c **** 
 224:.././simpleserial/simpleserial.c **** 	err = commands[c].fp(data_buf[1], data_buf[2], data_buf[3], data_buf+4);
 225:.././simpleserial/simpleserial.c **** 
 226:.././simpleserial/simpleserial.c **** ERROR:
 227:.././simpleserial/simpleserial.c **** 	simpleserial_put('e', 0x01, &err);
 228:.././simpleserial/simpleserial.c **** 	return;
 229:.././simpleserial/simpleserial.c **** }
 230:.././simpleserial/simpleserial.c **** 
 231:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
 232:.././simpleserial/simpleserial.c **** {
 233:.././simpleserial/simpleserial.c ****     if (!output) return;
 234:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 235:.././simpleserial/simpleserial.c **** 	data_buf[0] = 0x00;
 236:.././simpleserial/simpleserial.c **** 	data_buf[1] = c;
 237:.././simpleserial/simpleserial.c **** 	data_buf[2] = size;
 238:.././simpleserial/simpleserial.c **** 	int i = 0;
 239:.././simpleserial/simpleserial.c **** 	for (; i < size; i++) {
 240:.././simpleserial/simpleserial.c **** 		data_buf[i + 3] = output[i];
 241:.././simpleserial/simpleserial.c **** 	}
 242:.././simpleserial/simpleserial.c **** 	data_buf[i + 3] = ss_crc(data_buf+1, size+2);
 243:.././simpleserial/simpleserial.c **** 	data_buf[i + 4] = 0x00;
 244:.././simpleserial/simpleserial.c **** 	stuff_data(data_buf, i + 5);
 245:.././simpleserial/simpleserial.c **** 	for (int i = 0; i < size + 5; i++) {
 246:.././simpleserial/simpleserial.c **** 		putch(data_buf[i]);
 247:.././simpleserial/simpleserial.c **** 	}
 248:.././simpleserial/simpleserial.c **** }
 249:.././simpleserial/simpleserial.c **** 
 250:.././simpleserial/simpleserial.c **** 
 251:.././simpleserial/simpleserial.c **** #else
 252:.././simpleserial/simpleserial.c **** 
 253:.././simpleserial/simpleserial.c **** #define MAX_SS_LEN 64
 254:.././simpleserial/simpleserial.c **** 
 255:.././simpleserial/simpleserial.c **** typedef struct ss_cmd
 256:.././simpleserial/simpleserial.c **** {
 257:.././simpleserial/simpleserial.c **** 	char c;
 258:.././simpleserial/simpleserial.c **** 	unsigned int len;
 259:.././simpleserial/simpleserial.c **** 	uint8_t (*fp)(uint8_t*, uint8_t);
 260:.././simpleserial/simpleserial.c **** 	uint8_t flags;
 261:.././simpleserial/simpleserial.c **** } ss_cmd;
 262:.././simpleserial/simpleserial.c **** static ss_cmd commands[MAX_SS_CMDS];
 263:.././simpleserial/simpleserial.c **** // Callback function for "v" command.
 264:.././simpleserial/simpleserial.c **** // This can exist in v1.0 as long as we don't actually send back an ack ("z")
 265:.././simpleserial/simpleserial.c **** uint8_t check_version(uint8_t *v, uint8_t len)
 266:.././simpleserial/simpleserial.c **** {
  28              		.loc 1 266 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 267:.././simpleserial/simpleserial.c **** 	return SS_VER;
  33              		.loc 1 267 2 view .LVU1
 268:.././simpleserial/simpleserial.c **** }
  34              		.loc 1 268 1 is_stmt 0 view .LVU2
  35 0000 0120     		movs	r0, #1
  36              	.LVL1:
  37              		.loc 1 268 1 view .LVU3
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE1:
  42              		.section	.text.simpleserial_put.part.0,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	simpleserial_put.part.0:
  49              	.LVL2:
  50              	.LFB10:
 269:.././simpleserial/simpleserial.c **** 
 270:.././simpleserial/simpleserial.c **** uint8_t ss_num_commands(uint8_t *x, uint8_t len)
 271:.././simpleserial/simpleserial.c **** {
 272:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 273:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 274:.././simpleserial/simpleserial.c ****     return 0x00;
 275:.././simpleserial/simpleserial.c **** }
 276:.././simpleserial/simpleserial.c **** 
 277:.././simpleserial/simpleserial.c **** typedef struct ss_cmd_repr {
 278:.././simpleserial/simpleserial.c ****     uint8_t c;
 279:.././simpleserial/simpleserial.c ****     uint8_t len;
 280:.././simpleserial/simpleserial.c ****     uint8_t flags;
 281:.././simpleserial/simpleserial.c **** } ss_cmd_repr;
 282:.././simpleserial/simpleserial.c **** 
 283:.././simpleserial/simpleserial.c **** uint8_t ss_get_commands(uint8_t *x, uint8_t len)
 284:.././simpleserial/simpleserial.c **** {
 285:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 286:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 287:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 288:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 289:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 290:.././simpleserial/simpleserial.c ****     }
 291:.././simpleserial/simpleserial.c **** 
 292:.././simpleserial/simpleserial.c ****     simpleserial_put('r', num_commands * sizeof (ss_cmd_repr), (void *) repr_cmd_buf);
 293:.././simpleserial/simpleserial.c ****     return 0x00;
 294:.././simpleserial/simpleserial.c **** }
 295:.././simpleserial/simpleserial.c **** 
 296:.././simpleserial/simpleserial.c **** static char hex_lookup[16] =
 297:.././simpleserial/simpleserial.c **** {
 298:.././simpleserial/simpleserial.c **** 	'0', '1', '2', '3', '4', '5', '6', '7',
 299:.././simpleserial/simpleserial.c **** 	'8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
 300:.././simpleserial/simpleserial.c **** };
 301:.././simpleserial/simpleserial.c **** 
 302:.././simpleserial/simpleserial.c **** int hex_decode(int len, char* ascii_buf, uint8_t* data_buf)
 303:.././simpleserial/simpleserial.c **** {
 304:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 305:.././simpleserial/simpleserial.c **** 	{
 306:.././simpleserial/simpleserial.c **** 		char n_hi = ascii_buf[2*i];
 307:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 308:.././simpleserial/simpleserial.c **** 
 309:.././simpleserial/simpleserial.c **** 		if(n_lo >= '0' && n_lo <= '9')
 310:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 311:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 312:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 313:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 314:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 315:.././simpleserial/simpleserial.c **** 		else
 316:.././simpleserial/simpleserial.c **** 			return 1;
 317:.././simpleserial/simpleserial.c **** 
 318:.././simpleserial/simpleserial.c **** 		if(n_hi >= '0' && n_hi <= '9')
 319:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 320:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'A' && n_hi <= 'F')
 321:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 322:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 323:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 324:.././simpleserial/simpleserial.c **** 		else
 325:.././simpleserial/simpleserial.c **** 			return 1;
 326:.././simpleserial/simpleserial.c **** 	}
 327:.././simpleserial/simpleserial.c **** 
 328:.././simpleserial/simpleserial.c **** 	return 0;
 329:.././simpleserial/simpleserial.c **** }
 330:.././simpleserial/simpleserial.c **** 
 331:.././simpleserial/simpleserial.c **** 
 332:.././simpleserial/simpleserial.c **** 
 333:.././simpleserial/simpleserial.c **** // Set up the SimpleSerial module by preparing internal commands
 334:.././simpleserial/simpleserial.c **** // This just adds the "v" command for now...
 335:.././simpleserial/simpleserial.c **** void simpleserial_init()
 336:.././simpleserial/simpleserial.c **** {
 337:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 338:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 339:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 340:.././simpleserial/simpleserial.c **** }
 341:.././simpleserial/simpleserial.c **** 
 342:.././simpleserial/simpleserial.c **** int simpleserial_addcmd(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t))
 343:.././simpleserial/simpleserial.c **** {
 344:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 345:.././simpleserial/simpleserial.c **** }
 346:.././simpleserial/simpleserial.c **** 
 347:.././simpleserial/simpleserial.c **** int simpleserial_addcmd_flags(char c, unsigned int len, uint8_t (*fp)(uint8_t*, uint8_t), uint8_t f
 348:.././simpleserial/simpleserial.c **** {
 349:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 350:.././simpleserial/simpleserial.c **** 		return 1;
 351:.././simpleserial/simpleserial.c **** 
 352:.././simpleserial/simpleserial.c **** 	if(len >= MAX_SS_LEN)
 353:.././simpleserial/simpleserial.c **** 		return 1;
 354:.././simpleserial/simpleserial.c **** 
 355:.././simpleserial/simpleserial.c **** 	commands[num_commands].c   = c;
 356:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 357:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 358:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 359:.././simpleserial/simpleserial.c **** 	num_commands++;
 360:.././simpleserial/simpleserial.c **** 
 361:.././simpleserial/simpleserial.c **** 	return 0;
 362:.././simpleserial/simpleserial.c **** }
 363:.././simpleserial/simpleserial.c **** 
 364:.././simpleserial/simpleserial.c **** void simpleserial_get(void)
 365:.././simpleserial/simpleserial.c **** {
 366:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 367:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 368:.././simpleserial/simpleserial.c **** 	char c;
 369:.././simpleserial/simpleserial.c **** 
 370:.././simpleserial/simpleserial.c **** 	// Find which command we're receiving
 371:.././simpleserial/simpleserial.c **** 	c = getch();
 372:.././simpleserial/simpleserial.c **** 
 373:.././simpleserial/simpleserial.c **** 	int cmd;
 374:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 375:.././simpleserial/simpleserial.c **** 	{
 376:.././simpleserial/simpleserial.c **** 		if(commands[cmd].c == c)
 377:.././simpleserial/simpleserial.c **** 			break;
 378:.././simpleserial/simpleserial.c **** 	}
 379:.././simpleserial/simpleserial.c **** 
 380:.././simpleserial/simpleserial.c **** 	// If we didn't find a match, give up right away
 381:.././simpleserial/simpleserial.c **** 	if(cmd == num_commands)
 382:.././simpleserial/simpleserial.c **** 		return;
 383:.././simpleserial/simpleserial.c **** 
 384:.././simpleserial/simpleserial.c **** 	// If flag CMD_FLAG_LEN is set, the next byte indicates the sent length
 385:.././simpleserial/simpleserial.c **** 	if ((commands[cmd].flags & CMD_FLAG_LEN) != 0)
 386:.././simpleserial/simpleserial.c **** 	{
 387:.././simpleserial/simpleserial.c **** 		uint8_t l = 0;
 388:.././simpleserial/simpleserial.c **** 		char buff[2];
 389:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 390:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 391:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 392:.././simpleserial/simpleserial.c **** 			return;
 393:.././simpleserial/simpleserial.c **** 		commands[cmd].len = l;
 394:.././simpleserial/simpleserial.c **** 	}
 395:.././simpleserial/simpleserial.c **** 
 396:.././simpleserial/simpleserial.c **** 	// Receive characters until we fill the ASCII buffer
 397:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < 2*commands[cmd].len; i++)
 398:.././simpleserial/simpleserial.c **** 	{
 399:.././simpleserial/simpleserial.c **** 		c = getch();
 400:.././simpleserial/simpleserial.c **** 
 401:.././simpleserial/simpleserial.c **** 		// Check for early \n
 402:.././simpleserial/simpleserial.c **** 		if(c == '\n' || c == '\r')
 403:.././simpleserial/simpleserial.c **** 			return;
 404:.././simpleserial/simpleserial.c **** 
 405:.././simpleserial/simpleserial.c **** 		ascii_buf[i] = c;
 406:.././simpleserial/simpleserial.c **** 	}
 407:.././simpleserial/simpleserial.c **** 
 408:.././simpleserial/simpleserial.c **** 	// Assert that last character is \n or \r
 409:.././simpleserial/simpleserial.c **** 	c = getch();
 410:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 411:.././simpleserial/simpleserial.c **** 		return;
 412:.././simpleserial/simpleserial.c **** 
 413:.././simpleserial/simpleserial.c **** 	// ASCII buffer is full: convert to bytes
 414:.././simpleserial/simpleserial.c **** 	// Check for illegal characters here
 415:.././simpleserial/simpleserial.c **** 	if(hex_decode(commands[cmd].len, ascii_buf, data_buf))
 416:.././simpleserial/simpleserial.c **** 		return;
 417:.././simpleserial/simpleserial.c **** 
 418:.././simpleserial/simpleserial.c **** 	// Callback
 419:.././simpleserial/simpleserial.c **** 	uint8_t ret[1];
 420:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 421:.././simpleserial/simpleserial.c **** 
 422:.././simpleserial/simpleserial.c **** 	// Acknowledge (if version is 1.1)
 423:.././simpleserial/simpleserial.c **** #if SS_VER == SS_VER_1_1
 424:.././simpleserial/simpleserial.c **** 	simpleserial_put('z', 1, ret);
 425:.././simpleserial/simpleserial.c **** #endif
 426:.././simpleserial/simpleserial.c **** }
 427:.././simpleserial/simpleserial.c **** 
 428:.././simpleserial/simpleserial.c **** void simpleserial_put(char c, uint8_t size, uint8_t* output)
  51              		.loc 1 428 6 is_stmt 1 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
 429:.././simpleserial/simpleserial.c **** {
 430:.././simpleserial/simpleserial.c **** 	// Write first character
 431:.././simpleserial/simpleserial.c ****     if (!output) return;
 432:.././simpleserial/simpleserial.c **** 	putch(c);
  55              		.loc 1 432 2 view .LVU5
 428:.././simpleserial/simpleserial.c **** {
  56              		.loc 1 428 6 is_stmt 0 view .LVU6
  57 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 24
  60              		.cfi_offset 3, -24
  61              		.cfi_offset 4, -20
  62              		.cfi_offset 5, -16
  63              		.cfi_offset 6, -12
  64              		.cfi_offset 7, -8
  65              		.cfi_offset 14, -4
 428:.././simpleserial/simpleserial.c **** {
  66              		.loc 1 428 6 view .LVU7
  67 0002 1446     		mov	r4, r2
  68 0004 0E46     		mov	r6, r1
  69              		.loc 1 432 2 view .LVU8
  70 0006 FFF7FEFF 		bl	putch
  71              	.LVL3:
 433:.././simpleserial/simpleserial.c **** 
 434:.././simpleserial/simpleserial.c **** 	// Write each byte as two nibbles
 435:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < size; i++)
  72              		.loc 1 435 2 is_stmt 1 view .LVU9
  73              	.LBB12:
  74              		.loc 1 435 6 view .LVU10
 436:.././simpleserial/simpleserial.c **** 	{
 437:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] >> 4 ]);
  75              		.loc 1 437 3 is_stmt 0 view .LVU11
  76 000a 0C4F     		ldr	r7, .L5
  77 000c 651E     		subs	r5, r4, #1
 435:.././simpleserial/simpleserial.c **** 	{
  78              		.loc 1 435 19 discriminator 1 view .LVU12
  79 000e C4F10104 		rsb	r4, r4, #1
  80              	.LVL4:
  81              	.L3:
 435:.././simpleserial/simpleserial.c **** 	{
  82              		.loc 1 435 19 is_stmt 1 discriminator 1 view .LVU13
  83 0012 6319     		adds	r3, r4, r5
  84 0014 9E42     		cmp	r6, r3
  85 0016 04DC     		bgt	.L4
  86              	.LBE12:
 438:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 439:.././simpleserial/simpleserial.c **** 	}
 440:.././simpleserial/simpleserial.c **** 
 441:.././simpleserial/simpleserial.c **** 	// Write trailing '\n'
 442:.././simpleserial/simpleserial.c **** 	putch('\n');
  87              		.loc 1 442 2 view .LVU14
 443:.././simpleserial/simpleserial.c **** }
  88              		.loc 1 443 1 is_stmt 0 view .LVU15
  89 0018 BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
  90              	.LCFI1:
  91              		.cfi_remember_state
  92              		.cfi_restore 14
  93              		.cfi_restore 7
  94              		.cfi_restore 6
  95              		.cfi_restore 5
  96              		.cfi_restore 4
  97              		.cfi_restore 3
  98              		.cfi_def_cfa_offset 0
  99              	.LVL5:
 442:.././simpleserial/simpleserial.c **** }
 100              		.loc 1 442 2 view .LVU16
 101 001c 0A20     		movs	r0, #10
 102 001e FFF7FEBF 		b	putch
 103              	.LVL6:
 104              	.L4:
 105              	.LCFI2:
 106              		.cfi_restore_state
 107              	.LBB13:
 437:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 108              		.loc 1 437 3 is_stmt 1 view .LVU17
 437:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 109              		.loc 1 437 30 is_stmt 0 view .LVU18
 110 0022 15F8013F 		ldrb	r3, [r5, #1]!	@ zero_extendqisi2
 111 0026 1B09     		lsrs	r3, r3, #4
 437:.././simpleserial/simpleserial.c **** 		putch(hex_lookup[output[i] & 0xF]);
 112              		.loc 1 437 3 view .LVU19
 113 0028 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 114 002a FFF7FEFF 		bl	putch
 115              	.LVL7:
 438:.././simpleserial/simpleserial.c **** 	}
 116              		.loc 1 438 3 is_stmt 1 view .LVU20
 438:.././simpleserial/simpleserial.c **** 	}
 117              		.loc 1 438 30 is_stmt 0 view .LVU21
 118 002e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 119 0030 03F00F03 		and	r3, r3, #15
 438:.././simpleserial/simpleserial.c **** 	}
 120              		.loc 1 438 3 view .LVU22
 121 0034 F85C     		ldrb	r0, [r7, r3]	@ zero_extendqisi2
 122 0036 FFF7FEFF 		bl	putch
 123              	.LVL8:
 435:.././simpleserial/simpleserial.c **** 	{
 124              		.loc 1 435 28 is_stmt 1 discriminator 3 view .LVU23
 125 003a EAE7     		b	.L3
 126              	.L6:
 127              		.align	2
 128              	.L5:
 129 003c 00000000 		.word	.LANCHOR0
 130              	.LBE13:
 131              		.cfi_endproc
 132              	.LFE10:
 134              		.section	.text.ss_num_commands,"ax",%progbits
 135              		.align	1
 136              		.global	ss_num_commands
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	ss_num_commands:
 142              	.LVL9:
 143              	.LFB2:
 271:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 144              		.loc 1 271 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 8
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 272:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 148              		.loc 1 272 5 view .LVU25
 271:.././simpleserial/simpleserial.c ****     uint8_t ncmds = num_commands & 0xFF;
 149              		.loc 1 271 1 is_stmt 0 view .LVU26
 150 0000 07B5     		push	{r0, r1, r2, lr}
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 16
 153              		.cfi_offset 14, -4
 272:.././simpleserial/simpleserial.c ****     simpleserial_put('r', 0x01, &ncmds);
 154              		.loc 1 272 13 view .LVU27
 155 0002 074B     		ldr	r3, .L8
 156              	.LBB14:
 157              	.LBB15:
 158 0004 0DF10702 		add	r2, sp, #7
 159              	.LBE15:
 160              	.LBE14:
 161 0008 1B68     		ldr	r3, [r3]
 162 000a 8DF80730 		strb	r3, [sp, #7]
 273:.././simpleserial/simpleserial.c ****     return 0x00;
 163              		.loc 1 273 5 is_stmt 1 view .LVU28
 164              	.LVL10:
 165              	.LBB17:
 166              	.LBI14:
 428:.././simpleserial/simpleserial.c **** {
 167              		.loc 1 428 6 view .LVU29
 168              	.LBB16:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 169              		.loc 1 431 5 view .LVU30
 170 000e 0121     		movs	r1, #1
 171              	.LVL11:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 172              		.loc 1 431 5 is_stmt 0 view .LVU31
 173 0010 7220     		movs	r0, #114
 174              	.LVL12:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 175              		.loc 1 431 5 view .LVU32
 176 0012 FFF7FEFF 		bl	simpleserial_put.part.0
 177              	.LVL13:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 178              		.loc 1 431 5 view .LVU33
 179              	.LBE16:
 180              	.LBE17:
 274:.././simpleserial/simpleserial.c **** }
 181              		.loc 1 274 5 is_stmt 1 view .LVU34
 275:.././simpleserial/simpleserial.c **** 
 182              		.loc 1 275 1 is_stmt 0 view .LVU35
 183 0016 0020     		movs	r0, #0
 184 0018 03B0     		add	sp, sp, #12
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 4
 187              		@ sp needed
 188 001a 5DF804FB 		ldr	pc, [sp], #4
 189              	.L9:
 190 001e 00BF     		.align	2
 191              	.L8:
 192 0020 00000000 		.word	.LANCHOR1
 193              		.cfi_endproc
 194              	.LFE2:
 196              		.section	.text.ss_get_commands,"ax",%progbits
 197              		.align	1
 198              		.global	ss_get_commands
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	ss_get_commands:
 204              	.LVL14:
 205              	.LFB3:
 284:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 206              		.loc 1 284 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 96
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 285:.././simpleserial/simpleserial.c ****     for (uint8_t i = 0; i < (num_commands & 0xFF); i++) {
 210              		.loc 1 285 5 view .LVU37
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 211              		.loc 1 286 5 view .LVU38
 212              	.LBB18:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 213              		.loc 1 286 10 view .LVU39
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 214              		.loc 1 286 10 is_stmt 0 view .LVU40
 215              	.LBE18:
 284:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 216              		.loc 1 284 1 view .LVU41
 217 0000 70B5     		push	{r4, r5, r6, lr}
 218              	.LCFI5:
 219              		.cfi_def_cfa_offset 16
 220              		.cfi_offset 4, -16
 221              		.cfi_offset 5, -12
 222              		.cfi_offset 6, -8
 223              		.cfi_offset 14, -4
 224              	.LBB19:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 225              		.loc 1 286 43 discriminator 1 view .LVU42
 226 0002 124C     		ldr	r4, .L13
 227 0004 2168     		ldr	r1, [r4]
 228              	.LVL15:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 229              		.loc 1 286 43 discriminator 1 view .LVU43
 230              	.LBE19:
 284:.././simpleserial/simpleserial.c ****     ss_cmd_repr repr_cmd_buf[MAX_SS_CMDS];
 231              		.loc 1 284 1 view .LVU44
 232 0006 98B0     		sub	sp, sp, #96
 233              	.LCFI6:
 234              		.cfi_def_cfa_offset 112
 235              	.LBB20:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 236              		.loc 1 286 43 discriminator 1 view .LVU45
 237 0008 CDB2     		uxtb	r5, r1
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 238              		.loc 1 286 5 view .LVU46
 239 000a 0020     		movs	r0, #0
 240              	.LVL16:
 241              	.L11:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 242              		.loc 1 286 27 is_stmt 1 discriminator 1 view .LVU47
 243 000c C3B2     		uxtb	r3, r0
 244 000e AB42     		cmp	r3, r5
 245 0010 00F10100 		add	r0, r0, #1
 246              	.LVL17:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 247              		.loc 1 286 27 is_stmt 0 discriminator 1 view .LVU48
 248 0014 09DB     		blt	.L12
 249              	.LBE20:
 292:.././simpleserial/simpleserial.c ****     return 0x00;
 250              		.loc 1 292 5 is_stmt 1 view .LVU49
 251              	.LVL18:
 252              	.LBB21:
 253              	.LBI21:
 428:.././simpleserial/simpleserial.c **** {
 254              		.loc 1 428 6 view .LVU50
 255              	.LBB22:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 256              		.loc 1 431 5 view .LVU51
 257              	.LBE22:
 258              	.LBE21:
 292:.././simpleserial/simpleserial.c ****     return 0x00;
 259              		.loc 1 292 5 is_stmt 0 view .LVU52
 260 0016 01EB4101 		add	r1, r1, r1, lsl #1
 261              	.LVL19:
 262              	.LBB24:
 263              	.LBB23:
 292:.././simpleserial/simpleserial.c ****     return 0x00;
 264              		.loc 1 292 5 view .LVU53
 265 001a 6A46     		mov	r2, sp
 266 001c C9B2     		uxtb	r1, r1
 267 001e 7220     		movs	r0, #114
 268              	.LVL20:
 292:.././simpleserial/simpleserial.c ****     return 0x00;
 269              		.loc 1 292 5 view .LVU54
 270 0020 FFF7FEFF 		bl	simpleserial_put.part.0
 271              	.LVL21:
 292:.././simpleserial/simpleserial.c ****     return 0x00;
 272              		.loc 1 292 5 view .LVU55
 273              	.LBE23:
 274              	.LBE24:
 293:.././simpleserial/simpleserial.c **** }
 275              		.loc 1 293 5 is_stmt 1 view .LVU56
 294:.././simpleserial/simpleserial.c **** 
 276              		.loc 1 294 1 is_stmt 0 view .LVU57
 277 0024 0020     		movs	r0, #0
 278 0026 18B0     		add	sp, sp, #96
 279              	.LCFI7:
 280              		.cfi_remember_state
 281              		.cfi_def_cfa_offset 16
 282              		@ sp needed
 283 0028 70BD     		pop	{r4, r5, r6, pc}
 284              	.LVL22:
 285              	.L12:
 286              	.LCFI8:
 287              		.cfi_restore_state
 288              	.LBB25:
 287:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 289              		.loc 1 287 9 is_stmt 1 view .LVU58
 287:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 290              		.loc 1 287 27 is_stmt 0 view .LVU59
 291 002a 03EB4302 		add	r2, r3, r3, lsl #1
 292 002e 6032     		adds	r2, r2, #96
 287:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 293              		.loc 1 287 40 view .LVU60
 294 0030 04EB0313 		add	r3, r4, r3, lsl #4
 287:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].len = commands[i].len;
 295              		.loc 1 287 27 view .LVU61
 296 0034 6A44     		add	r2, sp, r2
 297 0036 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 298 0038 02F8606C 		strb	r6, [r2, #-96]
 288:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 299              		.loc 1 288 9 is_stmt 1 view .LVU62
 288:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 300              		.loc 1 288 29 is_stmt 0 view .LVU63
 301 003c 9E68     		ldr	r6, [r3, #8]
 289:.././simpleserial/simpleserial.c ****     }
 302              		.loc 1 289 31 view .LVU64
 303 003e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 288:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].flags = commands[i].flags;
 304              		.loc 1 288 29 view .LVU65
 305 0040 02F85F6C 		strb	r6, [r2, #-95]
 289:.././simpleserial/simpleserial.c ****     }
 306              		.loc 1 289 9 is_stmt 1 view .LVU66
 289:.././simpleserial/simpleserial.c ****     }
 307              		.loc 1 289 31 is_stmt 0 view .LVU67
 308 0044 02F85E3C 		strb	r3, [r2, #-94]
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 309              		.loc 1 286 53 is_stmt 1 discriminator 3 view .LVU68
 310              	.LVL23:
 286:.././simpleserial/simpleserial.c ****         repr_cmd_buf[i].c = commands[i].c;
 311              		.loc 1 286 53 is_stmt 0 discriminator 3 view .LVU69
 312 0048 E0E7     		b	.L11
 313              	.L14:
 314 004a 00BF     		.align	2
 315              	.L13:
 316 004c 00000000 		.word	.LANCHOR1
 317              	.LBE25:
 318              		.cfi_endproc
 319              	.LFE3:
 321              		.section	.text.ss_crc,"ax",%progbits
 322              		.align	1
 323              		.global	ss_crc
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	ss_crc:
 329              	.LVL24:
 330              	.LFB0:
  20:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
 331              		.loc 1 20 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
  20:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
 335              		.loc 1 20 1 is_stmt 0 view .LVU71
 336 0000 10B5     		push	{r4, lr}
 337              	.LCFI9:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 4, -8
 340              		.cfi_offset 14, -4
  20:.././simpleserial/simpleserial.c **** 	unsigned int k = 0;
 341              		.loc 1 20 1 view .LVU72
 342 0002 0246     		mov	r2, r0
  21:.././simpleserial/simpleserial.c **** 	uint8_t crc = 0x00;
 343              		.loc 1 21 2 is_stmt 1 view .LVU73
 344              	.LVL25:
  22:.././simpleserial/simpleserial.c **** 	while (len--) {
 345              		.loc 1 22 2 view .LVU74
  23:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
 346              		.loc 1 23 2 view .LVU75
 347 0004 0144     		add	r1, r1, r0
 348              	.LVL26:
  22:.././simpleserial/simpleserial.c **** 	while (len--) {
 349              		.loc 1 22 10 is_stmt 0 view .LVU76
 350 0006 0020     		movs	r0, #0
 351              	.LVL27:
 352              	.L16:
  23:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
 353              		.loc 1 23 9 is_stmt 1 view .LVU77
  23:.././simpleserial/simpleserial.c **** 		crc ^= *buf++;
 354              		.loc 1 23 9 is_stmt 0 view .LVU78
 355 0008 8A42     		cmp	r2, r1
 356 000a 00D1     		bne	.L20
  29:.././simpleserial/simpleserial.c **** 
 357              		.loc 1 29 2 is_stmt 1 view .LVU79
  31:.././simpleserial/simpleserial.c **** 
 358              		.loc 1 31 1 is_stmt 0 view .LVU80
 359 000c 10BD     		pop	{r4, pc}
 360              	.L20:
  24:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
 361              		.loc 1 24 3 is_stmt 1 view .LVU81
 362              	.LVL28:
  24:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
 363              		.loc 1 24 7 is_stmt 0 view .LVU82
 364 000e 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 365              	.LVL29:
  24:.././simpleserial/simpleserial.c **** 		for (k = 0; k < 8; k++) {
 366              		.loc 1 24 7 view .LVU83
 367 0012 0824     		movs	r4, #8
 368 0014 5840     		eors	r0, r0, r3
 369              	.LVL30:
  25:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 370              		.loc 1 25 3 is_stmt 1 view .LVU84
  25:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 371              		.loc 1 25 17 discriminator 1 view .LVU85
 372              	.L19:
  26:.././simpleserial/simpleserial.c **** 		}
 373              		.loc 1 26 4 view .LVU86
  26:.././simpleserial/simpleserial.c **** 		}
 374              		.loc 1 26 21 is_stmt 0 view .LVU87
 375 0016 43B2     		sxtb	r3, r0
  26:.././simpleserial/simpleserial.c **** 		}
 376              		.loc 1 26 8 view .LVU88
 377 0018 002B     		cmp	r3, #0
  26:.././simpleserial/simpleserial.c **** 		}
 378              		.loc 1 26 34 discriminator 1 view .LVU89
 379 001a BABF     		itte	lt
 380 001c 5B00     		lsllt	r3, r3, #1
 381 001e 83F04D03 		eorlt	r3, r3, #77
  26:.././simpleserial/simpleserial.c **** 		}
 382              		.loc 1 26 8 discriminator 2 view .LVU90
 383 0022 4300     		lslge	r3, r0, #1
  25:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 384              		.loc 1 25 17 discriminator 1 view .LVU91
 385 0024 013C     		subs	r4, r4, #1
 386              	.LVL31:
  26:.././simpleserial/simpleserial.c **** 		}
 387              		.loc 1 26 8 discriminator 2 view .LVU92
 388 0026 D8B2     		uxtb	r0, r3
 389              	.LVL32:
  25:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 390              		.loc 1 25 23 is_stmt 1 discriminator 2 view .LVU93
  25:.././simpleserial/simpleserial.c **** 			crc = crc & 0x80 ? (crc << 1) ^ CW_CRC: crc << 1;
 391              		.loc 1 25 17 discriminator 1 view .LVU94
 392 0028 F5D1     		bne	.L19
 393 002a EDE7     		b	.L16
 394              		.cfi_endproc
 395              	.LFE0:
 397              		.section	.text.hex_decode,"ax",%progbits
 398              		.align	1
 399              		.global	hex_decode
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	hex_decode:
 405              	.LVL33:
 406              	.LFB4:
 303:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 407              		.loc 1 303 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 304:.././simpleserial/simpleserial.c **** 	{
 411              		.loc 1 304 2 view .LVU96
 412              	.LBB26:
 304:.././simpleserial/simpleserial.c **** 	{
 413              		.loc 1 304 6 view .LVU97
 304:.././simpleserial/simpleserial.c **** 	{
 414              		.loc 1 304 6 is_stmt 0 view .LVU98
 415              	.LBE26:
 303:.././simpleserial/simpleserial.c **** 	for(int i = 0; i < len; i++)
 416              		.loc 1 303 1 view .LVU99
 417 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 418              	.LCFI10:
 419              		.cfi_def_cfa_offset 20
 420              		.cfi_offset 4, -20
 421              		.cfi_offset 5, -16
 422              		.cfi_offset 6, -12
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425              	.LBB31:
 304:.././simpleserial/simpleserial.c **** 	{
 426              		.loc 1 304 10 view .LVU100
 427 0002 0025     		movs	r5, #0
 428              	.LBB27:
 307:.././simpleserial/simpleserial.c **** 
 429              		.loc 1 307 8 view .LVU101
 430 0004 4F1C     		adds	r7, r1, #1
 431              	.LVL34:
 432              	.L24:
 307:.././simpleserial/simpleserial.c **** 
 433              		.loc 1 307 8 view .LVU102
 434              	.LBE27:
 304:.././simpleserial/simpleserial.c **** 	{
 435              		.loc 1 304 19 is_stmt 1 discriminator 1 view .LVU103
 436 0006 8542     		cmp	r5, r0
 437 0008 01DB     		blt	.L34
 438              	.LBE31:
 328:.././simpleserial/simpleserial.c **** }
 439              		.loc 1 328 9 is_stmt 0 view .LVU104
 440 000a 0020     		movs	r0, #0
 441              	.LVL35:
 328:.././simpleserial/simpleserial.c **** }
 442              		.loc 1 328 9 view .LVU105
 443 000c 21E0     		b	.L23
 444              	.LVL36:
 445              	.L34:
 446              	.LBB32:
 447              	.LBB28:
 306:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 448              		.loc 1 306 3 is_stmt 1 view .LVU106
 307:.././simpleserial/simpleserial.c **** 
 449              		.loc 1 307 8 is_stmt 0 view .LVU107
 450 000e 17F81540 		ldrb	r4, [r7, r5, lsl #1]	@ zero_extendqisi2
 306:.././simpleserial/simpleserial.c **** 		char n_lo = ascii_buf[2*i+1];
 451              		.loc 1 306 8 view .LVU108
 452 0012 11F81530 		ldrb	r3, [r1, r5, lsl #1]	@ zero_extendqisi2
 453              	.LVL37:
 307:.././simpleserial/simpleserial.c **** 
 454              		.loc 1 307 3 is_stmt 1 view .LVU109
 309:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 455              		.loc 1 309 3 view .LVU110
 309:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 456              		.loc 1 309 18 is_stmt 0 view .LVU111
 457 0016 A4F13006 		sub	r6, r4, #48
 458 001a F6B2     		uxtb	r6, r6
 309:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - '0';
 459              		.loc 1 309 5 view .LVU112
 460 001c 092E     		cmp	r6, #9
 461 001e 0CD8     		bhi	.L25
 310:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 462              		.loc 1 310 4 is_stmt 1 view .LVU113
 310:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'A' && n_lo <= 'F')
 463              		.loc 1 310 16 is_stmt 0 view .LVU114
 464 0020 1670     		strb	r6, [r2]
 465              	.LVL38:
 466              	.L26:
 318:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 467              		.loc 1 318 3 is_stmt 1 view .LVU115
 318:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 468              		.loc 1 318 18 is_stmt 0 view .LVU116
 469 0022 A3F13004 		sub	r4, r3, #48
 470 0026 E4B2     		uxtb	r4, r4
 318:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - '0') << 4;
 471              		.loc 1 318 5 view .LVU117
 472 0028 092C     		cmp	r4, #9
 473 002a 15D8     		bhi	.L30
 474              	.L37:
 321:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 475              		.loc 1 321 16 view .LVU118
 476 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 477              	.LVL39:
 321:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 478              		.loc 1 321 16 view .LVU119
 479 002e 43EA0413 		orr	r3, r3, r4, lsl #4
 480              	.L36:
 323:.././simpleserial/simpleserial.c **** 		else
 481              		.loc 1 323 16 view .LVU120
 482 0032 1370     		strb	r3, [r2]
 483              	.LBE28:
 304:.././simpleserial/simpleserial.c **** 	{
 484              		.loc 1 304 27 is_stmt 1 discriminator 2 view .LVU121
 485 0034 0135     		adds	r5, r5, #1
 486              	.LVL40:
 304:.././simpleserial/simpleserial.c **** 	{
 487              		.loc 1 304 27 is_stmt 0 discriminator 2 view .LVU122
 488 0036 0132     		adds	r2, r2, #1
 489 0038 E5E7     		b	.L24
 490              	.LVL41:
 491              	.L25:
 492              	.LBB29:
 311:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 493              		.loc 1 311 8 is_stmt 1 view .LVU123
 311:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'A' + 10;
 494              		.loc 1 311 10 is_stmt 0 view .LVU124
 495 003a A4F14106 		sub	r6, r4, #65
 496 003e 052E     		cmp	r6, #5
 497 0040 02D8     		bhi	.L27
 312:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 498              		.loc 1 312 4 is_stmt 1 view .LVU125
 312:.././simpleserial/simpleserial.c **** 		else if(n_lo >= 'a' && n_lo <= 'f')
 499              		.loc 1 312 29 is_stmt 0 view .LVU126
 500 0042 373C     		subs	r4, r4, #55
 501              	.LVL42:
 502              	.L35:
 314:.././simpleserial/simpleserial.c **** 		else
 503              		.loc 1 314 16 view .LVU127
 504 0044 1470     		strb	r4, [r2]
 505              	.LVL43:
 314:.././simpleserial/simpleserial.c **** 		else
 506              		.loc 1 314 16 view .LVU128
 507 0046 ECE7     		b	.L26
 508              	.LVL44:
 509              	.L27:
 313:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 510              		.loc 1 313 8 is_stmt 1 view .LVU129
 313:.././simpleserial/simpleserial.c **** 			data_buf[i] = n_lo - 'a' + 10;
 511              		.loc 1 313 10 is_stmt 0 view .LVU130
 512 0048 A4F16106 		sub	r6, r4, #97
 513 004c 052E     		cmp	r6, #5
 514 004e 01D9     		bls	.L28
 515              	.LVL45:
 516              	.L33:
 316:.././simpleserial/simpleserial.c **** 
 517              		.loc 1 316 11 view .LVU131
 518 0050 0120     		movs	r0, #1
 519              	.LVL46:
 520              	.L23:
 316:.././simpleserial/simpleserial.c **** 
 521              		.loc 1 316 11 view .LVU132
 522              	.LBE29:
 523              	.LBE32:
 329:.././simpleserial/simpleserial.c **** 
 524              		.loc 1 329 1 view .LVU133
 525 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 526              	.LVL47:
 527              	.L28:
 528              	.LBB33:
 529              	.LBB30:
 314:.././simpleserial/simpleserial.c **** 		else
 530              		.loc 1 314 4 is_stmt 1 view .LVU134
 314:.././simpleserial/simpleserial.c **** 		else
 531              		.loc 1 314 29 is_stmt 0 view .LVU135
 532 0054 573C     		subs	r4, r4, #87
 533              	.LVL48:
 314:.././simpleserial/simpleserial.c **** 		else
 534              		.loc 1 314 29 view .LVU136
 535 0056 F5E7     		b	.L35
 536              	.LVL49:
 537              	.L30:
 320:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 538              		.loc 1 320 8 is_stmt 1 view .LVU137
 320:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'A' + 10) << 4;
 539              		.loc 1 320 10 is_stmt 0 view .LVU138
 540 0058 A3F14104 		sub	r4, r3, #65
 541 005c 052C     		cmp	r4, #5
 542 005e 02D8     		bhi	.L32
 321:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 543              		.loc 1 321 4 is_stmt 1 view .LVU139
 321:.././simpleserial/simpleserial.c **** 		else if(n_hi >= 'a' && n_hi <= 'f')
 544              		.loc 1 321 16 is_stmt 0 view .LVU140
 545 0060 A3F13704 		sub	r4, r3, #55
 546 0064 E2E7     		b	.L37
 547              	.L32:
 322:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 548              		.loc 1 322 8 is_stmt 1 view .LVU141
 322:.././simpleserial/simpleserial.c **** 			data_buf[i] |= (n_hi - 'a' + 10) << 4;
 549              		.loc 1 322 10 is_stmt 0 view .LVU142
 550 0066 A3F16104 		sub	r4, r3, #97
 551 006a 052C     		cmp	r4, #5
 552 006c F0D8     		bhi	.L33
 323:.././simpleserial/simpleserial.c **** 		else
 553              		.loc 1 323 4 is_stmt 1 view .LVU143
 323:.././simpleserial/simpleserial.c **** 		else
 554              		.loc 1 323 16 is_stmt 0 view .LVU144
 555 006e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 556 0070 573B     		subs	r3, r3, #87
 557              	.LVL50:
 323:.././simpleserial/simpleserial.c **** 		else
 558              		.loc 1 323 16 view .LVU145
 559 0072 44EA0313 		orr	r3, r4, r3, lsl #4
 560              	.LVL51:
 323:.././simpleserial/simpleserial.c **** 		else
 561              		.loc 1 323 16 view .LVU146
 562 0076 DCE7     		b	.L36
 563              	.LBE30:
 564              	.LBE33:
 565              		.cfi_endproc
 566              	.LFE4:
 568              		.section	.text.simpleserial_addcmd_flags,"ax",%progbits
 569              		.align	1
 570              		.global	simpleserial_addcmd_flags
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	simpleserial_addcmd_flags:
 576              	.LVL52:
 577              	.LFB7:
 348:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 578              		.loc 1 348 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 349:.././simpleserial/simpleserial.c **** 		return 1;
 582              		.loc 1 349 2 view .LVU148
 348:.././simpleserial/simpleserial.c **** 	if(num_commands >= MAX_SS_CMDS)
 583              		.loc 1 348 1 is_stmt 0 view .LVU149
 584 0000 70B5     		push	{r4, r5, r6, lr}
 585              	.LCFI11:
 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
 349:.././simpleserial/simpleserial.c **** 		return 1;
 591              		.loc 1 349 18 view .LVU150
 592 0002 094E     		ldr	r6, .L42
 593 0004 3468     		ldr	r4, [r6]
 349:.././simpleserial/simpleserial.c **** 		return 1;
 594              		.loc 1 349 4 view .LVU151
 595 0006 1F2C     		cmp	r4, #31
 596 0008 0BDC     		bgt	.L41
 352:.././simpleserial/simpleserial.c **** 		return 1;
 597              		.loc 1 352 2 is_stmt 1 view .LVU152
 352:.././simpleserial/simpleserial.c **** 		return 1;
 598              		.loc 1 352 4 is_stmt 0 view .LVU153
 599 000a 3F29     		cmp	r1, #63
 600 000c 09D8     		bhi	.L41
 355:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 601              		.loc 1 355 2 is_stmt 1 view .LVU154
 355:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 602              		.loc 1 355 29 is_stmt 0 view .LVU155
 603 000e 06EB0415 		add	r5, r6, r4, lsl #4
 357:.././simpleserial/simpleserial.c **** 	commands[num_commands].flags = fl;
 604              		.loc 1 357 29 view .LVU156
 605 0012 C5E90212 		strd	r1, r2, [r5, #8]
 359:.././simpleserial/simpleserial.c **** 
 606              		.loc 1 359 14 view .LVU157
 607 0016 0134     		adds	r4, r4, #1
 355:.././simpleserial/simpleserial.c **** 	commands[num_commands].len = len;
 608              		.loc 1 355 29 view .LVU158
 609 0018 2871     		strb	r0, [r5, #4]
 356:.././simpleserial/simpleserial.c **** 	commands[num_commands].fp  = fp;
 610              		.loc 1 356 2 is_stmt 1 view .LVU159
 358:.././simpleserial/simpleserial.c **** 	num_commands++;
 611              		.loc 1 358 2 view .LVU160
 358:.././simpleserial/simpleserial.c **** 	num_commands++;
 612              		.loc 1 358 31 is_stmt 0 view .LVU161
 613 001a 2B74     		strb	r3, [r5, #16]
 359:.././simpleserial/simpleserial.c **** 
 614              		.loc 1 359 2 is_stmt 1 view .LVU162
 359:.././simpleserial/simpleserial.c **** 
 615              		.loc 1 359 14 is_stmt 0 view .LVU163
 616 001c 3460     		str	r4, [r6]
 361:.././simpleserial/simpleserial.c **** }
 617              		.loc 1 361 2 is_stmt 1 view .LVU164
 361:.././simpleserial/simpleserial.c **** }
 618              		.loc 1 361 9 is_stmt 0 view .LVU165
 619 001e 0020     		movs	r0, #0
 620              	.LVL53:
 621              	.L38:
 362:.././simpleserial/simpleserial.c **** 
 622              		.loc 1 362 1 view .LVU166
 623 0020 70BD     		pop	{r4, r5, r6, pc}
 624              	.LVL54:
 625              	.L41:
 350:.././simpleserial/simpleserial.c **** 
 626              		.loc 1 350 10 view .LVU167
 627 0022 0120     		movs	r0, #1
 628              	.LVL55:
 350:.././simpleserial/simpleserial.c **** 
 629              		.loc 1 350 10 view .LVU168
 630 0024 FCE7     		b	.L38
 631              	.L43:
 632 0026 00BF     		.align	2
 633              	.L42:
 634 0028 00000000 		.word	.LANCHOR1
 635              		.cfi_endproc
 636              	.LFE7:
 638              		.section	.text.simpleserial_addcmd,"ax",%progbits
 639              		.align	1
 640              		.global	simpleserial_addcmd
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 645              	simpleserial_addcmd:
 646              	.LVL56:
 647              	.LFB6:
 343:.././simpleserial/simpleserial.c **** 	return simpleserial_addcmd_flags(c, len, fp, CMD_FLAG_NONE);
 648              		.loc 1 343 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 0
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              		@ link register save eliminated.
 344:.././simpleserial/simpleserial.c **** }
 653              		.loc 1 344 2 view .LVU170
 344:.././simpleserial/simpleserial.c **** }
 654              		.loc 1 344 9 is_stmt 0 view .LVU171
 655 0000 0023     		movs	r3, #0
 656 0002 FFF7FEBF 		b	simpleserial_addcmd_flags
 657              	.LVL57:
 344:.././simpleserial/simpleserial.c **** }
 658              		.loc 1 344 9 view .LVU172
 659              		.cfi_endproc
 660              	.LFE6:
 662              		.section	.text.simpleserial_init,"ax",%progbits
 663              		.align	1
 664              		.global	simpleserial_init
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 669              	simpleserial_init:
 670              	.LFB5:
 336:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 671              		.loc 1 336 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 337:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 675              		.loc 1 337 2 view .LVU174
 336:.././simpleserial/simpleserial.c **** 	simpleserial_addcmd('v', 0, check_version);
 676              		.loc 1 336 1 is_stmt 0 view .LVU175
 677 0000 08B5     		push	{r3, lr}
 678              	.LCFI12:
 679              		.cfi_def_cfa_offset 8
 680              		.cfi_offset 3, -8
 681              		.cfi_offset 14, -4
 337:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('w', 0, ss_get_commands);
 682              		.loc 1 337 2 view .LVU176
 683 0002 074A     		ldr	r2, .L46
 684 0004 0021     		movs	r1, #0
 685 0006 7620     		movs	r0, #118
 686 0008 FFF7FEFF 		bl	simpleserial_addcmd
 687              	.LVL58:
 338:.././simpleserial/simpleserial.c ****     simpleserial_addcmd('y', 0, ss_num_commands);
 688              		.loc 1 338 5 is_stmt 1 view .LVU177
 689 000c 054A     		ldr	r2, .L46+4
 690 000e 7720     		movs	r0, #119
 691 0010 FFF7FEFF 		bl	simpleserial_addcmd
 692              	.LVL59:
 339:.././simpleserial/simpleserial.c **** }
 693              		.loc 1 339 5 view .LVU178
 340:.././simpleserial/simpleserial.c **** 
 694              		.loc 1 340 1 is_stmt 0 view .LVU179
 695 0014 BDE80840 		pop	{r3, lr}
 696              	.LCFI13:
 697              		.cfi_restore 14
 698              		.cfi_restore 3
 699              		.cfi_def_cfa_offset 0
 339:.././simpleserial/simpleserial.c **** }
 700              		.loc 1 339 5 view .LVU180
 701 0018 034A     		ldr	r2, .L46+8
 702 001a 7920     		movs	r0, #121
 703 001c FFF7FEBF 		b	simpleserial_addcmd
 704              	.LVL60:
 705              	.L47:
 706              		.align	2
 707              	.L46:
 708 0020 00000000 		.word	check_version
 709 0024 00000000 		.word	ss_get_commands
 710 0028 00000000 		.word	ss_num_commands
 711              		.cfi_endproc
 712              	.LFE5:
 714              		.section	.text.simpleserial_get,"ax",%progbits
 715              		.align	1
 716              		.global	simpleserial_get
 717              		.syntax unified
 718              		.thumb
 719              		.thumb_func
 721              	simpleserial_get:
 722              	.LFB8:
 365:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 723              		.loc 1 365 1 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 200
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 366:.././simpleserial/simpleserial.c **** 	uint8_t data_buf[MAX_SS_LEN];
 727              		.loc 1 366 2 view .LVU182
 367:.././simpleserial/simpleserial.c **** 	char c;
 728              		.loc 1 367 2 view .LVU183
 368:.././simpleserial/simpleserial.c **** 
 729              		.loc 1 368 2 view .LVU184
 371:.././simpleserial/simpleserial.c **** 
 730              		.loc 1 371 2 view .LVU185
 365:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 731              		.loc 1 365 1 is_stmt 0 view .LVU186
 732 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 733              	.LCFI14:
 734              		.cfi_def_cfa_offset 24
 735              		.cfi_offset 4, -24
 736              		.cfi_offset 5, -20
 737              		.cfi_offset 6, -16
 738              		.cfi_offset 7, -12
 739              		.cfi_offset 8, -8
 740              		.cfi_offset 14, -4
 374:.././simpleserial/simpleserial.c **** 	{
 741              		.loc 1 374 19 discriminator 1 view .LVU187
 742 0004 2C4D     		ldr	r5, .L72
 365:.././simpleserial/simpleserial.c **** 	char ascii_buf[2*MAX_SS_LEN];
 743              		.loc 1 365 1 view .LVU188
 744 0006 B2B0     		sub	sp, sp, #200
 745              	.LCFI15:
 746              		.cfi_def_cfa_offset 224
 371:.././simpleserial/simpleserial.c **** 
 747              		.loc 1 371 6 view .LVU189
 748 0008 FFF7FEFF 		bl	getch
 749              	.LVL61:
 373:.././simpleserial/simpleserial.c **** 	for(cmd = 0; cmd < num_commands; cmd++)
 750              		.loc 1 373 2 is_stmt 1 view .LVU190
 374:.././simpleserial/simpleserial.c **** 	{
 751              		.loc 1 374 2 view .LVU191
 374:.././simpleserial/simpleserial.c **** 	{
 752              		.loc 1 374 19 is_stmt 0 discriminator 1 view .LVU192
 753 000c 2A46     		mov	r2, r5
 374:.././simpleserial/simpleserial.c **** 	{
 754              		.loc 1 374 10 view .LVU193
 755 000e 0023     		movs	r3, #0
 374:.././simpleserial/simpleserial.c **** 	{
 756              		.loc 1 374 19 discriminator 1 view .LVU194
 757 0010 52F8041B 		ldr	r1, [r2], #4
 758              	.LVL62:
 759              	.L49:
 374:.././simpleserial/simpleserial.c **** 	{
 760              		.loc 1 374 19 is_stmt 1 discriminator 1 view .LVU195
 761 0014 9942     		cmp	r1, r3
 762 0016 3FDC     		bgt	.L51
 381:.././simpleserial/simpleserial.c **** 		return;
 763              		.loc 1 381 2 view .LVU196
 381:.././simpleserial/simpleserial.c **** 		return;
 764              		.loc 1 381 4 is_stmt 0 view .LVU197
 765 0018 3BD0     		beq	.L48
 766              	.L50:
 385:.././simpleserial/simpleserial.c **** 	{
 767              		.loc 1 385 2 is_stmt 1 view .LVU198
 385:.././simpleserial/simpleserial.c **** 	{
 768              		.loc 1 385 20 is_stmt 0 view .LVU199
 769 001a 05EB0314 		add	r4, r5, r3, lsl #4
 770 001e 1E01     		lsls	r6, r3, #4
 385:.././simpleserial/simpleserial.c **** 	{
 771              		.loc 1 385 5 view .LVU200
 772 0020 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 773              	.LVL63:
 385:.././simpleserial/simpleserial.c **** 	{
 774              		.loc 1 385 5 view .LVU201
 775 0022 DB07     		lsls	r3, r3, #31
 776 0024 13D5     		bpl	.L53
 777              	.LBB34:
 387:.././simpleserial/simpleserial.c **** 		char buff[2];
 778              		.loc 1 387 3 is_stmt 1 view .LVU202
 387:.././simpleserial/simpleserial.c **** 		char buff[2];
 779              		.loc 1 387 11 is_stmt 0 view .LVU203
 780 0026 0023     		movs	r3, #0
 781 0028 8DF80830 		strb	r3, [sp, #8]
 388:.././simpleserial/simpleserial.c **** 		buff[0] = getch();
 782              		.loc 1 388 3 is_stmt 1 view .LVU204
 389:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 783              		.loc 1 389 3 view .LVU205
 389:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 784              		.loc 1 389 13 is_stmt 0 view .LVU206
 785 002c FFF7FEFF 		bl	getch
 786              	.LVL64:
 389:.././simpleserial/simpleserial.c **** 		buff[1] = getch();
 787              		.loc 1 389 11 discriminator 1 view .LVU207
 788 0030 8DF84800 		strb	r0, [sp, #72]
 390:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 789              		.loc 1 390 3 is_stmt 1 view .LVU208
 390:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 790              		.loc 1 390 13 is_stmt 0 view .LVU209
 791 0034 FFF7FEFF 		bl	getch
 792              	.LVL65:
 391:.././simpleserial/simpleserial.c **** 			return;
 793              		.loc 1 391 7 view .LVU210
 794 0038 02AA     		add	r2, sp, #8
 390:.././simpleserial/simpleserial.c **** 		if (hex_decode(1, buff, &l))
 795              		.loc 1 390 11 discriminator 1 view .LVU211
 796 003a 8DF84900 		strb	r0, [sp, #73]
 391:.././simpleserial/simpleserial.c **** 			return;
 797              		.loc 1 391 3 is_stmt 1 view .LVU212
 391:.././simpleserial/simpleserial.c **** 			return;
 798              		.loc 1 391 7 is_stmt 0 view .LVU213
 799 003e 12A9     		add	r1, sp, #72
 800 0040 0120     		movs	r0, #1
 801 0042 FFF7FEFF 		bl	hex_decode
 802              	.LVL66:
 391:.././simpleserial/simpleserial.c **** 			return;
 803              		.loc 1 391 6 discriminator 1 view .LVU214
 804 0046 20BB     		cbnz	r0, .L48
 393:.././simpleserial/simpleserial.c **** 	}
 805              		.loc 1 393 3 is_stmt 1 view .LVU215
 393:.././simpleserial/simpleserial.c **** 	}
 806              		.loc 1 393 21 is_stmt 0 view .LVU216
 807 0048 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 808 004c A360     		str	r3, [r4, #8]
 809              	.L53:
 810 004e 12AF     		add	r7, sp, #72
 811              	.LBE34:
 374:.././simpleserial/simpleserial.c **** 	{
 812              		.loc 1 374 10 view .LVU217
 813 0050 0024     		movs	r4, #0
 814              	.LBB35:
 397:.././simpleserial/simpleserial.c **** 	{
 815              		.loc 1 397 36 discriminator 1 view .LVU218
 816 0052 05EB0608 		add	r8, r5, r6
 817              	.LVL67:
 818              	.L56:
 397:.././simpleserial/simpleserial.c **** 	{
 819              		.loc 1 397 19 is_stmt 1 discriminator 1 view .LVU219
 397:.././simpleserial/simpleserial.c **** 	{
 820              		.loc 1 397 22 is_stmt 0 discriminator 1 view .LVU220
 821 0056 D8F80830 		ldr	r3, [r8, #8]
 397:.././simpleserial/simpleserial.c **** 	{
 822              		.loc 1 397 19 discriminator 1 view .LVU221
 823 005a B4EB430F 		cmp	r4, r3, lsl #1
 824 005e 21D3     		bcc	.L57
 825              	.LBE35:
 409:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 826              		.loc 1 409 2 is_stmt 1 view .LVU222
 409:.././simpleserial/simpleserial.c **** 	if(c != '\n' && c != '\r')
 827              		.loc 1 409 6 is_stmt 0 view .LVU223
 828 0060 FFF7FEFF 		bl	getch
 829              	.LVL68:
 410:.././simpleserial/simpleserial.c **** 		return;
 830              		.loc 1 410 2 is_stmt 1 view .LVU224
 410:.././simpleserial/simpleserial.c **** 		return;
 831              		.loc 1 410 4 is_stmt 0 view .LVU225
 832 0064 0A28     		cmp	r0, #10
 833 0066 01D0     		beq	.L58
 410:.././simpleserial/simpleserial.c **** 		return;
 834              		.loc 1 410 15 discriminator 1 view .LVU226
 835 0068 0D28     		cmp	r0, #13
 836 006a 12D1     		bne	.L48
 837              	.L58:
 415:.././simpleserial/simpleserial.c **** 		return;
 838              		.loc 1 415 2 is_stmt 1 view .LVU227
 415:.././simpleserial/simpleserial.c **** 		return;
 839              		.loc 1 415 29 is_stmt 0 view .LVU228
 840 006c 3544     		add	r5, r5, r6
 415:.././simpleserial/simpleserial.c **** 		return;
 841              		.loc 1 415 5 view .LVU229
 842 006e 02AA     		add	r2, sp, #8
 415:.././simpleserial/simpleserial.c **** 		return;
 843              		.loc 1 415 29 view .LVU230
 844 0070 AC68     		ldr	r4, [r5, #8]
 845              	.LVL69:
 415:.././simpleserial/simpleserial.c **** 		return;
 846              		.loc 1 415 5 view .LVU231
 847 0072 12A9     		add	r1, sp, #72
 848 0074 2046     		mov	r0, r4
 849              	.LVL70:
 415:.././simpleserial/simpleserial.c **** 		return;
 850              		.loc 1 415 5 view .LVU232
 851 0076 FFF7FEFF 		bl	hex_decode
 852              	.LVL71:
 415:.././simpleserial/simpleserial.c **** 		return;
 853              		.loc 1 415 4 discriminator 1 view .LVU233
 854 007a 50B9     		cbnz	r0, .L48
 419:.././simpleserial/simpleserial.c **** 	ret[0] = commands[cmd].fp(data_buf, commands[cmd].len);
 855              		.loc 1 419 2 is_stmt 1 view .LVU234
 420:.././simpleserial/simpleserial.c **** 
 856              		.loc 1 420 2 view .LVU235
 420:.././simpleserial/simpleserial.c **** 
 857              		.loc 1 420 11 is_stmt 0 view .LVU236
 858 007c E1B2     		uxtb	r1, r4
 859 007e EB68     		ldr	r3, [r5, #12]
 860 0080 02A8     		add	r0, sp, #8
 861 0082 9847     		blx	r3
 862              	.LVL72:
 863              	.LBB36:
 864              	.LBB37:
 865 0084 01AA     		add	r2, sp, #4
 866              	.LBE37:
 867              	.LBE36:
 420:.././simpleserial/simpleserial.c **** 
 868              		.loc 1 420 9 discriminator 1 view .LVU237
 869 0086 8DF80400 		strb	r0, [sp, #4]
 424:.././simpleserial/simpleserial.c **** #endif
 870              		.loc 1 424 2 is_stmt 1 view .LVU238
 871              	.LVL73:
 872              	.LBB39:
 873              	.LBI36:
 428:.././simpleserial/simpleserial.c **** {
 874              		.loc 1 428 6 view .LVU239
 875              	.LBB38:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 876              		.loc 1 431 5 view .LVU240
 877 008a 0121     		movs	r1, #1
 878 008c 7A20     		movs	r0, #122
 879 008e FFF7FEFF 		bl	simpleserial_put.part.0
 880              	.LVL74:
 881              	.L48:
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 882              		.loc 1 431 5 is_stmt 0 view .LVU241
 883              	.LBE38:
 884              	.LBE39:
 426:.././simpleserial/simpleserial.c **** 
 885              		.loc 1 426 1 view .LVU242
 886 0092 32B0     		add	sp, sp, #200
 887              	.LCFI16:
 888              		.cfi_remember_state
 889              		.cfi_def_cfa_offset 24
 890              		@ sp needed
 891 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 892              	.LVL75:
 893              	.L51:
 894              	.LCFI17:
 895              		.cfi_restore_state
 376:.././simpleserial/simpleserial.c **** 			break;
 896              		.loc 1 376 3 is_stmt 1 view .LVU243
 376:.././simpleserial/simpleserial.c **** 			break;
 897              		.loc 1 376 19 is_stmt 0 view .LVU244
 898 0098 1C01     		lsls	r4, r3, #4
 376:.././simpleserial/simpleserial.c **** 			break;
 899              		.loc 1 376 5 view .LVU245
 900 009a A45C     		ldrb	r4, [r4, r2]	@ zero_extendqisi2
 901 009c 8442     		cmp	r4, r0
 902 009e BCD0     		beq	.L50
 374:.././simpleserial/simpleserial.c **** 	{
 903              		.loc 1 374 38 is_stmt 1 discriminator 2 view .LVU246
 904 00a0 0133     		adds	r3, r3, #1
 905              	.LVL76:
 374:.././simpleserial/simpleserial.c **** 	{
 906              		.loc 1 374 38 is_stmt 0 discriminator 2 view .LVU247
 907 00a2 B7E7     		b	.L49
 908              	.LVL77:
 909              	.L57:
 910              	.LBB40:
 399:.././simpleserial/simpleserial.c **** 
 911              		.loc 1 399 3 is_stmt 1 view .LVU248
 399:.././simpleserial/simpleserial.c **** 
 912              		.loc 1 399 7 is_stmt 0 view .LVU249
 913 00a4 FFF7FEFF 		bl	getch
 914              	.LVL78:
 402:.././simpleserial/simpleserial.c **** 			return;
 915              		.loc 1 402 3 is_stmt 1 view .LVU250
 402:.././simpleserial/simpleserial.c **** 			return;
 916              		.loc 1 402 5 is_stmt 0 view .LVU251
 917 00a8 0A28     		cmp	r0, #10
 918 00aa F2D0     		beq	.L48
 402:.././simpleserial/simpleserial.c **** 			return;
 919              		.loc 1 402 16 discriminator 1 view .LVU252
 920 00ac 0D28     		cmp	r0, #13
 921 00ae F0D0     		beq	.L48
 405:.././simpleserial/simpleserial.c **** 	}
 922              		.loc 1 405 3 is_stmt 1 view .LVU253
 405:.././simpleserial/simpleserial.c **** 	}
 923              		.loc 1 405 16 is_stmt 0 view .LVU254
 924 00b0 07F8010B 		strb	r0, [r7], #1
 397:.././simpleserial/simpleserial.c **** 	{
 925              		.loc 1 397 43 is_stmt 1 discriminator 2 view .LVU255
 926 00b4 0134     		adds	r4, r4, #1
 927              	.LVL79:
 397:.././simpleserial/simpleserial.c **** 	{
 928              		.loc 1 397 43 is_stmt 0 discriminator 2 view .LVU256
 929 00b6 CEE7     		b	.L56
 930              	.L73:
 931              		.align	2
 932              	.L72:
 933 00b8 00000000 		.word	.LANCHOR1
 934              	.LBE40:
 935              		.cfi_endproc
 936              	.LFE8:
 938              		.section	.text.simpleserial_put,"ax",%progbits
 939              		.align	1
 940              		.global	simpleserial_put
 941              		.syntax unified
 942              		.thumb
 943              		.thumb_func
 945              	simpleserial_put:
 946              	.LVL80:
 947              	.LFB9:
 429:.././simpleserial/simpleserial.c **** 	// Write first character
 948              		.loc 1 429 1 is_stmt 1 view -0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              		@ link register save eliminated.
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 953              		.loc 1 431 5 view .LVU258
 431:.././simpleserial/simpleserial.c **** 	putch(c);
 954              		.loc 1 431 8 is_stmt 0 view .LVU259
 955 0000 0AB1     		cbz	r2, .L74
 956 0002 FFF7FEBF 		b	simpleserial_put.part.0
 957              	.LVL81:
 958              	.L74:
 959              		.loc 1 443 1 view .LVU260
 960 0006 7047     		bx	lr
 961              		.cfi_endproc
 962              	.LFE9:
 964              		.section	.rodata
 965              		.set	.LANCHOR0,. + 0
 968              	hex_lookup:
 969 0000 30313233 		.ascii	"0123456789ABCDEF"
 969      34353637 
 969      38394142 
 969      43444546 
 970              		.bss
 971              		.align	2
 972              		.set	.LANCHOR1,. + 0
 975              	num_commands:
 976 0000 00000000 		.space	4
 979              	commands:
 980 0004 00000000 		.space	512
 980      00000000 
 980      00000000 
 980      00000000 
 980      00000000 
 981              		.text
 982              	.Letext0:
 983              		.file 2 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 984              		.file 3 ".././hal/stm32f3/stm32f3_hal.h"
DEFINED SYMBOLS
                            *ABS*:00000000 simpleserial.c
     /tmp/ccN9b6nW.s:19     .text.check_version:00000000 $t
     /tmp/ccN9b6nW.s:25     .text.check_version:00000000 check_version
     /tmp/ccN9b6nW.s:43     .text.simpleserial_put.part.0:00000000 $t
     /tmp/ccN9b6nW.s:48     .text.simpleserial_put.part.0:00000000 simpleserial_put.part.0
     /tmp/ccN9b6nW.s:129    .text.simpleserial_put.part.0:0000003c $d
     /tmp/ccN9b6nW.s:135    .text.ss_num_commands:00000000 $t
     /tmp/ccN9b6nW.s:141    .text.ss_num_commands:00000000 ss_num_commands
     /tmp/ccN9b6nW.s:192    .text.ss_num_commands:00000020 $d
     /tmp/ccN9b6nW.s:197    .text.ss_get_commands:00000000 $t
     /tmp/ccN9b6nW.s:203    .text.ss_get_commands:00000000 ss_get_commands
     /tmp/ccN9b6nW.s:316    .text.ss_get_commands:0000004c $d
     /tmp/ccN9b6nW.s:322    .text.ss_crc:00000000 $t
     /tmp/ccN9b6nW.s:328    .text.ss_crc:00000000 ss_crc
     /tmp/ccN9b6nW.s:398    .text.hex_decode:00000000 $t
     /tmp/ccN9b6nW.s:404    .text.hex_decode:00000000 hex_decode
     /tmp/ccN9b6nW.s:569    .text.simpleserial_addcmd_flags:00000000 $t
     /tmp/ccN9b6nW.s:575    .text.simpleserial_addcmd_flags:00000000 simpleserial_addcmd_flags
     /tmp/ccN9b6nW.s:634    .text.simpleserial_addcmd_flags:00000028 $d
     /tmp/ccN9b6nW.s:639    .text.simpleserial_addcmd:00000000 $t
     /tmp/ccN9b6nW.s:645    .text.simpleserial_addcmd:00000000 simpleserial_addcmd
     /tmp/ccN9b6nW.s:663    .text.simpleserial_init:00000000 $t
     /tmp/ccN9b6nW.s:669    .text.simpleserial_init:00000000 simpleserial_init
     /tmp/ccN9b6nW.s:708    .text.simpleserial_init:00000020 $d
     /tmp/ccN9b6nW.s:715    .text.simpleserial_get:00000000 $t
     /tmp/ccN9b6nW.s:721    .text.simpleserial_get:00000000 simpleserial_get
     /tmp/ccN9b6nW.s:933    .text.simpleserial_get:000000b8 $d
     /tmp/ccN9b6nW.s:939    .text.simpleserial_put:00000000 $t
     /tmp/ccN9b6nW.s:945    .text.simpleserial_put:00000000 simpleserial_put
     /tmp/ccN9b6nW.s:968    .rodata:00000000 hex_lookup
     /tmp/ccN9b6nW.s:971    .bss:00000000 $d
     /tmp/ccN9b6nW.s:975    .bss:00000000 num_commands
     /tmp/ccN9b6nW.s:979    .bss:00000004 commands

UNDEFINED SYMBOLS
putch
getch
